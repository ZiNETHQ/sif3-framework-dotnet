<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Sif.Framework</name>
  </assembly>
  <members>
    <member name="T:Sif.Framework.Consumers.FunctionalServiceConsumer">
      <summary>
            The base class for all Functional Service consumers
            </summary>
    </member>
    <member name="P:Sif.Framework.Consumers.FunctionalServiceConsumer.EnvironmentTemplate">
      <summary>
            Consumer environment template
            </summary>
    </member>
    <member name="P:Sif.Framework.Consumers.FunctionalServiceConsumer.RegistrationService">
      <summary>
            Service for Consumer registration.
            </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor(Sif.Framework.Model.Infrastructure.Environment)">
      <summary>
            Create a Consumer instance based upon the Environment passed.
            </summary>
      <param name="environment">Environment object.</param>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
            Create a Consumer instance identified by the parameters passed.
            </summary>
      <param name="applicationKey">Application key.</param>
      <param name="instanceId">Instance ID.</param>
      <param name="userToken">User token.</param>
      <param name="solutionId">Solution ID.</param>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.checkRegistered">
      <summary>
            Convenience method to check if the Consumer is registered, throwing a standardised invalid operation exception if not.
            </summary>
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseSingle``2(``0)">
      <summary>
            Serialise a single entity.
            </summary>
      <param name="item">Payload of a single entity.</param>
      <returns>XML string representation of the single entity.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseMultiple(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Infrastructure.Job})">
      <summary>
            Serialise an entity of multiple entities.
            </summary>
      <param name="items">Payload of multiple entities.</param>
      <returns>XML string representation of the multiple entities.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseSingle``2(System.String)">
      <summary>
            Deserialise a single entity.
            </summary>
      <param name="payload">Payload of a single entity.</param>
      <returns>The deserialised single entity.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseMultiple``2(System.String)">
      <summary>
            Deserialise an entity of multiple jobs.
            </summary>
      <param name="payload">Payload of multiple jobs.</param>
      <returns>Entity representing multiple jobs.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Register">
      <summary>
            Register this Consumer.
            </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Unregister(System.Nullable{System.Boolean})">
      <summary>
            Unregister this Consumer.
            </summary>
      <param name="deleteOnUnregister">
      </param>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.GetURLPrefix(System.String)">
      <summary>
            Gets the URL of the functional service for the specified job name.
            </summary>
      <param name="jobName">The jon name to build a URL for.</param>
      <returns>A string in the form {http/https}://{domain:port}/{servicesConnectorPath}/{jobName}s.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)">
      <summary>
            Create a single Job with the defaults provided, and persist it to the data store
            </summary>
      <param name="job">Job object with defaults to use when creating the Job</param>
      <param name="zone">The zone in which to create the Job</param>
      <param name="context">The context in which to create the Job</param>
      <returns>The created Job object</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)">
      <summary>
            Create a multiple Jobs with the defaults provided, and persist it to the data store
            </summary>
      <param name="jobs">Job objects with defaults to use when creating the Jobs</param>
      <param name="zone">The zone in which to create the Jobs</param>
      <param name="context">The context in which to create the Jobs</param>
      <returns>A MultipleCreateResponse object</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.GetCreated(Sif.Framework.Model.Responses.MultipleCreateResponse,System.String,System.String,System.String)">
      <summary>
            Convenience method that processes a MultipleCreateResponse message and fetches all successfully created jobs. It does this by issuing multiple individual query requests for any create status codes that start with a "2" (OK, Created, etc.).
            </summary>
      <param name="creates">A MutilpleCreateResponse object to parse</param>
      <param name="jobName">The job name (singular) that the MultipleCreateResponse refers to</param>
      <param name="zone">The zone in which to fetch the Jobs</param>
      <param name="context">The context in which to fetch the Jobs</param>
      <returns>The created Job objects</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)">
      <summary>
            Get a single Job
            </summary>
      <param name="job">The job template of the Job to fetch, must have name and id properties populated.</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
      <returns>The Job object</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
            Get a all Jobs
            </summary>
      <param name="jobName">The name of the job used to resolve the right functional service</param>
      <param name="navigationPage">The page to fetch</param>
      <param name="navigationPageSize">The number of items to fetch per page</param>
      <param name="zone">The zone in which to operate</param>
      <param name="context">The context in which to operate</param>
      <returns>A page of Job objects</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.QueryByExample(Sif.Framework.Model.Infrastructure.Job,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
            Get a all Jobs that match the example provided.
            </summary>
      <param name="job">The example object to match against</param>
      <param name="navigationPage">The page to fetch</param>
      <param name="navigationPageSize">The number of items to fetch per page</param>
      <param name="zone">The zone in which to operate</param>
      <param name="context">The context in which to operate</param>
      <returns>A page of Job objects</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)">
      <summary>
            Update single job object is not supported for Functional Services. Throws a HttpResponseException with Forbidden status code.
            </summary>
      <param name="job">Job object to update</param>
      <param name="zone">The zone in which to update the Job</param>
      <param name="context">The context in which to update the Job</param>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)">
      <summary>
            Update multiple job objects is not supported for Functional Services. Throws a HttpResponseException with Forbidden status code.
            </summary>
      <param name="jobs">Job objects to update</param>
      <param name="zone">The zone in which to update the Jobs</param>
      <param name="context">The context in which to update the Jobs</param>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)">
      <summary>
            Delete a Job
            </summary>
      <param name="job">The job template of the Job to delete, must have name and id populated.</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)">
      <summary>
            Delete a series of Job objects
            </summary>
      <param name="jobs">The job objtect templates of the Jobs to delete, each must have name and id populated. tHe name of all jobs must be the same.</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
      <returns>A response</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.CreateToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Send a create operation to a specified phase on the specified job.
            </summary>
      <param name="job">The Job on which to execute the phase</param>
      <param name="phaseName">The name of the phase</param>
      <param name="body">The payload to send to the phase</param>
      <param name="zone">The zone in which to operate</param>
      <param name="context">The context in which to operate</param>
      <param name="contentTypeOverride">The mime type of the data to be sent</param>
      <param name="acceptOverride">The expected mime type of the result</param>
      <returns>A string, possibly containing a serialized object, returned from the functional service</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.RetrieveToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Send a retrieve operation to a specified phase on the specified job.
            </summary>
      <param name="job">The Job on which to execute the phase</param>
      <param name="phaseName">The name of the phase</param>
      <param name="body">The payload to send to the phase</param>
      <param name="zone">The zone in which to operate</param>
      <param name="context">The context in which to operate</param>
      <param name="contentTypeOverride">The mime type of the data to be sent</param>
      <param name="acceptOverride">The expected mime type of the result</param>
      <returns>A string, possibly containing a serialized object, returned from the functional service</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.UpdateToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Send a update operation to a specified phase on the specified job.
            </summary>
      <param name="job">The Job on which to execute the phase</param>
      <param name="phaseName">The name of the phase</param>
      <param name="body">The payload to send to the phase</param>
      <param name="zone">The zone in which to operate</param>
      <param name="context">The context in which to operate</param>
      <param name="contentTypeOverride">The mime type of the data to be sent</param>
      <param name="acceptOverride">The expected mime type of the result</param>
      <returns>A string, possibly containing a serialized object, returned from the functional service</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeleteToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Send a delete operation to a specified phase on the specified job.
            </summary>
      <param name="job">The Job on which to execute the phase</param>
      <param name="phaseName">The name of the phase</param>
      <param name="body">The payload to send to the phase</param>
      <param name="zone">The zone in which to operate</param>
      <param name="context">The context in which to operate</param>
      <param name="contentTypeOverride">The mime type of the data to be sent</param>
      <param name="acceptOverride">The expected mime type of the result</param>
      <returns>A string, possibly containing a serialized object, returned from the functional service</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.FunctionalServiceConsumer.CreateToState(Sif.Framework.Model.Infrastructure.Job,System.String,Sif.Framework.Model.Infrastructure.PhaseState,System.String,System.String)">
      <summary>
            Send a create operation to  the state of the specified phase on the specified job.
            </summary>
      <param name="job">The Job on which to operate</param>
      <param name="phaseName">The name of the phase whose state is to change</param>
      <param name="item">The PhaseState instance template</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
      <returns>The current state of the phase.</returns>
    </member>
    <member name="T:Sif.Framework.Consumers.IBasicConsumer`1">
      <summary>
            This is a convenience interface for Consumers of SIF data model objects whereby the primary key is of type
            System.String and the multiple objects entity is represented as a list of single objects.
            </summary>
      <typeparam name="T">Type that defines a SIF data model object.</typeparam>
    </member>
    <member name="T:Sif.Framework.Consumers.BasicConsumer`1">
      <summary>
            This is a convenience class for Consumers of SIF data model objects whereby the primary key is of type
            System.String and the multiple objects entity is represented as a list of single objects.
            </summary>
      <typeparam name="T">Type that defines a SIF data model object.</typeparam>
    </member>
    <member name="M:Sif.Framework.Consumers.BasicConsumer`1.#ctor(Sif.Framework.Model.Infrastructure.Environment)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.Consumer`3.#ctor(Sif.Framework.Model.Infrastructure.Environment)">Consumer</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.BasicConsumer`1.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.Consumer`3.#ctor(System.String,System.String,System.String,System.String)">Consumer</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.BasicConsumer`1.SerialiseMultiple(System.Collections.Generic.List{`0})">
      <summary>
        <see cref="M:Sif.Framework.Consumers.Consumer`3.SerialiseMultiple(`1)">SerialiseMultiple</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.BasicConsumer`1.DeserialiseMultiple(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.Consumer`3.DeserialiseMultiple(System.String)">DeserialiseMultiple</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Consumers.Consumer`3">
      <summary>
            This class defines a Consumer of SIF data model objects.
            </summary>
      <typeparam name="TSingle">Type that defines a single object entity.</typeparam>
      <typeparam name="TMultiple">Type that defines a multiple objects entity.</typeparam>
      <typeparam name="TPrimaryKey">Primary key type of the SIF data model object.</typeparam>
    </member>
    <member name="P:Sif.Framework.Consumers.Consumer`3.EnvironmentTemplate">
      <summary>
            Consumer environment.
            </summary>
    </member>
    <member name="P:Sif.Framework.Consumers.Consumer`3.RegistrationService">
      <summary>
            Service for Consumer registration.
            </summary>
    </member>
    <member name="P:Sif.Framework.Consumers.Consumer`3.TypeName">
      <summary>
            Name of the SIF data model that the Consumer is based on, e.g. SchoolInfo, StudentPersonal, etc.
            </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.#ctor(Sif.Framework.Model.Infrastructure.Environment)">
      <summary>
            Create a Consumer instance based upon the Environment passed.
            </summary>
      <param name="environment">Environment object.</param>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
            Create a Consumer instance identified by the parameters passed.
            </summary>
      <param name="applicationKey">Application key.</param>
      <param name="instanceId">Instance ID.</param>
      <param name="userToken">User token.</param>
      <param name="solutionId">Solution ID.</param>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.MatrixParameters(System.String,System.String)">
      <summary>
            Build up a string of Matrix Parameters based upon the passed parameters.
            </summary>
      <param name="zone">Zone associated with a request.</param>
      <param name="context">Zone context.</param>
      <returns>String of Matrix Parameters.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.SerialiseSingle(`0)">
      <summary>
        <see cref="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)">SerialiseSingle</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.SerialiseMultiple(`1)">
      <summary>
        <see cref="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)">SerialiseMultiple</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.DeserialiseSingle(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)">DeserialiseSingle</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.DeserialiseMultiple(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)">DeserialiseMultiple</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Register">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Register">Register</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Unregister(System.Nullable{System.Boolean})">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Unregister(System.Nullable{System.Boolean})">Unregister</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Create(`0,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)">Create</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Create(`1,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)">Create</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Query(`2,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)">Query</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">Query</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">Query</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">Query</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Update(`0,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)">Update</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Update(`1,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)">Update</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Delete(`2,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)">Delete</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.Consumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)">Delete</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Consumers.IConsumer`3">
      <summary>
            This interface defines the operations available for Consumers of SIF data model objects.
            <para>Note that due to XML serialisation constraints, the TSingle and TMultiple generic types should not be
            interfaces. For instance, TMultiple should NOT be of type IEnumerable.</para></summary>
      <typeparam name="TSingle">Type that defines a single object entity.</typeparam>
      <typeparam name="TMultiple">Type that defines a multiple objects entity.</typeparam>
      <typeparam name="TPrimaryKey">Primary key type of the SIF data model object.</typeparam>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Register">
      <summary>
            This method must be called before any other.
            </summary>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Unregister(System.Nullable{System.Boolean})">
      <summary>
            This method should be called on completion.
            </summary>
      <param name="deleteOnUnregister">True to remove session data on unregister; false to leave session data.</param>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)">
      <summary>
            Create a single object.
            <para>POST /StudentPersonals/StudentPersonal</para></summary>
      <param name="obj">Object to create.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Created object.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)">
      <summary>
            Create multiple objects.
            <para>POST /StudentPersonals</para></summary>
      <param name="obj">Object (multiple object entity) to create.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Response containing status of each object created.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)">
      <summary>
            Retrieve a single object.
            <para>GET /StudentPersonals/{id}</para></summary>
      <param name="refId">SIF identifier of the object.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Retrieved object.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
            Retrieve all objects.
            <para>GET /StudentPersonals</para></summary>
      <param name="navigationPage">Current paging index.</param>
      <param name="navigationPageSize">Page size.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Retrieved objects.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
            Retrieve multiple objects using Query by Example.
            <para>POST /StudentPersonals (methodOverride: GET)</para></summary>
      <param name="obj">Example object.</param>
      <param name="navigationPage">Current paging index.</param>
      <param name="navigationPageSize">Page size.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Retrieved objects.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
            Retrieve multiple objects using Service Paths.
            <para>GET api/{object1}/{id1}/{controller}</para><para>GET api/{object1}/{id1}/{object2}/{id2}/{controller}</para><para>GET api/{object1}/{id1}/{object2}/{id2}/{object3}/{id3}/{controller}</para></summary>
      <param name="conditions">Service Path conditions.</param>
      <param name="navigationPage">Current paging index.</param>
      <param name="navigationPageSize">Page size.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Retrieved objects.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)">
      <summary>
            Update a single object.
            <para>PUT /StudentPersonals/{id}</para></summary>
      <param name="obj">Object to update.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)">
      <summary>
            Update multiple objects.
            <para>PUT /StudentPersonals</para></summary>
      <param name="obj">Object (multiple object entity) to update.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Response containing status of each object updated.</returns>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)">
      <summary>
            Delete a single object.
            <para>DELETE /StudentPersonals/{id}</para></summary>
      <param name="refId">SIF identifier of the object.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
    </member>
    <member name="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)">
      <summary>
            Delete multiple objects.
            <para>PUT /StudentPersonals (methodOverride: DELETE)</para></summary>
      <param name="refIds">SIF identifiers of the objects.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Response containing status of each object deleted.</returns>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.SifObjectBinding.Id">
      <summary>
            Internal identifier used by hibernate. Do not use/alter this.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.SifObjectBinding.RefId">
      <summary>
            The ref id of the object to be bound
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.SifObjectBinding.OwnerId">
      <summary>
            The id of the owner of the object (application key, source id, etc.)
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Infrastructure.PhaseState">
      <summary>
            Object representing the state of a phase
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.PhaseState.Id">
      <summary>
            The RefId of this object
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.PhaseState.Type">
      <summary>
            The type of the phase state
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.PhaseState.Created">
      <summary>
            When this phase state was created
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.PhaseState.LastModified">
      <summary>
            When this phase state was last modified
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.PhaseState.Description">
      <summary>
            The description of this phase state
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.PhaseState.#ctor">
      <summary>
            Basic constructor that sets logical defaults of this phase state
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.PhaseState.#ctor(Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)">
      <summary>
            Constructor that takes a phase type and optional description arguments
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.ApplicationKey">
      <summary>
            An opaque (to the SIF standard) element which contains any required Consumer authentication information.
            The content of this element is site-specific.  For a Direct Environment which accepts Consumer Registration
            Requests from a mobile application, this element might contain a combination of the User ID and Password.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.SupportedInfrastructureVersion">
      <summary>
            The version of the SIF infrastructure which the Consumer supports.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.Transport">
      <summary>
            The transport which the Consumer expects the infrastructure to use to interoperate with it.  The default is
            whichever transport the create request was issued on
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Infrastructure.Phase">
      <summary>
            The following Phase elements/properties are mandatory according to the SIF specification:
            /phase/name
            /phase/state
            /phase/required
            /phase/rights
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Phase.Id">
      <summary>
            The ID of the phase, required for persistance in Hibernate
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Phase.Name">
      <summary>
            The name of the Phase unique within the context of the owning job.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Phase.States">
      <summary>
            A collection of states for the this phase, the last of which is the current phase state.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Phase.Required">
      <summary>
            Whether or not this phase is required for the job to complete successfully.
            Note that it is up to the logic contained in the IPhaseAction implementations that decide how to use this property.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Phase.Rights">
      <summary>
            Access rights given to the consumer for this phase.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Phase.StatesRights">
      <summary>
            Access rights given to the consumer for the states in this phase.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Phase.#ctor">
      <summary>
            Basic constructor that sets logical default values
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Phase.#ctor(System.String,System.Boolean)">
      <summary>
            Constructor that takes a phase name and if the phase is required or not.
            </summary>
      <param name="name">Name of the Phase.</param>
      <param name="required">If the Phase is required or not. Default is false.</param>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Phase.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)">
      <summary>
            Constructor that takes a phase name, if it's required, a set of rights information, and initial state information.
            </summary>
      <param name="phaseName">The name of the phase</param>
      <param name="required">If this phase is required to complete for the job to complete</param>
      <param name="rights">Access rights for the phase</param>
      <param name="stateRights">Access rights for the states on this phase</param>
      <param name="phaseState">The initial state of the phase</param>
      <param name="stateDescription">The initial state descritpion for the phase</param>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Phase.UpdateState(Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)">
      <summary>
            Changes the state of the phase
            </summary>
      <param name="type">The state to set</param>
      <param name="description">The optional description to set</param>
      <returns>The current state of the phase</returns>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Phase.GetCurrentState">
      <summary>
            Get the most recent/current/last state of this phase. 
            </summary>
      <returns>The last state in the list of states for this phase.</returns>
    </member>
    <member name="T:Sif.Framework.Model.Infrastructure.Job">
      <summary>
            The following Job elements/properties are mandatory according to the SIF specification:
            /job[@id]
            /job/name
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.Id">
      <summary>
            The ID of the Job as managed by the Functional Service.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.Name">
      <summary>
            The name of the job, e.g. "grading" or "sre".
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.Description">
      <summary>
            A description of the job, e.g. "Bowers Elementary School Final Marks"
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.State">
      <summary>
            The current enumerable state of the job.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.StateDescription">
      <summary>
            A descriptive message ellaborating on the current state, e.g. if the current state is "FAILED" the stateDescription may be "Timeout occured".
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.Created">
      <summary>
            The datetime this job was created.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.LastModified">
      <summary>
            The datetime this job was last modified.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.Timeout">
      <summary>
            The ammount of time after creation before this job is automatically deleted.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Job.Phases">
      <summary>
            Collection of phase objects
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Job.#ctor">
      <summary>
            Basic constructor that sets logical default values
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Job.#ctor(System.String,System.String)">
      <summary>
            Job constructor with description
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Job.UpdateState(Sif.Framework.Model.Infrastructure.JobStateType,System.String)">
      <summary>
            Changes the state of the job
            </summary>
      <param name="type">The type to change the current status to</param>
      <param name="description">An optional description of the change</param>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Job.AddPhase(Sif.Framework.Model.Infrastructure.Phase)">
      <summary>
            Adds a phase to the collection of phases
            </summary>
      <param name="phase">Phase to add</param>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Job.UpdatePhaseState(System.String,Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)">
      <summary>
            Sets the identified phase's state with optional description.
            </summary>
      <param name="phaseName">Name of phase to update</param>
      <param name="state">The state to set</param>
      <param name="stateDescription">Optional description</param>
    </member>
    <member name="T:Sif.Framework.Model.Infrastructure.Environment">
      <summary>
            The following Environment elements/properties are mandatory according to the SIF specification:
            /environment[@type]
            /environment/authenticationMethod
            /environment/consumerName
            /environment/applicationInfo/applicationKey
            /environment/applicationInfo/supportedInfrastructureVersion
            /environment/applicationInfo/supportedDataModel
            /environment/applicationInfo/supportedDataModelVersion
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Environment.Id">
      <summary>
            The ID of the Environment as managed by the Environment Provider.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Environment.AuthenticationMethod">
      <summary>
            Defines the way in which the applicationKey can be used to enforce security.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Environment.ConsumerName">
      <summary>
            A descriptive name for the application that will be readily identifiable to Zone Administrators if it
            becomes a Registered Consumer.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Environment.DefaultZone">
      <summary>
            The default zone used by Consumer (and Provider?) service requests when no Zone is provided with the
            request.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Environment.InfrastructureServices">
      <summary>
            There must be an InfrastructureService element present for each defined Infrastructure Service.   The value
            of each InfrastructureService Property value subelement defines the URL location of that Infrastructure
            Service.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Environment.SessionToken">
      <summary>
            The ID associated with an instance of the Environment.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Environment.SolutionId">
      <summary>
            The solution the Application would like to participate in. This is optional only, is advisory, and may be
            ignored by the Administrator. If processed it may be reflected in the URLs of the infrastructure services
            which are provided in the consumerEnvironment.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Environment.Type">
      <summary>
            Defines whether the connection to the Environment is DIRECT or BROKERED.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Environment.#ctor">
      <summary>
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Infrastructure.Environment.#ctor(System.String,System.String,System.String,System.String)">
      <summary>
      </summary>
      <param name="applicationKey">
      </param>
      <param name="instanceId">
      </param>
      <param name="userToken">
      </param>
      <param name="solutionId">
      </param>
    </member>
    <member name="T:Sif.Framework.Model.Infrastructure.InfrastructureService">
      <summary>
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Id">
      <summary>
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Name">
      <summary>
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Value">
      <summary>
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames">
      <summary>
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Infrastructure.JobStateType">
      <summary>
            Enumeration of permitted job states defined in the SIF 3.2 specification
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.JobStateType.NOTSTARTED">
      <summary>
            The job has not been started.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.JobStateType.INPROGRESS">
      <summary>
            The job is currently performing some operation, awaiting input, etc.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.JobStateType.COMPLETED">
      <summary>
            The job has finished and can be deleted.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.JobStateType.FAILED">
      <summary>
            The job has failed, steps may be taken to recover the job.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Infrastructure.PhaseStateType">
      <summary>
            Enumeration of permitted phase states defined in the SIF 3.2 specification
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.PhaseStateType.NOTAPPLICABLE">
      <summary>
            This phase is not applicable in the current context.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.PhaseStateType.NOTSTARTED">
      <summary>
            The phase has not been started yet.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.PhaseStateType.PENDING">
      <summary>
            The phase is waiting.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.PhaseStateType.SKIPPED">
      <summary>
            The phase has been safely skipped.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.PhaseStateType.INPROGRESS">
      <summary>
            The phase is currently working, awaiting input, etc.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.PhaseStateType.COMPLETED">
      <summary>
            The phase has completed successfully.
            </summary>
    </member>
    <member name="F:Sif.Framework.Model.Infrastructure.PhaseStateType.FAILED">
      <summary>
            The phase has failed, steps may be taken to recover it.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Service.ContextId">
      <summary>
            The unique identity of a context element, which is associated with a Provider of this name and type
            operating in a Zone with this ID.  All Services with the same name in the same Zone must have different
            Context IDs. Only one such Service can have no Context.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Infrastructure.Service.Name">
      <summary>
            The name of the Service. For utilities, this is fixed to one of the defined set of Utility Service Names.
            For objects and functions, it is defined by the Data Model.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.DataModels.ServiceClassInfo">
      <summary>
            Encapsulates a constuctor for an IService class.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.DataModels.ServiceClassInfo.#ctor(System.Type,System.Type[])">
      <summary>
            Constructor
            </summary>
      <param name="clazz">The IService class type</param>
      <param name="paramTypes">The list of parameter types used to identify a constructor, commonly Type.EmptyTypes</param>
    </member>
    <member name="M:Sif.Framework.Model.DataModels.ServiceClassInfo.GetClassInstance(System.Object[])">
      <summary>
            Execute the constructor and return the instantiated IService instance.
            </summary>
      <param name="args">The arguments to pass to the constructor, commonly null.</param>
      <returns>See description.</returns>
    </member>
    <member name="M:Sif.Framework.Model.DataModels.ServiceClassInfo.HasConstructor">
      <summary>
            Returns true if this object encapsulates a non-null constructor. False otherwise.
            </summary>
      <returns>See summary.</returns>
    </member>
    <member name="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2">
      <summary>
            This interface defines serialisation operations for SIF message payloads.
            </summary>
      <typeparam name="TSingle">Type that defines a single object entity.</typeparam>
      <typeparam name="TMultiple">Type that defines a multiple objects entity.</typeparam>
    </member>
    <member name="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)">
      <summary>
            Serialise a single object entity.
            </summary>
      <param name="obj">Payload of a single object.</param>
      <returns>XML string representation of the single object.</returns>
    </member>
    <member name="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)">
      <summary>
            Serialise an entity of multiple objects.
            </summary>
      <param name="obj">Payload of multiple objects.</param>
      <returns>XML string representation of the multiple objects.</returns>
    </member>
    <member name="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)">
      <summary>
            Deserialise a single object entity.
            </summary>
      <param name="payload">Payload of a single object.</param>
      <returns>Entity representing the single object.</returns>
    </member>
    <member name="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)">
      <summary>
            Deserialise an entity of multiple objects.
            </summary>
      <param name="payload">Payload of multiple objects.</param>
      <returns>Entity representing the multiple objects.</returns>
    </member>
    <member name="T:Sif.Framework.Model.DataModels.IDataModel">
      <summary>
            This interface is used to denote a SIF data model object.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.DataModels.ISifRefId`1">
      <summary>
            This interface is used to denote a SIF data model object.
            </summary>
      <typeparam name="TPrimaryKey">Primary key type of the SIF data model object.</typeparam>
    </member>
    <member name="P:Sif.Framework.Model.DataModels.ISifRefId`1.RefId">
      <summary>
            Property that defines the primary key for the SIF data model
            object.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException">
      <summary>
            This exception represents the situation where a Consumer or Provider has already been registered with the
            Environment Provider.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.BaseException">
      <summary>
            This class represents the base class for customised exceptions.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.BaseException.#ctor">
      <summary>
        <see cref="M:System.Exception.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)">
      <summary>
        <see cref="M:System.Exception.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:System.Exception.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:System.Exception.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.BaseException.GenerateUniqueReference">
      <summary>
            This method will generate a unique reference to be associated with an exception.
            </summary>
      <returns>A unique reference.</returns>
    </member>
    <member name="P:Sif.Framework.Model.Exceptions.BaseException.Message">
      <summary>
            This method will prefix the exception message with a unique reference.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.ContentTooLargeException">
      <summary>
            This exception represents the situation where the message content is too large.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.CreateException">
      <summary>
            This exception represents an error from a create request.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.CreateException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.DeleteException">
      <summary>
            This exception represents an error from a delete request.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.InvalidSessionException">
      <summary>
            This exception represents the situation where a session (token) is not recognised.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.NotFoundException">
      <summary>
            This exception represents the situation where an item cannot be found.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.QueryException">
      <summary>
            This exception represents an error from a query request.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.QueryException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.RejectedException">
      <summary>
            This exception represents the situation where a requested action or operation is rejected.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.UpdateException">
      <summary>
            This exception represents an error from an update request.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Exceptions.AlreadyExistsException">
      <summary>
            This exception represents the situation where an item already exists.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
        <see cref="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Query.Condition">
      <summary>
            Query or filter condition.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Query.Condition.Operator">
      <summary>
            Operator applicable for the condition.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Query.Condition.Left">
      <summary>
            Property that defines the left side of the condition.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Query.Condition.Op">
      <summary>
            Operator for each side of the condition.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Query.Condition.Right">
      <summary>
            Property that defines the right side of the condition.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Query.EqualCondition">
      <summary>
            Equality condition.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Query.EqualCondition.Op">
      <summary>
            This condition is only applicable with the Equal Operator.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Requests.MultipleDeleteRequest">
      <summary>
            This class represents a request for the deletion of multiple objects.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Requests.MultipleDeleteRequest.RefIds">
      <summary>
            SIF identifiers for the objects to delete.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.MultipleCreateResponse">
      <summary>
            This class represents multiple status response records for a create request involving multiple objects.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.CreateStatus">
      <summary>
            This class represents a status response for a create request.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.CreateStatus.AdvisoryId">
      <summary>
            The advisory SIF identifier provided with the create request.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.MultipleDeleteResponse">
      <summary>
            This class represents multiple status response records for a delete request involving multiple objects.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.DeleteStatus">
      <summary>
            This class represents a status response for a delete request.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1">
      <summary>
            This class represents multiple status response records for a request involving multiple objects.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords">
      <summary>
            Status response records.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.ResponseError">
      <summary>
            This class represents an error response from a request.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.ResponseError.Code">
      <summary>
            HTTP error code.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.ResponseError.Description">
      <summary>
            Error description.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.ResponseError.Id">
      <summary>
            Error identifier.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.ResponseError.Message">
      <summary>
            Error message.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.ResponseError.Scope">
      <summary>
            Scope of the error.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.ResponseStatus">
      <summary>
            This class represents a status response for a request.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.ResponseStatus.Error">
      <summary>
            Response error (if unsuccessful).
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.ResponseStatus.Id">
      <summary>
            Allocated SIF identifier.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode">
      <summary>
            HTTP status code.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.MultipleUpdateResponse">
      <summary>
            This class represents multiple status response records for an update request involving multiple objects.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Responses.UpdateStatus">
      <summary>
            This class represents a status response for an update request.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings">
      <summary>
            This class represents settings that are stored in the SifFramework.config custom configuration file.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.GetBooleanSetting(System.String,System.Boolean)">
      <summary>
            Retrieve the setting (boolean) value associated with the key.
            </summary>
      <param name="key">Key (identifier) of the setting.</param>
      <param name="defaultValue">Value returned if key not found.</param>
      <returns>Setting (boolean) value associated with the key if found; default value otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.GetIntegerSetting(System.String,System.Int32)">
      <summary>
            Retrieve the setting (int) value associated with the key.
            </summary>
      <param name="key">Key (identifier) of the setting.</param>
      <param name="defaultValue">Value returned if key not found.</param>
      <returns>Setting (int) value associated with the key if found; default value otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.GetStringSetting(System.String,System.String)">
      <summary>
            Retrieve the setting (string) value associated with the key.
            </summary>
      <param name="key">Key (identifier) of the setting.</param>
      <param name="defaultValue">Value returned if key not found.</param>
      <returns>Setting (string) value associated with the key if found; default value otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.GetStringSetting(System.String)">
      <summary>
            Retrieve the setting (string) value associated with the key.
            </summary>
      <param name="key">Key (identifier) of the setting.</param>
      <returns>Setting (string) value associated with the key.</returns>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.SettingsPrefix">
      <summary>
            Prefix associated will all settings.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.#ctor">
      <summary>
            Create an instance of this class based upon the values stored in the SifFramework.config custom
            configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.ApplicationKey">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.ApplicationKey" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.AuthenticationMethod">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.AuthenticationMethod" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.ConsumerName">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.ConsumerName" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.DataModelNamespace">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.DataModelNamespace" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.InfrastructureNamespace">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.InfrastructureNamespace" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.DeleteOnUnregister">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.DeleteOnUnregister" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.EnvironmentType">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentType" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.EnvironmentUrl">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentUrl" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.InstanceId">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.InstanceId" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.NavigationPageSize">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.NavigationPageSize" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.SharedSecret">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.SharedSecret" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.SolutionId">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.SolutionId" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.SupportedInfrastructureVersion">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.SupportedInfrastructureVersion" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.UserToken">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.UserToken" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.JobClasses">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobClasses" />
      </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.StartupDelay">
      <summary>
            How long in seconds to delay between starting each Functional Service thread. Default 10.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.JobBinding">
      <summary>
            True if job objects should be bound to the consumer that created them, false otherwise. Default true.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.JobTimeoutEnabled">
      <summary>
            True if job timeouts are enabled, false otherwise. Default true.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.JobTimeoutFrequency">
      <summary>
            How often to check for timedout jobs in seconds. Default 60.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.ISessionsSection">
      <summary>
            This interface represents the configuration file section that contains session information.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ISessionsSection.Sessions">
      <summary>
            Collection of entries containing session information.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.ProviderSettings">
      <summary>
            This class represents Provider settings that are stored in the SifFramework.config custom configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ProviderSettings.SettingsPrefix">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.SettingsPrefix" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.ProviderSettings.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.#ctor" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.ConsumerSection">
      <summary>
            Represents the "consumer" section within a configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConsumerSection.Sessions">
      <summary>
            sessions child element.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.ConsumerSettings">
      <summary>
            This class represents Consumer settings that are stored in the SifFramework.config custom configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ConsumerSettings.SettingsPrefix">
      <summary>
        <see cref="P:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.SettingsPrefix" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.ConsumerSettings.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Model.Settings.ConfigFileBasedFrameworkSettings.#ctor" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.IFrameworkSettings">
      <summary>
            This interface represents SIF Framework settings.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.ApplicationKey">
      <summary>
            Application key if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.AuthenticationMethod">
      <summary>
            Authentication method if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.ConsumerName">
      <summary>
            Consumer name if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.DataModelNamespace">
      <summary>
            Data model namespace if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.InfrastructureNamespace">
      <summary>
            Data model namespace if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.DeleteOnUnregister">
      <summary>
            Delete on unregister flag if it exists; false otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentType">
      <summary>
            Environment type (BROKERED or DIRECT) if it exists; DIRECT otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentUrl">
      <summary>
            Environment URL if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.InstanceId">
      <summary>
            Instance ID if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.NavigationPageSize">
      <summary>
            Number of objects returned in a "page" of results if it exists; 100 otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.SharedSecret">
      <summary>
            Shared secret if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.SolutionId">
      <summary>
            Solution ID if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.SupportedInfrastructureVersion">
      <summary>
            Supported infrastructure version if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.UserToken">
      <summary>
            User token if it exists; null otherwise.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobClasses">
      <summary>
            The types of the functional services that are configured. Default is "any".
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.StartupDelay">
      <summary>
            How long in seconds to delay between starting each Functional Service thread. Default 10.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobBinding">
      <summary>
            True if jobs are tightly coupled to the consumer that created them, false otherwise. Default true.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobTimeoutEnabled">
      <summary>
            True if job timeouts are enabled, false otherwise. Default true.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobTimeoutFrequency">
      <summary>
            How often to check for timedout jobs in seconds. Default 60.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.ProviderSection">
      <summary>
            Represents the "provider" section within a configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.ProviderSection.Sessions">
      <summary>
            sessions child element.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.SessionElement">
      <summary>
            Represents the "session" configuration element within a configuration file.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionElement.#ctor">
      <summary>
            Create an instance of this class.
            </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionElement.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Create an instance of this class based upon the passed parameters.
            </summary>
      <param name="applicationKey">Application key.</param>
      <param name="sessionToken">Session token.</param>
      <param name="environmentUrl">Environment URL.</param>
      <param name="solutionId">Solution ID.</param>
      <param name="userToken">User token.</param>
      <param name="instanceId">Instance ID.</param>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SessionElement.ApplicationKey">
      <summary>
            Mandatory applicationKey attribute.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SessionElement.EnvironmentUrl">
      <summary>
            Mandatory environmentUrl attribute.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SessionElement.InstanceId">
      <summary>
            Optional instanceId attribute.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SessionElement.SessionToken">
      <summary>
            Mandatory sessionToken attribute.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SessionElement.SolutionId">
      <summary>
            Optional solutionId attribute.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SessionElement.UserToken">
      <summary>
            Optional userToken attribute.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.SessionsElementCollection">
      <summary>
            Represents the "sessions" configuration element containing a collection of child "session" elements.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SessionsElementCollection.Item(System.Int32)">
      <summary>
            Collection indexer based upon an integer index.
            </summary>
      <param name="index">Index into the collection.</param>
      <returns>Session element at the specified index.</returns>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SessionsElementCollection.Item(System.String)">
      <summary>
            Readonly collection indexer based upon a string index.
            </summary>
      <param name="name">Index into the collection.</param>
      <returns>Session element at the specified index.</returns>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionsElementCollection.CreateNewElement">
      <summary>
        <see cref="!:System.Configuration.CreateNewElement()" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionsElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
      <summary>
        <see cref="!:System.Configuration.GetElementKey(System.Configuration.ConfigurationElement)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionsElementCollection.Add(Sif.Framework.Model.Settings.SessionElement)">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElementCollection.BaseAdd(System.Configuration.ConfigurationElement)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionsElementCollection.Clear">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElementCollection.BaseClear" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionsElementCollection.GetKey(System.Int32)">
      <summary>
        <see cref="M:System.Configuration.ConfigurationElementCollection.BaseGetKey(System.Int32)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionsElementCollection.Remove(System.String)">
      <summary>
        <see cref="!:System.Configuration.ConfigurationElementCollection.BaseRemove(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionsElementCollection.Remove(Sif.Framework.Model.Settings.SessionElement)">
      <summary>
            Removes the passed session element from the collection.
            <see cref="M:System.Configuration.ConfigurationElementCollection.BaseRemove(System.Object)" /></summary>
    </member>
    <member name="M:Sif.Framework.Model.Settings.SessionsElementCollection.RemoveAt(System.Int32)">
      <summary>
        <see cref="!:System.Configuration.ConfigurationElementCollection.RemoveAt(System.Int32)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Model.Settings.SifFrameworkSectionGroup">
      <summary>
            Represents a group of related SIF Framework sections within a configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SifFrameworkSectionGroup.ConsumerSettings">
      <summary>
            consumer child element.
            </summary>
    </member>
    <member name="P:Sif.Framework.Model.Settings.SifFrameworkSectionGroup.ProviderSettings">
      <summary>
            provider child element.
            </summary>
    </member>
    <member name="T:Sif.Framework.Model.Persistence.IPersistable`1">
      <summary>
            This interface is used to denote an object that is able to be persisted.
            </summary>
      <typeparam name="PK">Type of the primary key.</typeparam>
    </member>
    <member name="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
      <summary>
            Property that defines the primary key for an object.
            </summary>
    </member>
    <member name="T:Sif.Framework.Providers.FunctionalServiceProvider">
      <summary>
            Services Connector implementation
            </summary>
    </member>
    <member name="F:Sif.Framework.Providers.FunctionalServiceProvider.authService">
      <summary>
            Authentication (BROKERED or DIRECT) service against which requests will be checked.
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.#ctor">
      <summary>
            Create an instance.
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.String,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])">
      <summary>
            POST services/{serviceName}/{jobName}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])">
      <summary>
            POST services/{serviceName}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String[],System.String[])">
      <summary>
            GET services
            </summary>
      <returns>Forbidden (403)</returns>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.String[],System.String[])">
      <summary>
            GET services/{serviceName}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String[],System.String[])">
      <summary>
            GET services/{serviceName}/{id}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])">
      <summary>
            PUT services/{serviceName}/{id}
            </summary>
      <returns>Forbidden (403)</returns>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])">
      <summary>
            PUT services/{serviceName}
            </summary>
      <returns>Forbidden (403)</returns>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String[],System.String[])">
      <summary>
            DELETE services/{serviceName}/{id}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])">
      <summary>
            DELETE /services/{serviceName}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,System.String[],System.String[])">
      <summary>
            POST services/{serviceName}/{id}/{phaseName}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String,System.String[],System.String[])">
      <summary>
            GET services/{serviceName}/{id}/{phaseName}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,System.String,System.String[],System.String[])">
      <summary>
            PUT services/{serviceName}/{id}/{phaseName}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String,System.String[],System.String[])">
      <summary>
            DELETE services/{serviceName}/{id}/{phaseName}
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String[],System.String[])">
      <summary>
            POST services/{serviceName}/{id}/{phaseName}/states/state
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.getService(System.String)">
      <summary>
            Gets the IFunctionalService witht he given name, checking to make sure that the name makes sense first.
            </summary>
      <param name="serviceName">The name of the service to find.</param>
      <returns>An IFunctionalService instance if found, otherwise an exception is thrown.</returns>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String[],System.String[])">
      <summary>
            Internal method to check if the request is authorised in the given zone and context by checking the environment XML.
            </summary>
      <returns>The SessionToken if the request is authorised, otherwise an excpetion will be thrown.</returns>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String,System.String[],System.String[],Sif.Framework.Model.Infrastructure.Right)">
      <summary>
            Internal method to check if a given right is supported by the ACL.
            </summary>
      <param name="serviceName">The name of the service to check</param>
      <param name="zone">The zone to check authorization in</param>
      <param name="context">The context to check authorization in</param>
      <param name="right">The right to check</param>
      <returns>The session token if authorized, otherwise a HttpResponseException is thrown</returns>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.getRights(System.String,Sif.Framework.Model.Infrastructure.ProvisionedZone)">
      <summary>
            Internal method to retrieve the rights for a service in a given zone.
            </summary>
      <param name="serviceName">The service name to look for</param>
      <param name="zone">The zone to retrieve the rights for</param>
      <returns>An array of declared rights</returns>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckRights(System.String,System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.Right)">
      <summary>
            Internal method to check that a Right is supported by an array of rightType.
            </summary>
      <param name="serviceName">The service name to check</param>
      <param name="rights">The rights to look in (haystack)</param>
      <param name="right">The right to search for (the needle)</param>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.preventPagingHeaders">
      <summary>
            Internal method that throws an exception with the Method Not Allowed status code if the request has paging headers.
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProvider.OKResult(System.String)">
      <summary>
            Convenience method to produce and OK response
            </summary>
      <param name="payload">The payload to send back in the response</param>
      <returns>A response message</returns>
    </member>
    <member name="T:Sif.Framework.Providers.IBasicProvider`1">
      <summary>
            This is a convenience interface for Providers of SIF data model objects whereby the primary key is of type
            System.String and the multiple objects entity is represented as a list of single objects.
            </summary>
      <typeparam name="T">Type that defines a SIF data model object.</typeparam>
    </member>
    <member name="T:Sif.Framework.Providers.IProvider`3">
      <summary>
            This interface defines the operations available for Providers of SIF data model objects.
            </summary>
      <typeparam name="TSingle">Type that defines a single object entity.</typeparam>
      <typeparam name="TMultiple">Type that defines a multiple objects entity.</typeparam>
      <typeparam name="TPrimaryKey">Primary key type of the SIF data model object.</typeparam>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Post(`0,System.String[],System.String[])">
      <summary>
            Create a single object.
            <para>POST api/{controller}/TSingle</para><para /><para>201 - Success, object created</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>404 - Failure, not found (reject mustUseAdvisory)</para><para>409 - Failure, state conflict (already exists)</para><para>500 - Failure, internal service error</para></summary>
      <param name="obj">Object to create.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Object created (TSingle).</returns>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Post(`1,System.String[],System.String[])">
      <summary>
            Create multiple objects.
            <para>POST api/{controller}</para><para /><para>200 - Success, ok</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>500 - Failure, internal service error</para></summary>
      <param name="obj">Object (multiple object entity) to create.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Response containing status of each object created (createResponseType).</returns>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Get(`2,System.String[],System.String[])">
      <summary>
            Retrieve a single object.
            <para>GET api/{controller}/{id}</para><para /><para>200 - Success, ok</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>404 - Failure, not found</para><para>405 - Failure, method not allowed (paged query request issued)</para><para>500 - Failure, internal service error</para></summary>
      <param name="refId">SIF identifier of the object.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Object with that SIF identifier (TSingle).</returns>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Get(`0,System.String[],System.String[])">
      <summary>
            Retrieve all objects.
            <para>GET api/{controller} -&gt; where obj is null</para><para /><para>Retrieve multiple objects using Query by Example.</para><para>GET api/{controller} -&gt; POST api/{controller} where methodOverride=GET and obj is not null</para>vvvv
            <para /><para>200 - Success, ok</para><para>204 - Success, no content</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>413 - Failure, response too large</para><para>500 - Failure, internal service error</para></summary>
      <param name="obj">Example object to base the query on.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>All objects, objects that match the properties of the example object or no objects (TMultiple).</returns>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])">
      <summary>
            Retrieve multiple objects using Service Paths.
            <para>GET api/{object1}/{id1}/{controller}</para><para>GET api/{object1}/{id1}/{object2}/{id2}/{controller}</para><para>GET api/{object1}/{id1}/{object2}/{id2}/{object3}/{id3}/{controller}</para><para /><para>This method implements Service Paths with up to 3 levels of association.</para><para /><para>200 - Success, ok</para><para>204 - Success, no content</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>413 - Failure, response too large</para><para>500 - Failure, internal service error</para></summary>
      <param name="object1">Associated object.</param>
      <param name="id1">Identifier of associated object.</param>
      <param name="object2">Associated object.</param>
      <param name="id2">Identifier of associated object.</param>
      <param name="object3">Associated object.</param>
      <param name="id3">Identifier of associated object.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Objects that meet the associated object and identifier pairs (TMultiple).</returns>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Put(`2,`0,System.String[],System.String[])">
      <summary>
            Update a single object.
            <para>PUT api/{controller}/{id}</para><para /><para>204 - Success, no content</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>404 - Failure, not found</para><para>500 - Failure, internal service error</para></summary>
      <param name="refId">SIF identifier of the object.</param>
      <param name="obj">Object to update.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Result of the update request (void).</returns>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Put(`1,System.String[],System.String[])">
      <summary>
            Update multiple objects.
            <para>PUT api/{controller}</para><para /><para>200 - Success, ok</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>500 - Failure, internal service error</para></summary>
      <param name="obj">Object (multiple object entity) to update.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Response containing status of each object updated (updateResponseType).</returns>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Delete(`2,System.String[],System.String[])">
      <summary>
            Delete a single object.
            <para>DELETE api/{controller}/{id}</para><para /><para>204 - Success, no content</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>404 - Failure, not found</para><para>500 - Failure, internal service error</para></summary>
      <param name="refId">SIF identifier of the object.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Result of the delete request (void).</returns>
    </member>
    <member name="M:Sif.Framework.Providers.IProvider`3.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])">
      <summary>
            Delete multiple objects.
            <para>DELETE api/{controller} -&gt; PUT api/{controller} with methodOverride=DELETE</para>vv
            <para /><para>200 - Success, ok</para><para>400 - Failue, bad request</para><para>401 - Failure, unauthorised</para><para>403 - Failure, forbidden</para><para>500 - Failure, internal service error</para></summary>
      <param name="deleteRequest">Request containing a collection of SIF identifiers of the objects to delete.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <returns>Response containing status of each object deleted (deleteResponseType).</returns>
    </member>
    <member name="T:Sif.Framework.Providers.BasicProvider`1">
      <summary>
            This is a convenience class that defines a Provider of SIF data model objects whereby the primary key is of
            type System.String and the multiple objects entity is represented as a list of single objects.
            </summary>
      <typeparam name="T">Type of object associated with the Service Provider.</typeparam>
    </member>
    <member name="M:Sif.Framework.Providers.BasicProvider`1.#ctor(Sif.Framework.Service.Providers.IBasicProviderService{`0})">
      <summary>
            Create an instance based on the specified service.
            </summary>
      <param name="service">Service used for managing the object type.</param>
    </member>
    <member name="M:Sif.Framework.Providers.BasicProvider`1.Post(System.Collections.Generic.List{`0},System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.Provider`2.Post(`1,System.String[],System.String[])">Post</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.BasicProvider`1.Put(System.Collections.Generic.List{`0},System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.Provider`2.Put(`1,System.String[],System.String[])">Put</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Providers.Provider`2">
      <summary>
            This class defines a Provider of SIF data model objects.
            </summary>
      <typeparam name="TSingle">Type that defines a single object entity.</typeparam>
      <typeparam name="TMultiple">Type that defines a multiple objects entity.</typeparam>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.#ctor">
      <summary>
            Default constructor that is only available to derived instances of
            this class.
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.#ctor(Sif.Framework.Service.Providers.IProviderService{`0,`1})">
      <summary>
            Create an instance based on the specified service.
            </summary>
      <param name="service">Service used for managing the object type.</param>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Post(`0,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Post(`0,System.String[],System.String[])">Post</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Post(`1,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Post(`1,System.String[],System.String[])">Post</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Get(`2,System.String[],System.String[])">Get</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Get(`0,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Get(`0,System.String[],System.String[])">Get</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])">Get</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Put(System.String,`0,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Put(`2,`0,System.String[],System.String[])">Put</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Put(`1,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Put(`1,System.String[],System.String[])">Put</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Delete(System.String,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Delete(`2,System.String[],System.String[])">Delete</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Providers.Provider`2.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])">
      <summary>
        <see cref="M:Sif.Framework.Providers.IProvider`3.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])">Delete</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Providers.FunctionalServiceProviderFactory">
      <summary>
            A factory for functional services. Manages timeouts, etc.
            </summary>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.CreateFactory">
      <summary>
            Creates and configures the factory singleton instance.
            </summary>
      <returns>The factory singleton</returns>
    </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.Shutdown">
            This will shut down each provider class that make up this provider
        </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.GetInstance">
            Returns an lazy loaded instance of this provider factory.
            
            @return See Desc.
        </member>
    <member name="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.GetProvider(System.String)">
      <summary>
            Gets a new instance of a named provider service.
            </summary>
      <param name="name">The name of the provider service to look for</param>
      <returns>See description</returns>
    </member>
    <member name="T:Sif.Framework.Controllers.EnvironmentsController">
      <summary>
            This class defines a Controller for the Environment object.
            
            Valid single operations: POST, GET, DELETE.
            Valid multiple operations: none.
            </summary>
    </member>
    <member name="M:Sif.Framework.Controllers.EnvironmentsController.CreateDefaultEnvironmentType(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Create an Environment, using default values where applicable.
            </summary>
      <param name="applicationKey">Application key.</param>
      <param name="authenticationMethod">Authentication method.</param>
      <param name="consumerName">Consumer name.</param>
      <param name="solutionId">Solution ID.</param>
      <param name="dataModelNamespace">Data model namespace.</param>
      <param name="supportedInfrastructureVersion">Supported infrastructure version.</param>
      <param name="transport">Transport.</param>
      <param name="productName">Product name.</param>
      <returns>An Environment.</returns>
    </member>
    <member name="M:Sif.Framework.Controllers.EnvironmentsController.#ctor">
      <summary>
            Create an instance.
            </summary>
    </member>
    <member name="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.String[],System.String[])">
      <summary>
            GET api/environments
            This operation is forbidden.
            </summary>
      <returns>HTTP status 403.</returns>
    </member>
    <member name="M:Sif.Framework.Controllers.EnvironmentsController.Post(Sif.Specification.Infrastructure.environmentType,System.String[],System.String[])">
      <summary>
            POST api/environments
            This operation is forbidden.
            </summary>
      <param name="item">Object to create.</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
      <returns>HTTP status 403.</returns>
    </member>
    <member name="M:Sif.Framework.Controllers.EnvironmentsController.Create(Sif.Specification.Infrastructure.environmentType,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            POST api/environments/environment
            </summary>
      <param name="item">Object to create.</param>
      <param name="authenticationMethod">Authentication method.</param>
      <param name="consumerName">Consumer name.</param>
      <param name="solutionId">Solution ID.</param>
      <param name="dataModelNamespace">Data model namespace.</param>
      <param name="supportedInfrastructureVersion">Supported infrastructure version.</param>
      <param name="transport">Transport.</param>
      <param name="productName">Product name.</param>
      <returns>HTTP response message indicating success or failure.</returns>
    </member>
    <member name="M:Sif.Framework.Controllers.EnvironmentsController.Put(System.Guid,Sif.Specification.Infrastructure.environmentType,System.String[],System.String[])">
      <summary>
            PUT api/environments/{id}
            This operation is forbidden (raises HTTP status 403).
            </summary>
      <param name="id">Identifier for the object to update.</param>
      <param name="item">Object to update.</param>
    </member>
    <member name="T:Sif.Framework.Controllers.SifController`2">
      <summary>
            This class defines a base Controller containing common operations.
            </summary>
      <typeparam name="UI">Object type exposed at the presentation/API layer.</typeparam>
      <typeparam name="DB">Object type used in the business layer.</typeparam>
    </member>
    <member name="M:Sif.Framework.Controllers.SifController`2.#ctor(Sif.Framework.Service.ISifService{`0,`1})">
      <summary>
            Create an instance.
            </summary>
      <param name="service">Service used for managing conversion between the object types.</param>
    </member>
    <member name="M:Sif.Framework.Controllers.SifController`2.Delete(System.Guid,System.String[],System.String[])">
      <summary>
            DELETE api/{controller}/{id}
            </summary>
      <param name="id">Identifier of the object to delete.</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
    </member>
    <member name="M:Sif.Framework.Controllers.SifController`2.Get(System.Guid,System.String[],System.String[])">
      <summary>
            GET api/{controller}/{id}
            </summary>
      <param name="id">Identifier of the object to retrieve.</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
      <returns>Object with that identifier.</returns>
    </member>
    <member name="M:Sif.Framework.Controllers.SifController`2.Get(System.String[],System.String[])">
      <summary>
            GET api/{controller}
            </summary>
      <returns>All objects.</returns>
    </member>
    <member name="M:Sif.Framework.Controllers.SifController`2.Post(`0,System.String[],System.String[])">
      <summary>
            POST api/{controller}
            </summary>
      <param name="item">Object to create.</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
      <returns>HTTP response message indicating success or failure.</returns>
    </member>
    <member name="M:Sif.Framework.Controllers.SifController`2.Put(System.Guid,`0,System.String[],System.String[])">
      <summary>
            PUT api/{controller}/{id}
            </summary>
      <param name="id">Identifier for the object to update.</param>
      <param name="zone">The zone in which to perform the request.</param>
      <param name="context">The context in which to perform the request.</param>
      <param name="item">Object to update.</param>
    </member>
    <member name="T:Sif.Framework.Extensions.Extension">
      <summary>
            This class defines extension methods used throughout this framework.
            </summary>
    </member>
    <member name="M:Sif.Framework.Extensions.Extension.IsAssignableToGenericType(System.Type,System.Type)">
      <summary>
            Extension of types to check whether one is assignable from a generic type.
            </summary>
      <param name="givenType">Given type to check.</param>
      <param name="genericType">Generic type assignable from.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Extensions.Extension.NotFound(System.Web.Http.ApiController,System.String)">
      <summary>
            Extension to the ApiController that adds an error message to the NotFound result.
            </summary>
      <param name="controller">Web API Rest Controller.</param>
      <param name="message">Error message.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Extensions.Extension.ToDescription(System.Enum)">
      <summary>
            Extension to enumerated types that recognise the description attribute.
            </summary>
      <param name="enumeration">Enumerated type.</param>
      <returns>Description attribute if it exists; result of ToString() otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.RetrieveByApplicationKey(System.String)">
      <see cref="!:Sif.Framework.Persistence.IApplicationRegisterRepository&lt;T&gt;.RetrieveByApplicationKey(string)">RetrieveByApplicationKey</see>
    </member>
    <member name="T:Sif.Framework.Persistence.NHibernate.EnvironmentProviderSessionFactory">
      <summary>
            A Singleton helper class for managing NHibernate sessions based upon the default configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Persistence.NHibernate.EnvironmentProviderSessionFactory.Instance">
      <summary>
            Singleton instance of this class.
            </summary>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.EnvironmentProviderSessionFactory.#ctor">
      <summary>
            Private constructor to ensure instantiation as a Singleton.
            </summary>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.EnvironmentProviderSessionFactory.OpenSession">
      <summary>
            Open an NHibernate database session.
            </summary>
      <returns>NHibernate database session.</returns>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.RetrieveBySessionToken(System.String)">
      <see cref="!:Sif.Framework.Persistence.IEnvironmentRepository&lt;T&gt;.RetrieveBySessionToken(string)">RetrieveBySessionToken</see>
    </member>
    <member name="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2">
      <see cref="T:Sif.Framework.Persistence.IGenericRepository`2">IGenericRepository</see>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.#ctor(Sif.Framework.Persistence.NHibernate.IBaseSessionFactory)">
      <summary>
            Instantiate this class using a session factory for NHibernate.
            </summary>
      <param name="sessionFactory">Session factory for NHibernate.</param>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)">
      <see cref="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`1)">Delete</see>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)">
      <see cref="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`0)">Delete</see>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" -->
    <member name="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)">
      <see cref="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`1)">Retrieve</see>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve">
      <see cref="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve">Retrieve</see>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)">
      <see cref="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`0)">Retrieve</see>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)">
      <see cref="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(System.Int32,System.Int32)">Retrieve</see>
    </member>
    <member name="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)">
      <see cref="M:Sif.Framework.Persistence.IGenericRepository`2.Save(`0)">Save</see>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" -->
    <member name="T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory">
      <summary>
            This interface defines base operations associated with session factories.
            </summary>
    </member>
    <member name="M:Sif.Framework.Persistence.IApplicationRegisterRepository.RetrieveByApplicationKey(System.String)">
      <summary>
            Retrieve the Application Register based upon it's application key.
            </summary>
      <param name="applicationKey">Application key for the Application Register.</param>
      <returns>Application Register defined by the passed application key.</returns>
    </member>
    <member name="M:Sif.Framework.Persistence.IEnvironmentRepository.RetrieveBySessionToken(System.String)">
      <summary>
            Retrieve the Environment based upon it's session token.
            </summary>
      <param name="sessionToken">Session token for the Environment.</param>
      <returns>Environment defined by the passed session token.</returns>
    </member>
    <member name="T:Sif.Framework.Persistence.IGenericRepository`2">
      <summary>
            This interface defines CRUD operations associated with persistence to a repository.
            </summary>
      <typeparam name="T">Type of model object to be persisted.</typeparam>
      <typeparam name="PK">Primary key type of the model object.</typeparam>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`1)">
      <summary>
            Delete the object using it's unique identifier.
            </summary>
      <param name="id">Unique identifier for the object.</param>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`0)">
      <summary>
            Delete the object.
            </summary>
      <param name="obj">Object to delete.</param>
      <exception cref="T:System.ArgumentNullException">obj parameter is null.</exception>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Delete multiple objects.
            </summary>
      <param name="objs">Objects delete.</param>
      <exception cref="T:System.ArgumentNullException">objs parameter is null.</exception>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`1)">
      <summary>
            Retrieve the object based upon it's unique identifier.
            </summary>
      <param name="id">Unique identifier for the object.</param>
      <returns>Object defined by the passed unique identifier.</returns>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve">
      <summary>
            Retrieve all objects.
            </summary>
      <returns>All objects.</returns>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`0)">
      <summary>
            Retrieve all objects based upon the example instance.
            </summary>
      <param name="obj">Example instance to match on.</param>
      <returns>All objects that match the example instance.</returns>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(System.Int32,System.Int32)">
      <summary>
            Retrieve a range of objects.
            </summary>
      <param name="pageIndex">The "page" index for the next set of objects to retrieve (starts at 0).</param>
      <param name="pageSize">The number of objects to retrieve for the "page".</param>
      <returns>All objects.</returns>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Save(`0)">
      <summary>
            Save the object.
            </summary>
      <param name="obj">Object to save.</param>
      <returns>Unique identifier for the object.</returns>
      <exception cref="T:System.ArgumentNullException">obj parameter is null.</exception>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})">
      <summary>
            Save multiple objects.
            </summary>
      <param name="objs">Objects to save.</param>
      <exception cref="T:System.ArgumentNullException">obj parameter is null.</exception>
    </member>
    <member name="M:Sif.Framework.Persistence.IGenericRepository`2.Exists(`1)">
      <summary>
            Check if an id exists.
            </summary>
      <param name="id">Id to check.</param>
      <returns>True if the id exists in the repository, false otherwise.</returns>
    </member>
    <member name="T:Sif.Framework.Service.Authentication.BrokeredAuthenticationService">
      <summary>
        <see cref="T:Sif.Framework.Service.Authentication.AuthenticationService">AuthenticationService</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.BrokeredAuthenticationService.InitialSharedSecret(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Authentication.AuthenticationService.InitialSharedSecret(System.String)">InitialSharedSecret</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.BrokeredAuthenticationService.SharedSecret(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Authentication.AuthenticationService.SharedSecret(System.String)">SharedSecret</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.BrokeredAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue)">
      <summary>
        <see cref="!:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue, System.Boolean)">VerifyAuthenticationHeader</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Service.Authentication.AuthenticationService">
      <summary>
        <see cref="T:Sif.Framework.Service.Authentication.IAuthenticationService">IAuthenticationService</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.AuthenticationService.InitialSharedSecret(System.String)">
      <summary>
            Retrieve the shared secret value associated with the passed in application key.
            </summary>
      <param name="applicationKey">Application key associated with the shared secret.</param>
      <returns>Shared secret value.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.AuthenticationService.SharedSecret(System.String)">
      <summary>
            Retrieve the shared secret value associated with the passed in session token.
            </summary>
      <param name="sessionToken">Session token associated with the shared secret.</param>
      <returns>Shared secret value.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.AuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.Boolean,System.String@)">
      <summary>
            Verify the authentication header.
            </summary>
      <param name="header">Authentication header.</param>
      <param name="initial">Flag to indicate whether this is the initial verification call.</param>
      <param name="sessionToken">Session token associated with the authentication header.</param>
      <returns>True if the initial authentication header is valid; false otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.AuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue)">
      <summary>
        <see cref="!:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue, System.Boolean, System.String)">VerifyAuthenticationHeader</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.AuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)">
      <summary>
        <see cref="!:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue, System.Boolean, System.String)">VerifyAuthenticationHeader</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.AuthenticationService.VerifyInitialAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)">
      <summary>
        <see cref="!:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue, System.Boolean)">VerifyAuthenticationHeader</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Service.Authentication.IAuthenticationService">
      <summary>
            This class contains operations for service authentication.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue)">
      <summary>
            Verify the authentication header.
            </summary>
      <param name="header">Authentication header.</param>
      <returns>True if the authentication header is valid; false otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)">
      <summary>
            Verify the authentication header.
            </summary>
      <param name="header">Authentication header.</param>
      <param name="sessionToken">Session token associated with the authentication header.</param>
      <returns>True if the authentication header is valid; false otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyInitialAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)">
      <summary>
            Verify the initial authentication header.
            </summary>
      <param name="header">Intial authentication header.</param>
      <param name="sessionToken">Session token associated with the initial authentication header.</param>
      <returns>True if the initial authentication header is valid; false otherwise.</returns>
    </member>
    <member name="T:Sif.Framework.Service.Authentication.DirectAuthenticationService">
      <summary>
        <see cref="T:Sif.Framework.Service.Authentication.AuthenticationService">AuthenticationService</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.DirectAuthenticationService.InitialSharedSecret(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Authentication.AuthenticationService.InitialSharedSecret(System.String)">InitialSharedSecret</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Authentication.DirectAuthenticationService.SharedSecret(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Authentication.AuthenticationService.SharedSecret(System.String)">SharedSecret</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Service.Functional.FunctionalService">
      <summary>
            The abstract Functional Service implementation that a functional services would normally extend.
            </summary>
    </member>
    <member name="F:Sif.Framework.Service.Functional.FunctionalService.phaseActions">
      <summary>
            The disctionary of phases this service contains, with the actions each can perform
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.#ctor">
      <summary>
            Basic constructor
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Configure(Sif.Framework.Model.Infrastructure.Job)">
      <summary>
            Method that must be extended to add phases to a given job when it has been created.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.GetServiceName">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.GetServiceName" />
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Startup">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.Startup" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Shutdown">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.Shutdown" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Bind(System.Guid,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.Bind(System.Guid,System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.Guid)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.Guid)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.GetBinding(System.Guid)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.GetBinding(System.Guid)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.IsBound(System.Guid,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.IsBound(System.Guid,System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Create(Sif.Specification.Infrastructure.jobType,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Create(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Update(Sif.Specification.Infrastructure.jobType,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Update(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.Guid,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(Sif.Specification.Infrastructure.jobType,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Retrieve(`0,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Guid,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Delete(Sif.Specification.Infrastructure.jobType,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Delete(`0,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)">
      <see cref="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.JobShutdown(Sif.Framework.Model.Infrastructure.Job)">
      <summary>
            Override this method to perform actions when a job of this type is deleted. Should throw a exception if it cannot be deleted.
            </summary>
      <param name="job">The job instance to configure</param>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String,System.String)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String,System.String)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.JobTimeout">
      <see cref="M:Sif.Framework.Service.Functional.IFunctionalService.JobTimeout" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.getPhase(Sif.Framework.Model.Infrastructure.Job,System.String)">
      <summary>
            Internal method to get a named phase from a job, throwing an appropriate exception if not found
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.FunctionalService.getActions(System.String)">
      <summary>
            Internal method to get the PhaseAction object for a named phase, throwing an appropriate exception if none are found.
            </summary>
    </member>
    <member name="T:Sif.Framework.Service.Functional.PhaseActions">
      <summary>
        <see cref="T:Sif.Framework.Service.Functional.IPhaseActions" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.PhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IPhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.PhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IPhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.PhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IPhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.PhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Functional.IPhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Service.Functional.IPhaseActions">
      <summary>
            The interface used for all actions that a phase may perform.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IPhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <summary>
            Method to encapsulate a Create operation for a phase
            </summary>
      <param name="job">The Job on which the phase exists</param>
      <param name="phase">The phase being interacted with</param>
      <param name="body">The payload (string) being sent to the phase</param>
      <param name="contentType">A mime type that indicates what format the body is serialized as</param>
      <param name="accept">A mime type that indicates what format the response should be serialized as</param>
      <returns>A (possibly null) string to be sent back to the consumer</returns>
      <exception cref="T:Sif.Framework.Model.Exceptions.CreateException" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.IPhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <summary>
            Method to encapsulate a Retrieve operation for a phase
            </summary>
      <param name="job">The Job on which the phase exists</param>
      <param name="phase">The phase being interacted with</param>
      <param name="body">The payload (string) being sent to the phase</param>
      <param name="contentType">A mime type that indicates what format the body is serialized as</param>
      <param name="accept">A mime type that indicates what format the response should be serialized as</param>
      <returns>A (possibly null) string to be sent back to the consumer</returns>
      <exception cref="T:Sif.Framework.Model.Exceptions.NotFoundException" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.IPhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <summary>
            Method to encapsulate a Update operation for a phase
            </summary>
      <param name="job">The Job on which the phase exists</param>
      <param name="phase">The phase being interacted with</param>
      <param name="body">The payload (string) being sent to the phase</param>
      <param name="contentType">A mime type that indicates what format the body is serialized as</param>
      <param name="accept">A mime type that indicates what format the response should be serialized as</param>
      <returns>A (possibly null) string to be sent back to the consumer</returns>
      <exception cref="T:Sif.Framework.Model.Exceptions.UpdateException" />
    </member>
    <member name="M:Sif.Framework.Service.Functional.IPhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <summary>
            Method to encapsulate a Delete operation for a phase
            </summary>
      <param name="job">The Job on which the phase exists</param>
      <param name="phase">The phase being interacted with</param>
      <param name="body">The payload (string) being sent to the phase</param>
      <param name="contentType">A mime type that indicates what format the body is serialized as</param>
      <param name="accept">A mime type that indicates what format the response should be serialized as</param>
      <returns>A (possibly null) string to be sent back to the consumer</returns>
      <exception cref="T:Sif.Framework.Model.Exceptions.DeleteException" />
    </member>
    <member name="T:Sif.Framework.Service.Functional.IFunctionalService">
      <summary>
            Interface that Functional services must implement
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.GetServiceName">
      <summary>
            Get the defined name of this service. Must be plural form, for example for a job named "Payload" this method should return "Payloads". Another example, for a job named "ISBSubmission" this should return "ISBSubmissions".
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Handles a create message being sent to, and response from, the named phase on the job with the given RefId.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Handles a Retrieve message being sent to, and response from, the named phase on the job with the given RefId.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Handles a Update message being sent to, and response from, the named phase on the job with the given RefId.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Handles a Delete message being sent to, and response from, the named phase on the job with the given RefId.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)">
      <summary>
            Handles creating a state on the named phase on the job with the given RefId.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)">
      <summary>
            Checks if the job has the right name to be acceptable for this service.
            </summary>
      <param name="job">The job to check</param>
      <returns>true if the job's name conforms to the expected format for this service</returns>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String)">
      <summary>
            Checks if a job's name is acceptable for this service.
            </summary>
      <param name="jobName">The job name to check</param>
      <returns>true if the name conforms to the expected format for this service</returns>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String,System.String)">
      <summary>
            Checks if a service name and a job's name is acceptable for this service.
            </summary>
      <param name="serviceName">The service name to check</param>
      <param name="jobName">The job name to check</param>
      <returns>true if the names conforms to the expected format for this service</returns>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob">
      <summary>
            Returns the name of supported jobs (the service name without the last character)
            </summary>
      <returns>The name of supported jobs</returns>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.Startup">
      <summary>
            Method that is run once to set up a thread for this service in the FunctionalServiceProviderFactory.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.Shutdown">
      <summary>
            Method that is run once to abort this service's thread in the FunctionalServiceProviderFactory.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)">
      <summary>
            Extends the timeout of the specified job the by given duration.
            </summary>
      <param name="job">The job whose duration is to be extended.</param>
      <param name="duration">The TimeSpan to increase the duration by.</param>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.JobTimeout">
      <summary>
            Method that is run at specified intervals to timeout jobs that belong to this service.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.Bind(System.Guid,System.String)">
      <summary>
            Binds a (job) object's refid to a session token
            </summary>
      <param name="ownerId">The session token the (job) object was created in</param>
      <param name="objectId">The refid of the created object</param>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.String)">
      <summary>
            Unbinds all (job) object refid from this session token
            </summary>
      <param name="ownerId">The session token to unbind all objects from</param>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.Guid)">
      <summary>
            Unbinds the (job) object's refid from its associated session token
            </summary>
      <param name="objectId">The refid of the object to unbind from its session token</param>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.GetBinding(System.Guid)">
      <summary>
            Checks if the given (job) object id is bound, and if it is returns the session token.
            </summary>
      <param name="objectId">The refid of the object</param>
      <returns>The session token this object id is bound to, null if not found</returns>
    </member>
    <member name="M:Sif.Framework.Service.Functional.IFunctionalService.IsBound(System.Guid,System.String)">
      <summary>
            Returns true if the (job) object refid is associated with the session token.
            </summary>
      <param name="ownerId">The session token to look for</param>
      <param name="objectId">The refid of the (job) object to look for</param>
      <returns>See summary</returns>
    </member>
    <member name="T:Sif.Framework.Service.IService">
      <summary>
            The interface for any service implementation, object or functional.
            </summary>
    </member>
    <member name="T:Sif.Framework.Service.Providers.IBasicProviderService`1">
      <summary>
            This is a convenience interface that defines the services available for Providers of SIF data model objects
            whereby the primary key is of type System.String and the multiple objects entity is represented as a list of
            single objects.
            </summary>
      <typeparam name="T">SIF data model object type.</typeparam>
    </member>
    <member name="T:Sif.Framework.Service.Providers.IProviderService`2">
      <summary>
            This interface defines the services available for Providers of SIF data model objects.
            </summary>
      <typeparam name="TSingle">Type that defines a single object entity.</typeparam>
      <typeparam name="TMultiple">Type that defines a multiple objects entity.</typeparam>
    </member>
    <member name="M:Sif.Framework.Service.Providers.IProviderService`2.Create(`1,System.Nullable{System.Boolean},System.String,System.String)">
      <summary>
            Create multiple objects.
            </summary>
      <param name="obj">Object (multiple object entity) to create.</param>
      <param name="mustUseAdvisory">Flag to indicate whether the object's identifier should be retained.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:Sif.Framework.Model.Exceptions.AlreadyExistsException">Object already exists.</exception>
      <exception cref="T:System.ArgumentException">Parameter is invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.CreateException">Error creating object.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.RejectedException">Create operation not valid for the given object.</exception>
      <returns>Response containing status of each object created.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Providers.IProviderService`2.Update(`1,System.String,System.String)">
      <summary>
            Update multiple objects.
            </summary>
      <param name="obj">Object (multiple object entity) to update</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:System.ArgumentException">Parameter is invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.NotFoundException">Object to update not found.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.UpdateException">Error updating objects.</exception>
      <returns>Response containing status of each object updated.</returns>
    </member>
    <member name="T:Sif.Framework.Service.IObjectService`3">
      <summary>
            This interface defines the services available on SIF data model objects.
            </summary>
      <typeparam name="TSingle">Type that defines a single object entity.</typeparam>
      <typeparam name="TMultiple">Type that defines a multiple objects entity.</typeparam>
      <typeparam name="TPrimaryKey">Primary key type of the SIF data model object.</typeparam>
    </member>
    <member name="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)">
      <summary>
            Create an object.
            </summary>
      <param name="obj">Object to create.</param>
      <param name="mustUseAdvisory">Flag to indicate whether the object's identifier should be retained.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:Sif.Framework.Model.Exceptions.AlreadyExistsException">Object already exists.</exception>
      <exception cref="T:System.ArgumentException">Parameter is invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.CreateException">Error creating object.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.RejectedException">Create operation not valid for the given object.</exception>
      <returns>Created object.</returns>
    </member>
    <member name="M:Sif.Framework.Service.IObjectService`3.Delete(`2,System.String,System.String)">
      <summary>
            Delete an object.
            </summary>
      <param name="refId">SIF identifier of the object.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:System.ArgumentException">Parameter is invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.DeleteException">Error deleting object.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.NotFoundException">Object to delete not found.</exception>
    </member>
    <member name="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)">
      <summary>
            Retrieve an object.
            </summary>
      <param name="refId">SIF identifier of the object.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:System.ArgumentException">Parameter is invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.QueryException">Error retrieving object.</exception>
      <returns>Retrieved object.</returns>
    </member>
    <member name="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
            Retrieve all objects (paged query).
            </summary>
      <param name="pageIndex">Current paging index.</param>
      <param name="pageSize">Page size.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:System.ArgumentException">One or more parameters are invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.ContentTooLargeException">Too many objects to return.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.QueryException">Error retrieving objects.</exception>
      <returns>Retrieved objects.</returns>
    </member>
    <member name="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
            Retrieve multiple objects using Query by Example.
            </summary>
      <param name="obj">Example object.</param>
      <param name="pageIndex">Current paging index.</param>
      <param name="pageSize">Page size.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:System.ArgumentException">One or more parameters are invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.ContentTooLargeException">Too many objects to return.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.QueryException">Error retrieving objects.</exception>
      <returns>Retrieved objects.</returns>
    </member>
    <member name="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <summary>
            Retrieve multiple objects using Service Paths.
            </summary>
      <param name="conditions">Service Path conditions</param>
      <param name="pageIndex">A (nullable) page index.</param>
      <param name="pageSize">A (nullable) size of elements in a page.</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:System.ArgumentException">Parameter is invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.ContentTooLargeException">Too many objects to return.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.QueryException">Error retrieving objects.</exception>
      <returns>Retrieved objects.</returns>
    </member>
    <member name="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)">
      <summary>
            Update an object.
            </summary>
      <param name="obj">Object to update</param>
      <param name="zone">Zone associated with the request.</param>
      <param name="context">Zone context.</param>
      <exception cref="T:System.ArgumentException">Parameter is invalid.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.NotFoundException">Object to update not found.</exception>
      <exception cref="T:Sif.Framework.Model.Exceptions.UpdateException">Error updating objects.</exception>
    </member>
    <member name="T:Sif.Framework.Service.Registration.IRegistrationService">
      <summary>
            This class represents operations for registering and unregistering a service (Consumer or Provider) with an
            Environment service (i.e. SIF 3 Broker, Environment Provider).
            </summary>
    </member>
    <member name="P:Sif.Framework.Service.Registration.IRegistrationService.AuthorisationToken">
      <summary>
            Authorisation token generated from registration.
            </summary>
    </member>
    <member name="P:Sif.Framework.Service.Registration.IRegistrationService.Registered">
      <summary>
            Flag to indicate whether the service has been registered.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.IRegistrationService.Register">
      <summary>
            Register service with an Environment service (Broker or Environment Provider). This must be the first method called, and only once. Subsequent calls are ignored.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)">
      <summary>
            Register service with an Environment service (Broker or Environment Provider). This must be the first method called, and only once. Subsequent calls are ignored.
            </summary>
      <param name="environment">Environment used for registration.</param>
    </member>
    <member name="M:Sif.Framework.Service.Registration.IRegistrationService.Unregister(System.Nullable{System.Boolean})">
      <summary>
            Unregister service from an Environment service (Broker or Environment Provider). This must be the last
            method called.
            </summary>
      <param name="deleteOnUnregister">If true, remove session data on unregister. If false, maintain session
            data. If null, use the setting stored in SifFramework.config.</param>
    </member>
    <member name="T:Sif.Framework.Service.Registration.NoRegistrationService">
      <summary>
        <see cref="T:Sif.Framework.Service.Registration.IRegistrationService">IRegistrationService</see>
      </summary>
    </member>
    <member name="P:Sif.Framework.Service.Registration.NoRegistrationService.AuthorisationToken">
      <summary>
        <see cref="P:Sif.Framework.Service.Registration.IRegistrationService.AuthorisationToken">AuthorisationToken</see>
      </summary>
    </member>
    <member name="P:Sif.Framework.Service.Registration.NoRegistrationService.Registered">
      <summary>
        <see cref="P:Sif.Framework.Service.Registration.IRegistrationService.Registered">Registered</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.NoRegistrationService.#ctor">
      <summary>
            Create an instance.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.NoRegistrationService.Register">
      <summary>
        <see cref="M:Sif.Framework.Service.Registration.IRegistrationService.Register">Register</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.NoRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)">
      <summary>
        <see cref="!:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment)">Register</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.NoRegistrationService.Unregister(System.Nullable{System.Boolean})">
      <summary>
        <see cref="M:Sif.Framework.Service.Registration.IRegistrationService.Unregister(System.Nullable{System.Boolean})">Unregister</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Service.Registration.RegistrationService">
      <summary>
        <see cref="T:Sif.Framework.Service.Registration.IRegistrationService">IRegistrationService</see>
      </summary>
    </member>
    <member name="P:Sif.Framework.Service.Registration.RegistrationService.AuthorisationToken">
      <summary>
        <see cref="P:Sif.Framework.Service.Registration.IRegistrationService.AuthorisationToken">AuthorisationToken</see>
      </summary>
    </member>
    <member name="P:Sif.Framework.Service.Registration.RegistrationService.Registered">
      <summary>
        <see cref="P:Sif.Framework.Service.Registration.IRegistrationService.Registered">Registered</see>
      </summary>
    </member>
    <member name="P:Sif.Framework.Service.Registration.RegistrationService.CurrentEnvironment">
      <summary>
            The current environment that this RegistrationService has registered with.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.RegistrationService.TryParseEnvironmentUrl(System.String)">
      <summary>
            Parse the URL of the Environment infrastructure service from the XML.
            </summary>
      <param name="environmentXml">Serialised Environment object as XML.</param>
      <returns>URL of the Environment infrastructure service.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Registration.RegistrationService.#ctor(Sif.Framework.Model.Settings.IFrameworkSettings,Sif.Framework.Service.Sessions.ISessionService)">
      <summary>
            Create an instance using the appropriate settings and service.
            </summary>
      <param name="settings">Framework settings.</param>
      <param name="sessionService">Service used for managing sessions.</param>
    </member>
    <member name="M:Sif.Framework.Service.Registration.RegistrationService.Register">
      <summary>
        <see cref="M:Sif.Framework.Service.Registration.IRegistrationService.Register">Register</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.RegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)">
      <summary>
        <see cref="!:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment)">Register</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Registration.RegistrationService.Unregister(System.Nullable{System.Boolean})">
      <summary>
        <see cref="M:Sif.Framework.Service.Registration.IRegistrationService.Unregister(System.Nullable{System.Boolean})">Unregister</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService">
      <summary>
            This class represents operations associated with sessions that are stored in the SifFramework.config custom
            configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.Configuration">
      <summary>
            Reference to the SifFramework.config custom configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.SessionsSection">
      <summary>
            Section of the configuration file containing the session information.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.#ctor">
      <summary>
            Create an instance of this class based upon the SifFramework.config file.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.HasSession(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String,System.String,System.String,System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.HasSession(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.RemoveSession(System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Sessions.ISessionService.RemoveSession(System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.RetrieveEnvironmentUrl(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveEnvironmentUrl(System.String,System.String,System.String,System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.RetrieveSessionToken(System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveSessionToken(System.String,System.String,System.String,System.String)" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.StoreSession(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
        <see cref="M:Sif.Framework.Service.Sessions.ISessionService.StoreSession(System.String,System.String,System.String,System.String,System.String,System.String)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Service.Sessions.ISessionService">
      <summary>
            This interface represents operations associated with SIF Framework sessions.
            </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String,System.String,System.String,System.String)">
      <summary>
            Check whether a session entry already exists (based on the passed citeria parameters).
            </summary>
      <param name="applicationKey">Application key.</param>
      <param name="solutionId">Solution ID.</param>
      <param name="userToken">User token.</param>
      <param name="instanceId">Instance ID.</param>
      <returns>True if a session entry already exists; false otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String)">
      <summary>
            Check whether a session entry already exists (based on the passed session token).
            </summary>
      <param name="sessionToken">Session token.</param>
      <returns>True if a session entry already exists; false otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ISessionService.RemoveSession(System.String)">
      <summary>
            Remove a session entry. If no entry exists, this method does nothing.
            </summary>
      <param name="sessionToken">Session token associated with the session entry.</param>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveEnvironmentUrl(System.String,System.String,System.String,System.String)">
      <summary>
            Retrieve the Environment URL of a session entry that matches the passed criteria parameters.
            </summary>
      <param name="applicationKey">Application key.</param>
      <param name="solutionId">Solution ID.</param>
      <param name="userToken">User token.</param>
      <param name="instanceId">Instance ID.</param>
      <returns>Session token of the matched session entry; null if no match found.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveSessionToken(System.String,System.String,System.String,System.String)">
      <summary>
            Retrieve the session token of a session entry that matches the passed criteria parameters.
            </summary>
      <param name="applicationKey">Application key.</param>
      <param name="solutionId">Solution ID.</param>
      <param name="userToken">User token.</param>
      <param name="instanceId">Instance ID.</param>
      <returns>Session token of the matched session entry; null if no match found.</returns>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ISessionService.StoreSession(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Store a session entry associated with Consumer/Provider registration.
            </summary>
      <param name="applicationKey">Application key.</param>
      <param name="sessionToken">Session token.</param>
      <param name="environmentUrl">Environment URL.</param>
      <param name="solutionId">Solution ID.</param>
      <param name="userToken">User token.</param>
      <param name="instanceId">Instance ID.</param>
    </member>
    <member name="T:Sif.Framework.Service.Sessions.ConsumerSessionService">
      <summary>
            This class represents operations associated with Consumer sessions that are stored in the SifFramework.config
            custom configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Service.Sessions.ConsumerSessionService.SessionsSection">
      <summary>
        <see cref="P:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.SessionsSection" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ConsumerSessionService.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.#ctor" />
      </summary>
    </member>
    <member name="T:Sif.Framework.Service.Sessions.ProviderSessionService">
      <summary>
            This class represents operations associated with Provider sessions that are stored in the SifFramework.config
            custom configuration file.
            </summary>
    </member>
    <member name="P:Sif.Framework.Service.Sessions.ProviderSessionService.SessionsSection">
      <summary>
        <see cref="P:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.SessionsSection" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Sessions.ProviderSessionService.#ctor">
      <summary>
        <see cref="M:Sif.Framework.Service.Sessions.ConfigFileBasedSessionService.#ctor" />
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Create(`0)">
      <summary>
      </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Create(System.Collections.Generic.IEnumerable{`0})">
      <summary>
      </summary>
      <param name="objs">
      </param>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Delete(`1)">
      <summary>
      </summary>
      <param name="id">
      </param>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Delete(`0)">
      <summary>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})">
      <summary>
      </summary>
      <param name="objs">
      </param>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Retrieve(`1)">
      <summary>
      </summary>
      <param name="id">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Retrieve">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Retrieve(`0)">
      <summary>
      </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="pageIndex">
      </param>
      <param name="pageSize">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})">
      <summary>
      </summary>
      <param name="conditions">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Update(`0)">
      <summary>
      </summary>
      <param name="obj">
      </param>
    </member>
    <member name="M:Sif.Framework.Service.IGenericService`2.Update(System.Collections.Generic.IEnumerable{`0})">
      <summary>
      </summary>
      <param name="objs">
      </param>
    </member>
    <member name="T:Sif.Framework.Service.Serialisation.ISerialiser`1">
      <summary>
      </summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.IO.Stream)">
      <summary>
      </summary>
      <param name="stream">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.String)">
      <summary>
      </summary>
      <param name="str">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0,System.IO.Stream@)">
      <summary>
      </summary>
      <param name="obj">
      </param>
      <param name="stream">
      </param>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0)">
      <summary>
      </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Sif.Framework.Service.Serialisation.XmlSerialiser`1">
      <summary>
      </summary>
      <typeparam name="T">
      </typeparam>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.XmlSerialiser`1.#ctor">
      <summary>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.XmlSerialiser`1.#ctor(System.Xml.Serialization.XmlRootAttribute)">
      <summary>
      </summary>
      <param name="root">
      </param>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.XmlSerialiser`1.Deserialise(System.IO.Stream)">
      <summary>
      </summary>
      <param name="stream">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.XmlSerialiser`1.Deserialise(System.String)">
      <summary>
      </summary>
      <param name="str">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.XmlSerialiser`1.Serialise(`0,System.IO.Stream@)">
      <summary>
      </summary>
      <param name="obj">
      </param>
      <param name="stream">
      </param>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.XmlSerialiser`1.Serialise(`0)">
      <summary>
      </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Sif.Framework.Service.Serialisation.SerialiserFactory">
      <summary>
      </summary>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.SerialiserFactory.GenerateKey(System.Type[])">
      <summary>
      </summary>
      <param name="types">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.SerialiserFactory.GenerateKey(System.Type,System.Xml.Serialization.XmlRootAttribute)">
      <summary>
      </summary>
      <param name="types">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Service.Serialisation.SerialiserFactory.GetXmlSerialiser``1(System.Xml.Serialization.XmlRootAttribute)">
      <summary>
      </summary>
      <typeparam name="T">
      </typeparam>
      <param name="rootAttribute">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Sif.Framework.Utils.EnvironmentUtils">
      <summary>
            This is a utility class for operations on the Environment object.
            </summary>
    </member>
    <member name="M:Sif.Framework.Utils.EnvironmentUtils.LoadFromSettings(Sif.Framework.Model.Settings.IFrameworkSettings)">
      <summary>
            Create an Environment instance from properties defined in the framework settings.
            </summary>
      <param name="settings">Framework settings.</param>
      <returns>Environment instance.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.EnvironmentUtils.MergeWithSettings(Sif.Framework.Model.Infrastructure.Environment,Sif.Framework.Model.Settings.IFrameworkSettings)">
      <summary>
            Combine the passed in environment object with the equivalent properties defined in the framework settings
            (if present). Properties that already exist in the passed in the environment take precedence over the
            properties defined in the framework settings.
            </summary>
      <param name="environment">Environment object to check.</param>
      <param name="settings">Framework settings.</param>
      <returns>Environment object with merged properties.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.EnvironmentUtils.ParseServiceUrl(Sif.Framework.Model.Infrastructure.Environment,Sif.Framework.Model.Infrastructure.ServiceType,Sif.Framework.Model.Infrastructure.InfrastructureServiceNames)">
      <summary>
            Parse the Environment object for the service URL.
            </summary>
      <param name="environment">Environment object to parse.</param>
      <param name="serviceType">The type of service to get a connector for.</param>
      <param name="connector">The type of connector to get, only has an effect when the service type is UTILITY.</param>
      <returns>Service URL.</returns>
    </member>
    <member name="T:Sif.Framework.Utils.RightsUtils">
      <summary>
            Utility methods for Rights operations.
            </summary>
    </member>
    <member name="M:Sif.Framework.Utils.RightsUtils.CheckRight(System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.Right)">
      <summary>
            Checks to see if the given Right is contained in the dictionary of Rights. Throws a RejectedException if the right is not found.
            </summary>
      <param name="rights">The dictionary of rights to check</param>
      <param name="right">The right to look for</param>
    </member>
    <member name="M:Sif.Framework.Utils.RightsUtils.getRights(Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue)">
      <summary>
            Gets a dictionary of rights. If no arguments are supplied all rights are assumed to have the value REJECTED.
            </summary>
      <param name="admin">The value of the ADMIN right</param>
      <param name="create">The value of the CREATE right</param>
      <param name="delete">The value of the DELETE right</param>
      <param name="provide">The value of the PROVIDE right</param>
      <param name="query">The value of the QUERY right</param>
      <param name="subscribe">The value of the SUBSCRIBE right</param>
      <param name="update">The value of the UPDATE right</param>
      <returns>A dictionary of rights.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.ProviderUtils.GetServiceName(Sif.Framework.Service.IService)">
      <summary>
            Infer the name of the Object/Functional Service type
            </summary>
    </member>
    <member name="M:Sif.Framework.Utils.ProviderUtils.isFunctionalService(System.Type)">
      <summary>
            Returns true if the given type is a functional service, false otherwise.
            </summary>
      <param name="type">The type to check</param>
      <returns>See def.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.ProviderUtils.isDataModelService(System.Type)">
      <summary>
            Returns true if the given type is a data service, false otherwise.
            </summary>
      <param name="type">The type to check</param>
      <returns>See def.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.ProviderUtils.isController(System.Type)">
      <summary>
            Returns true if the given type is a controller, false otherwise.
            </summary>
      <param name="type">The type to check</param>
      <returns>See def.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.ProviderUtils.IsAdvisoryId(System.Guid)">
      <summary>
            Returns true if the given Guid instance is not null/empty or an empty Guid, false otherwise.
            </summary>
      <param name="id">The Guid instance to check.</param>
      <returns>See def.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.ProviderUtils.IsAdvisoryId(System.String)">
      <summary>
            Returns true if the given string instance is not null/empty or an empty Guid, false otherwise.
            </summary>
      <param name="id">The string representation of a Guid to check.</param>
      <returns>See def.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.ProviderUtils.CreateError(System.Net.HttpStatusCode,System.String,System.String)">
      <summary>
            Convenience method for creating an error record.
            </summary>
      <param name="statusCode">HTTP status code.</param>
      <param name="scope">The scope of the error.</param>
      <param name="message">Error message.</param>
      <returns>Error record.</returns>
    </member>
    <member name="T:Sif.Framework.Utils.RegistrationManager">
      <summary>
            Factory class to ensure that the appropriate registration service is provided.
            </summary>
    </member>
    <member name="P:Sif.Framework.Utils.RegistrationManager.ConsumerRegistrationService">
      <summary>
            New instance of the Consumer registration service.
            </summary>
    </member>
    <member name="P:Sif.Framework.Utils.RegistrationManager.ProviderRegistrationService">
      <summary>
            New instance of the Consumer registration service.
            </summary>
    </member>
    <member name="T:Sif.Framework.Utils.SessionsManager">
      <summary>
            Factory class to ensure that the appropriate session service is provided.
            </summary>
    </member>
    <member name="P:Sif.Framework.Utils.SessionsManager.ConsumerSessionService">
      <summary>
            Singleton instance of the Consumer session service.
            </summary>
    </member>
    <member name="P:Sif.Framework.Utils.SessionsManager.ProviderSessionService">
      <summary>
            Singleton instance of the Provider session service.
            </summary>
    </member>
    <member name="T:Sif.Framework.Utils.SettingsManager">
      <summary>
            Factory class to ensure that the appropriate settings are used.
            </summary>
    </member>
    <member name="P:Sif.Framework.Utils.SettingsManager.ConsumerSettings">
      <summary>
            Singleton instance of the Consumer settings.
            </summary>
    </member>
    <member name="P:Sif.Framework.Utils.SettingsManager.ProviderSettings">
      <summary>
            Singleton instance of the Provider settings.
            </summary>
    </member>
    <member name="T:Sif.Framework.Utils.ExceptionUtils">
      <summary>
            This is a utility class for exceptions.
            </summary>
    </member>
    <member name="M:Sif.Framework.Utils.ExceptionUtils.InferErrorResponseMessage(System.Exception)">
      <summary>
            Build an appropriate error message from the exception (if a WebException).
            </summary>
      <param name="exception">Exception to check.</param>
      <returns>An appropriate error message.</returns>
    </member>
    <member name="T:Sif.Framework.Utils.HttpUtils">
      <summary>
            This is a utility class for HTTP operations.
            </summary>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.CreateHttpWebRequest(Sif.Framework.Utils.HttpUtils.RequestMethod,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String,System.String)">
      <summary>
      </summary>
      <param name="requestMethod">
      </param>
      <param name="url">
      </param>
      <param name="authorisationToken">
      </param>
      <param name="navigationPage">
      </param>
      <param name="navigationPageSize">
      </param>
      <param name="methodOverride">Overrides the method header.</param>
      <param name="contentTypeOverride">Overrides the ContentType header.</param>
      <param name="acceptOverride">Overrides the Accept header.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.RequestWithoutPayload(Sif.Framework.Utils.HttpUtils.RequestMethod,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
      <summary>
      </summary>
      <param name="requestMethod">
      </param>
      <param name="url">
      </param>
      <param name="authorisationToken">
      </param>
      <param name="navigationPage">
      </param>
      <param name="navigationPageSize">
      </param>
      <param name="contentTypeOverride">Overrides the ContentType header.</param>
      <param name="acceptOverride">Overrides the Accept header.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.RequestWithPayload(Sif.Framework.Utils.HttpUtils.RequestMethod,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
      </summary>
      <param name="requestMethod">
      </param>
      <param name="url">
      </param>
      <param name="authorisationToken">
      </param>
      <param name="body">
      </param>
      <param name="methodOverride">Overrides the method of the request, e.g. to implement a GET with a payload over a POST request.</param>
      <param name="contentTypeOverride">Overrides the ContentType header.</param>
      <param name="acceptOverride">Overrides the Accept header.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String)">
      <summary>
      </summary>
      <param name="url">
      </param>
      <param name="authorisationToken">
      </param>
      <param name="contentTypeOverride">Overrides the ContentType header.</param>
      <param name="acceptOverride">Overrides the Accept header.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetRequest(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
      <summary>
      </summary>
      <param name="url">
      </param>
      <param name="authorisationToken">
      </param>
      <param name="navigationPage">
      </param>
      <param name="navigationPageSize">
      </param>
      <param name="contentTypeOverride">Overrides the ContentType header.</param>
      <param name="acceptOverride">Overrides the Accept header.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.PostRequest(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
      </summary>
      <param name="url">
      </param>
      <param name="authorisationToken">
      </param>
      <param name="body">
      </param>
      <param name="methodOverride">
      </param>
      <param name="contentTypeOverride">Overrides the ContentType header.</param>
      <param name="acceptOverride">Overrides the Accept header.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.PutRequest(System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Makes and sends a put request.
            </summary>
      <param name="url">Where to send the request.</param>
      <param name="authorisationToken">The authorization token.</param>
      <param name="body">The data payload to send.</param>
      <param name="methodOverride">The method that can be used to override the PUT, e.g. to issue a GET with a payload.</param>
      <param name="contentTypeOverride">Overrides the ContentType header.</param>
      <param name="acceptOverride">Overrides the Accept header.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <summary>
            This method will additionally add the exception message to the reason phrase of the error response.
            <see cref="!:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.HttpStatusCode, System.Exception)" /></summary>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <summary>
            This method will additionally add the message specified to the reason phrase of the error response.
            <see cref="!:System.Net.Http.HttpRequestMessageExtensions.CreateErrorResponse(System.Net.HttpStatusCode, System.String)" /></summary>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetHeaderValue(System.Net.Http.Headers.HttpHeaders,System.String)">
      <summary>
            Retrieve the string value associated with the header of the passed name.
            </summary>
      <param name="headers">Request headers to check.</param>
      <param name="headerName">Name of the header.</param>
      <exception cref="T:System.ArgumentNullException">Parameter headers is null.</exception>
      <exception cref="T:System.InvalidOperationException">Duplicate headers were found.</exception>
      <returns>String value associated with the header if found; null otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetBoolHeaderValue(System.Net.Http.Headers.HttpHeaders,System.String)">
      <summary>
            Retrieve the boolean value associated with the header of the passed name.
            </summary>
      <param name="headers">Request headers to check.</param>
      <param name="headerName">Name of the header.</param>
      <exception cref="T:System.ArgumentNullException">Parameter headers is null.</exception>
      <exception cref="T:System.FormatException">Header value was not a boolean.</exception>
      <exception cref="T:System.InvalidOperationException">Duplicate headers were found.</exception>
      <returns>Boolean value associated with the header if found; null otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetUintHeaderValue(System.Net.Http.Headers.HttpHeaders,System.String)">
      <summary>
            Retrieve the unsigned integere value associated with the header of the passed name.
            </summary>
      <param name="headers">Request headers to check.</param>
      <param name="headerName">Name of the header.</param>
      <exception cref="T:System.ArgumentNullException">Parameter headers is null.</exception>
      <exception cref="T:System.FormatException">Header value was not numeric.</exception>
      <exception cref="T:System.InvalidOperationException">Duplicate headers were found.</exception>
      <exception cref="T:System.OverflowException">Header value is less than UInt32.MinValue (0) or greater than UInt32.MaxValue.</exception>
      <returns>Unsigned integer value associated with the header if found; null otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetMustUseAdvisory(System.Net.Http.Headers.HttpHeaders)">
      <summary>
            Retrieve the value for the "must use advisory" header.
            </summary>
      <param name="headers">Request headers.</param>
      <exception cref="T:System.ArgumentNullException">Parameter is null.</exception>
      <exception cref="T:System.FormatException">Header value was not a boolean.</exception>
      <exception cref="T:System.InvalidOperationException">Duplicate headers were found.</exception>
      <returns>Must use advisory value if found; null otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetNavigationPage(System.Net.Http.Headers.HttpHeaders)">
      <summary>
            Retrieve the value for the navigation page header.
            </summary>
      <param name="headers">Request headers.</param>
      <exception cref="T:System.ArgumentNullException">Parameter is null.</exception>
      <exception cref="T:System.FormatException">Header value was not numeric.</exception>
      <exception cref="T:System.InvalidOperationException">Duplicate headers were found.</exception>
      <exception cref="T:System.OverflowException">Header value is less than UInt32.MinValue (0) or greater than UInt32.MaxValue.</exception>
      <returns>Navigation page value if found; null otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetNavigationPageSize(System.Net.Http.Headers.HttpHeaders)">
      <summary>
            Retrieve the value for the navigation page size header.
            </summary>
      <param name="headers">Request headers.</param>
      <exception cref="T:System.ArgumentNullException">Parameter is null.</exception>
      <exception cref="T:System.FormatException">Header value was not numeric.</exception>
      <exception cref="T:System.InvalidOperationException">Duplicate headers were found.</exception>
      <exception cref="T:System.OverflowException">Header value is less than UInt32.MinValue (0) or greater than UInt32.MaxValue.</exception>
      <returns>Navigation page size value if found; null otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.HasMethodOverrideHeader(System.Net.Http.Headers.HttpHeaders)">
      <summary>
            Determine whether a method override has been specified.
            </summary>
      <param name="headers">Request headers.</param>
      <exception cref="T:System.ArgumentNullException">Parameter is null.</exception>
      <returns>True if method override header found; false otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.HasPagingHeaders(System.Net.Http.Headers.HttpHeaders)">
      <summary>
            Determine whether paging parameters have been specified.
            </summary>
      <param name="headers">Request headers.</param>
      <exception cref="T:System.ArgumentNullException">Parameter is null.</exception>
      <returns>True if paging parameters have been found; false otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.ValidatePagingParameters(System.Net.Http.Headers.HttpHeaders,System.String@)">
      <summary>
            Check whether the parameters used for paging are valid.
            </summary>
      <param name="headers">Request headers.</param>
      <param name="errorMessage">Error description if validation failed.</param>
      <exception cref="T:System.ArgumentNullException">Parameter headers is null.</exception>
      <returns>True if paging parameters are valid; false otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetApplicationKey(System.Net.Http.Headers.HttpHeaders)">
      <summary>
            Retrieve the applicationKey property from the header.
            </summary>
      <param name="headers">Request headers.</param>
      <returns>applicationKey value if set; null otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetSourceName(System.Net.Http.Headers.HttpHeaders)">
      <summary>
            Retrieve the sourceName property from the header.
            </summary>
      <param name="headers">Request headers.</param>
      <returns>sourceName value if set; null otherwise.</returns>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetContentType(System.Net.Http.HttpRequestMessage)">
      <summary>
            Gets the content type from the request headers.
            </summary>
      <param name="Request">HTTP Request</param>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.GetAccept(System.Net.Http.HttpRequestMessage)">
      <summary>
            Gets the accept type from the request headers.
            </summary>
      <param name="Request">HTTP Request</param>
    </member>
    <member name="M:Sif.Framework.Utils.HttpUtils.MatrixParameters(System.String,System.String)">
      <summary>
            Build up a string of Matrix Parameters based upon the passed parameters.
            </summary>
      <param name="zone">Zone associated with a request.</param>
      <param name="context">Zone context.</param>
      <returns>String of Matrix Parameters.</returns>
    </member>
    <member name="T:Sif.Framework.Utils.StringUtils">
      <summary>
            This is a utility class for string operations.
            </summary>
    </member>
    <member name="M:Sif.Framework.Utils.StringUtils.RemoveNewLines(System.String)">
      <summary>
            Remove new line characters from a string (by replacing with a space character).
            </summary>
      <param name="content">String content to parse.</param>
      <returns>Null if content is null; content with no new line characters otherwise.</returns>
    </member>
    <member name="T:Sif.Framework.Utils.TraceExceptionLogger">
      <summary>
            This exception logger will send exception data to configured Trace sources (including the Debug output window
            in Visual Studio).
            </summary>
    </member>
    <member name="M:Sif.Framework.Utils.TraceExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <summary>
            This method will log the exception synchronously to configured Trace sources.
            </summary>
      <param name="context">The exception logger context.</param>
    </member>
    <member name="T:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector">
      <summary>
            This class enhances the default controller selector to take into account Matrix Parameters.
            <para>This class is based upon code from the ASP.NET Web API Samples.</para><see cref="!:http://aspnet.codeplex.com/sourcecontrol/latest#Samples/WebApi/NamespaceControllerSelector/ReadMe.txt">
            Namespace Controller Selector Sample
            </see></summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <summary>
        <see cref="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">DefaultHttpControllerSelector</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <summary>
            This method will additionally parse out Matrix Parameters from the controller name.
            <see cref="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">GetControllerName</see></summary>
    </member>
    <member name="T:Sif.Framework.WebApi.MethodOverrideHandler">
      <summary>
            Handler for managing method overrides of REST requests.
            </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.MethodOverrideHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <summary>
            Handle the override of the POST and PUT methods used for Query by Example and multiple object deletes
            respectively.
            </summary>
      <param name="request">The HTTP request message to send to the server.</param>
      <param name="cancellationToken">A cancellation token to cancel operation.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler">
      <summary>
            This exception handler produces a custom error response to clients for unexpected exceptions.
            </summary>
    </member>
    <member name="T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.UnexpectedExceptionResult">
      <summary>
            This class represents an unexpected exception result.
            </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.UnexpectedExceptionResult.#ctor(System.Net.Http.HttpRequestMessage,System.Exception)">
      <summary>
            Create an instance of UnexpectedExceptionResult.
            </summary>
      <param name="requestMessage">HTTP request message.</param>
      <param name="exception">Exception raised.</param>
    </member>
    <member name="M:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.UnexpectedExceptionResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>
            Creates an HttpResponseMessage asynchronously.
            </summary>
      <param name="cancellationToken">The token to monitor for cancellation requests.</param>
      <returns>A task that, when completed, contains the HttpResponseMessage.</returns>
    </member>
    <member name="M:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <summary>
            This method will handle the exception synchronously.
            </summary>
      <param name="context">The exception handler context.</param>
    </member>
    <member name="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute">
      <summary>
            Used to bind matrix parameter values from the URI.
            <para>This class is based upon code from the ASP.NET Web API Samples.</para><see cref="!:https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RouteConstraintsAndModelBindersSample/ReadMe.txt">
            Route Constraints and Model Binders by Implementing Matrix Parameters Sample
            </see></summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <example>
        <c>[MatrixParam] string[] color</c> will match all color values from the whole path.
            </example>
    </member>
    <member name="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="segment">
            Can be empty, a target prefix value, or a general route name embeded in "{" and "}".
            </param>
      <example>
        <c>[MatrixParam("")] string[] color</c> will match all color values from the whole path.
            <c>[MatrixParam("oranges")] string[] color</c> will match color only from the segment starting with
            "oranges" like .../oranges;color=red/...
            <c>[MatrixParam("{fruits}")] string[] color</c> will match color only from the route .../{fruits}/...
            </example>
    </member>
    <member name="P:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.Segment">
      <summary>
            Can be empty, a target prefix value, or a general route name embeded in "{" and "}".
            </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>
        <see cref="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">GetBinding</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder">
      <summary>
            Used to bind matrix parameter values from the URI.
            <para>This class is based upon code from the ASP.NET Web API Samples.</para><see cref="!:https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RouteConstraintsAndModelBindersSample/ReadMe.txt">
            Route Constraints and Model Binders by Implementing Matrix Parameters Sample
            </see></summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.#ctor(System.String)">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <param name="segment">
            Can be empty, a target prefix value, or a route parameter name embeded in "{" and "}".
            </param>
      <example>
            If segment is null or empty, the parameter will match all color values from the whole path.
            If segment is "oranges", the parameter will match color only from the segment starting with "oranges" like
            .../oranges;color=red/...
            If segment is "{fruits}", the parameter will match color only from the route .../{fruits}/...
            </example>
    </member>
    <member name="P:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.Segment">
      <summary>
            Can be empty, a target prefix value, or a route parameter name embeded in "{" and "}".
            </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>
        <see cref="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">BindModel</see>
      </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.GetAttributeValues(System.String,System.String)">
      <summary>
            Get the attribute values for an attribute.
            </summary>
      <param name="matrixParamSegment">Matrix parameter segment.</param>
      <param name="attributeName">Attribute name.</param>
      <returns>List of attribute values.</returns>
    </member>
    <member name="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute">
      <summary>
            Used to bind the segment prefix value from the route.
            <para>This class is based upon code from the ASP.NET Web API Samples.</para><see cref="!:https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RouteConstraintsAndModelBindersSample/ReadMe.txt">
            Route Constraints and Model Binders by Implementing Matrix Parameters Sample
            </see></summary>
      <example>
            If [Route["{fruits}/{location}"] is specified and the incoming URI's relative path is
            "/apples:color=red,green/washington;rate=good", then in the action's argument list, <c>[SegmentPrefix] string
            fruits</c> will have fruits = apples but <c>string location</c> without this attribute will have
            location = washington;rate=good.
            </example>
    </member>
    <member name="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <summary>
        <see cref="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">GetBinding</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder">
      <summary>
            Used to bind the segment prefix value from the route.
            <para>This class is based upon code from the ASP.NET Web API Samples.</para><see cref="!:https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RouteConstraintsAndModelBindersSample/ReadMe.txt">
            Route Constraints and Model Binders by Implementing Matrix Parameters Sample
            </see></summary>
      <remarks>
            If incoming URI's relative path is "/apples:color=red,green/washington;rate=good", "apples" and "washington"
            are segment prefixes.
            </remarks>
    </member>
    <member name="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <summary>
        <see cref="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">BindModel</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.WebApi.NotFoundErrorMessageResult">
      <summary>
            Represents an action result that returns a HttpStatusCode.NotFound response with the specified error message.
            </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.NotFoundErrorMessageResult.#ctor(System.Net.Http.HttpRequestMessage,System.String)">
      <summary>
            Create instance with an error message.
            </summary>
      <param name="request">Request object.</param>
      <param name="message">Error message.</param>
    </member>
    <member name="M:Sif.Framework.WebApi.NotFoundErrorMessageResult.ExecuteAsync(System.Threading.CancellationToken)">
      <summary>
        <see cref="M:System.Web.Http.IHttpActionResult.ExecuteAsync(System.Threading.CancellationToken)" />
      </summary>
    </member>
    <member name="T:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint">
      <summary>
            This constraint will match a route starting with the segmentPrefix + ";" or the segmentPrefix only.
            <para>This class is based upon code from the ASP.NET Web API Samples.</para><see cref="!:https://aspnet.codeplex.com/SourceControl/latest#Samples/WebApi/RouteConstraintsAndModelBindersSample/ReadMe.txt">
            Route Constraints and Model Binders by Implementing Matrix Parameters Sample
            </see></summary>
      <example>
            If Route["{apples:SegmentPrefix}"] is specified, .../apples;color=red/... or .../apples will match, but
            .../apples?color=red will not.
            </example>
    </member>
    <member name="M:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <summary>
        <see cref="M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">Match</see>
      </summary>
    </member>
    <member name="T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver">
      <summary>
            Controller type resolver that recognises SIF Service Providers.
            </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver.IsHttpEndpoint(System.Type)">
      <summary>
            Check whether the specified type defines a Controller endpoint.
            </summary>
      <param name="type">Type to check.</param>
      <returns>True if the endpoint defines a Controller; false otherwise.</returns>
    </member>
    <member name="N:Sif.Framework.Consumers">
      <summary />
    </member>
    <member name="N:Sif.Framework.Controllers">
      <summary />
    </member>
    <member name="N:Sif.Framework.Model.DataModels">
      <summary />
    </member>
    <member name="N:Sif.Framework.Model.Exceptions">
      <summary />
    </member>
    <member name="N:Sif.Framework.Model.Infrastructure">
      <summary />
    </member>
    <member name="N:Sif.Framework.Model.Persistence">
      <summary />
    </member>
    <member name="N:Sif.Framework.Model.Query">
      <summary />
    </member>
    <member name="N:Sif.Framework.Model.Responses">
      <summary />
    </member>
    <member name="N:Sif.Framework.Model.Settings">
      <summary />
    </member>
    <member name="N:Sif.Framework.Persistence">
      <summary />
    </member>
    <member name="N:Sif.Framework.Persistence.NHibernate">
      <summary />
    </member>
    <member name="N:Sif.Framework.Providers">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service.Authentication">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service.Functional">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service.Infrastructure">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service.Mapper">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service.Providers">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service.Registration">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service.Serialisation">
      <summary />
    </member>
    <member name="N:Sif.Framework.Service.Sessions">
      <summary />
    </member>
    <member name="N:Sif.Framework.Utils">
      <summary />
    </member>
    <member name="N:Sif.Framework.WebApi">
      <summary />
    </member>
    <member name="N:Sif.Framework.WebApi.ControllerSelectors">
      <summary />
    </member>
    <member name="N:Sif.Framework.WebApi.ModelBinders">
      <summary />
    </member>
    <member name="N:Sif.Framework.WebApi.RouteConstraints">
      <summary />
    </member>
  </members>
</doc>