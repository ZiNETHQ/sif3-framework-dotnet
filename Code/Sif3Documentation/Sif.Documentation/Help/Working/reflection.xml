<?xml version="1.0" encoding="utf-8"?>
<reflection xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:ddue="urn:ddue-extensions">
  <assemblies>
    <assembly name="Sif.Framework">
      <assemblydata version="2.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Sif.Framework.Consumers">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Consumers" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" />
        <element api="T:Sif.Framework.Consumers.IBasicConsumer`1" />
        <element api="T:Sif.Framework.Consumers.BasicConsumer`1" />
        <element api="T:Sif.Framework.Consumers.Consumer`3" />
        <element api="T:Sif.Framework.Consumers.IConsumer`3" />
      </elements>
      <file name="N_Sif_Framework_Consumers" />
    </api>
    <api id="T:Sif.Framework.Consumers.BasicConsumer`1">
      <topicdata group="api" />
      <apidata name="BasicConsumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
                </specialization>
              </type>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Sif.Framework.Consumers.IBasicConsumer`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              </specialization>
            </type>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.#ctor">
          <element api="M:Sif.Framework.Consumers.BasicConsumer`1.#ctor(Sif.Framework.Model.Infrastructure.Environment)" />
          <element api="M:Sif.Framework.Consumers.BasicConsumer`1.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.BasicConsumer`1.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Consumers.BasicConsumer`1.SerialiseMultiple(System.Collections.Generic.List{`0})" />
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.Create">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.Delete">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(`2,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.Consumer`3.DeserialiseSingle(System.String)" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.EnvironmentTemplate" />
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.Query">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Query(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.Consumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Register" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.RegistrationService" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.SerialiseSingle(`0)" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.TypeName" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.Update">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`0,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
      </containers>
      <file name="T_Sif_Framework_Consumers_BasicConsumer_1" />
    </api>
    <api id="Methods.T:Sif.Framework.Consumers.BasicConsumer`1">
      <topicdata name="BasicConsumer" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Consumers.BasicConsumer`1" />
      <apidata name="BasicConsumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Consumers.BasicConsumer`1.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Consumers.BasicConsumer`1.SerialiseMultiple(System.Collections.Generic.List{`0})" />
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.Create">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.Delete">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(`2,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.Consumer`3.DeserialiseSingle(System.String)" />
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.Query">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Query(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.Consumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Register" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.SerialiseSingle(`0)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.BasicConsumer`1.Update">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`0,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" />
      </containers>
      <file name="Methods_T_Sif_Framework_Consumers_BasicConsumer_1" />
    </api>
    <api id="Properties.T:Sif.Framework.Consumers.BasicConsumer`1">
      <topicdata name="BasicConsumer" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Consumers.BasicConsumer`1" />
      <apidata name="BasicConsumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:Sif.Framework.Consumers.Consumer`3.EnvironmentTemplate" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.RegistrationService" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.TypeName" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" />
      </containers>
      <file name="Properties_T_Sif_Framework_Consumers_BasicConsumer_1" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.BasicConsumer`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Consumers.BasicConsumer`1.#ctor(Sif.Framework.Model.Infrastructure.Environment)" />
        <element api="M:Sif.Framework.Consumers.BasicConsumer`1.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_BasicConsumer_1__ctor" />
    </api>
    <api id="M:Sif.Framework.Consumers.BasicConsumer`1.#ctor(Sif.Framework.Model.Infrastructure.Environment)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Consumers.BasicConsumer`1.#ctor" />
      <parameters>
        <parameter name="environment">
          <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_BasicConsumer_1__ctor" />
    </api>
    <api id="M:Sif.Framework.Consumers.BasicConsumer`1.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Consumers.BasicConsumer`1.#ctor" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="userToken" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_BasicConsumer_1__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.BasicConsumer`1.DeserialiseMultiple(System.String)">
      <topicdata group="api" />
      <apidata name="DeserialiseMultiple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Consumers.Consumer`3.DeserialiseMultiple(System.String)">
          <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
                </specialization>
              </type>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="payload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)">
          <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)">
          <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_BasicConsumer_1_DeserialiseMultiple" />
    </api>
    <api id="M:Sif.Framework.Consumers.BasicConsumer`1.SerialiseMultiple(System.Collections.Generic.List{`0})">
      <topicdata group="api" />
      <apidata name="SerialiseMultiple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Consumers.Consumer`3.SerialiseMultiple(`1)">
          <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
                </specialization>
              </type>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)">
          <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)">
          <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Consumers.BasicConsumer`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_BasicConsumer_1_SerialiseMultiple" />
    </api>
    <api id="T:Sif.Framework.Consumers.Consumer`3">
      <topicdata group="api" />
      <apidata name="Consumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TSingle">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TMultiple" />
        <template name="TPrimaryKey" />
      </templates>
      <implements>
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
          <specialization>
            <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
            <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
            <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
          <specialization>
            <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
            <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.#ctor">
          <element api="M:Sif.Framework.Consumers.Consumer`3.#ctor(Sif.Framework.Model.Infrastructure.Environment)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.Create">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.Delete">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(`2,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.Consumer`3.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.DeserialiseSingle(System.String)" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.EnvironmentTemplate" />
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.Query">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Query(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.Consumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Register" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.RegistrationService" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.SerialiseMultiple(`1)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.SerialiseSingle(`0)" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.TypeName" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.Update">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`0,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
      </containers>
      <file name="T_Sif_Framework_Consumers_Consumer_3" />
    </api>
    <api id="Methods.T:Sif.Framework.Consumers.Consumer`3">
      <topicdata name="Consumer" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Consumers.Consumer`3" />
      <apidata name="Consumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TSingle">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TMultiple" />
        <template name="TPrimaryKey" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.Create">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.Delete">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(`2,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.Consumer`3.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.DeserialiseSingle(System.String)" />
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.Query">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Query(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.Consumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Register" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.SerialiseMultiple(`1)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.SerialiseSingle(`0)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.Consumer`3.Update">
          <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`0,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" />
      </containers>
      <file name="Methods_T_Sif_Framework_Consumers_Consumer_3" />
    </api>
    <api id="Properties.T:Sif.Framework.Consumers.Consumer`3">
      <topicdata name="Consumer" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Consumers.Consumer`3" />
      <apidata name="Consumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="TSingle">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TMultiple" />
        <template name="TPrimaryKey" />
      </templates>
      <elements>
        <element api="P:Sif.Framework.Consumers.Consumer`3.EnvironmentTemplate" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.RegistrationService" />
        <element api="P:Sif.Framework.Consumers.Consumer`3.TypeName" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" />
      </containers>
      <file name="Properties_T_Sif_Framework_Consumers_Consumer_3" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.Consumer`3.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Consumers.Consumer`3.#ctor(Sif.Framework.Model.Infrastructure.Environment)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_Consumer_3__ctor" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.Consumer`3.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`1,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Create(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_Consumer_3_Create" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.Consumer`3.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Delete(`2,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_Consumer_3_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.Consumer`3.Query">
      <topicdata name="Query" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Query" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.Consumer`3.Query(`2,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_Consumer_3_Query" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.Consumer`3.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`1,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.Consumer`3.Update(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_Consumer_3_Update" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.#ctor(Sif.Framework.Model.Infrastructure.Environment)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Consumers.Consumer`3.#ctor" />
      <parameters>
        <parameter name="environment">
          <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3__ctor" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Consumers.Consumer`3.#ctor" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="userToken" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Create(`1,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.Consumer`3.Create" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Create" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Create(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.Consumer`3.Create" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Create_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.Consumer`3.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="refIds">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Delete" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Delete(`2,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.Consumer`3.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="refId">
          <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.DeserialiseMultiple(System.String)">
      <topicdata group="api" />
      <apidata name="DeserialiseMultiple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="payload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)">
          <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_DeserialiseMultiple" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.DeserialiseSingle(System.String)">
      <topicdata group="api" />
      <apidata name="DeserialiseSingle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="payload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)">
          <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_DeserialiseSingle" />
    </api>
    <api id="P:Sif.Framework.Consumers.Consumer`3.EnvironmentTemplate">
      <topicdata group="api" />
      <apidata name="EnvironmentTemplate" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvironmentTemplate" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Consumers_Consumer_3_EnvironmentTemplate" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Query" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.Consumer`3.Query" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Query" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Query(`2,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Query" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.Consumer`3.Query" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="refId">
          <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Query_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="QueryByExample" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_QueryByExample" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="QueryByServicePath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="conditions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Query.EqualCondition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_QueryByServicePath" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Register">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Register">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Register" />
    </api>
    <api id="P:Sif.Framework.Consumers.Consumer`3.RegistrationService">
      <topicdata group="api" />
      <apidata name="RegistrationService" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegistrationService" />
      <returns>
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Consumers_Consumer_3_RegistrationService" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.SerialiseMultiple(`1)">
      <topicdata group="api" />
      <apidata name="SerialiseMultiple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)">
          <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_SerialiseMultiple" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.SerialiseSingle(`0)">
      <topicdata group="api" />
      <apidata name="SerialiseSingle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)">
          <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_SerialiseSingle" />
    </api>
    <api id="P:Sif.Framework.Consumers.Consumer`3.TypeName">
      <topicdata group="api" />
      <apidata name="TypeName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_TypeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Consumers_Consumer_3_TypeName" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Unregister(System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="deleteOnUnregister" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Unregister(System.Nullable{System.Boolean})">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Unregister" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Update(`1,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.Consumer`3.Update" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Update" />
    </api>
    <api id="M:Sif.Framework.Consumers.Consumer`3.Update(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.Consumer`3.Update" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.Consumer`3" />
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.Consumer`3" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_Consumer_3_Update_1" />
    </api>
    <api id="T:Sif.Framework.Consumers.FunctionalServiceConsumer">
      <topicdata group="api" />
      <apidata name="FunctionalServiceConsumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor(Sif.Framework.Model.Infrastructure.Environment)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.checkRegistered" />
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Create">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.CreateToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.CreateToState(Sif.Framework.Model.Infrastructure.Job,System.String,Sif.Framework.Model.Infrastructure.PhaseState,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeleteToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseMultiple``2(System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseSingle``2(System.String)" />
        <element api="P:Sif.Framework.Consumers.FunctionalServiceConsumer.EnvironmentTemplate" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.GetCreated(Sif.Framework.Model.Responses.MultipleCreateResponse,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.GetURLPrefix(System.String)" />
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Query">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.QueryByExample(Sif.Framework.Model.Infrastructure.Job,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Register" />
        <element api="P:Sif.Framework.Consumers.FunctionalServiceConsumer.RegistrationService" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.RetrieveToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseMultiple(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Infrastructure.Job})" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseSingle``2(``0)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Update">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.UpdateToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
      </containers>
      <file name="T_Sif_Framework_Consumers_FunctionalServiceConsumer" />
    </api>
    <api id="Methods.T:Sif.Framework.Consumers.FunctionalServiceConsumer">
      <topicdata name="FunctionalServiceConsumer" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Consumers.FunctionalServiceConsumer" />
      <apidata name="FunctionalServiceConsumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.checkRegistered" />
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Create">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.CreateToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.CreateToState(Sif.Framework.Model.Infrastructure.Job,System.String,Sif.Framework.Model.Infrastructure.PhaseState,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeleteToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseMultiple``2(System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseSingle``2(System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.GetCreated(Sif.Framework.Model.Responses.MultipleCreateResponse,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.GetURLPrefix(System.String)" />
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Query">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.QueryByExample(Sif.Framework.Model.Infrastructure.Job,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Register" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.RetrieveToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseMultiple(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Infrastructure.Job})" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseSingle``2(``0)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Update">
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.UpdateToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" />
      </containers>
      <file name="Methods_T_Sif_Framework_Consumers_FunctionalServiceConsumer" />
    </api>
    <api id="Properties.T:Sif.Framework.Consumers.FunctionalServiceConsumer">
      <topicdata name="FunctionalServiceConsumer" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Consumers.FunctionalServiceConsumer" />
      <apidata name="FunctionalServiceConsumer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Consumers.FunctionalServiceConsumer.EnvironmentTemplate" />
        <element api="P:Sif.Framework.Consumers.FunctionalServiceConsumer.RegistrationService" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" />
      </containers>
      <file name="Properties_T_Sif_Framework_Consumers_FunctionalServiceConsumer" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor(Sif.Framework.Model.Infrastructure.Environment)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_FunctionalServiceConsumer__ctor" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_FunctionalServiceConsumer_Create" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_FunctionalServiceConsumer_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Query">
      <topicdata name="Query" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Query" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_FunctionalServiceConsumer_Query" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_FunctionalServiceConsumer_Update" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor(Sif.Framework.Model.Infrastructure.Environment)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor" />
      <parameters>
        <parameter name="environment">
          <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer__ctor" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.#ctor" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="userToken" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.checkRegistered">
      <topicdata group="api" />
      <apidata name="checkRegistered" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_checkRegistered" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Create" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Create" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Create(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Create" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="jobs">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Create_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.CreateToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_CreateToPhase" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.CreateToState(Sif.Framework.Model.Infrastructure.Job,System.String,Sif.Framework.Model.Infrastructure.PhaseState,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateToState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_CreateToState" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Delete" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="jobs">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeleteToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="DeleteToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_DeleteToPhase" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseMultiple``2(System.String)">
      <topicdata group="api" />
      <apidata name="DeserialiseMultiple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="DB" />
        <template name="UI" />
      </templates>
      <parameters>
        <parameter name="payload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <template name="DB" index="0" api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseMultiple``2(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_DeserialiseMultiple__2" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseSingle``2(System.String)">
      <topicdata group="api" />
      <apidata name="DeserialiseSingle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="DB" />
        <template name="UI" />
      </templates>
      <parameters>
        <parameter name="payload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="DB" index="0" api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.DeserialiseSingle``2(System.String)" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_DeserialiseSingle__2" />
    </api>
    <api id="P:Sif.Framework.Consumers.FunctionalServiceConsumer.EnvironmentTemplate">
      <topicdata group="api" />
      <apidata name="EnvironmentTemplate" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EnvironmentTemplate" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Consumers_FunctionalServiceConsumer_EnvironmentTemplate" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.GetCreated(Sif.Framework.Model.Responses.MultipleCreateResponse,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetCreated" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="creates">
          <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" ref="true" />
        </parameter>
        <parameter name="jobName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_GetCreated" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.GetURLPrefix(System.String)">
      <topicdata group="api" />
      <apidata name="GetURLPrefix" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="jobName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_GetURLPrefix" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Query" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Query" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Query" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Query(System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Query" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Query" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="jobName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Query_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.QueryByExample(Sif.Framework.Model.Infrastructure.Job,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="QueryByExample" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_QueryByExample" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Register">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Register" />
    </api>
    <api id="P:Sif.Framework.Consumers.FunctionalServiceConsumer.RegistrationService">
      <topicdata group="api" />
      <apidata name="RegistrationService" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegistrationService" />
      <returns>
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Consumers_FunctionalServiceConsumer_RegistrationService" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.RetrieveToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_RetrieveToPhase" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseMultiple(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Infrastructure.Job})">
      <topicdata group="api" />
      <apidata name="SerialiseMultiple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_SerialiseMultiple" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseSingle``2(``0)">
      <topicdata group="api" />
      <apidata name="SerialiseSingle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <templates>
        <template name="DB" />
        <template name="UI" />
      </templates>
      <parameters>
        <parameter name="item">
          <template name="DB" index="0" api="M:Sif.Framework.Consumers.FunctionalServiceConsumer.SerialiseSingle``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_SerialiseSingle__2" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Unregister(System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="deleteOnUnregister" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Unregister" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(Sif.Framework.Model.Infrastructure.Job,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Update" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Update" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.Update(System.Collections.Generic.List{Sif.Framework.Model.Infrastructure.Job},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.FunctionalServiceConsumer.Update" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="jobs">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_Update_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.FunctionalServiceConsumer.UpdateToPhase(Sif.Framework.Model.Infrastructure.Job,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.FunctionalServiceConsumer" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_FunctionalServiceConsumer_UpdateToPhase" />
    </api>
    <api id="T:Sif.Framework.Consumers.IBasicConsumer`1">
      <topicdata group="api" />
      <apidata name="IBasicConsumer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Consumers.IBasicConsumer`1" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Sif.Framework.Consumers.IBasicConsumer`1" />
              </specialization>
            </type>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Consumers.IBasicConsumer`1" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Sif.Framework.Consumers.IBasicConsumer`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:Sif.Framework.Consumers.IBasicConsumer`1.Create">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.IBasicConsumer`1.Delete">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.IBasicConsumer`1.Query">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.IConsumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Register" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.IBasicConsumer`1.Update">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
      </containers>
      <file name="T_Sif_Framework_Consumers_IBasicConsumer_1" />
    </api>
    <api id="Methods.T:Sif.Framework.Consumers.IBasicConsumer`1">
      <topicdata name="IBasicConsumer" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Consumers.IBasicConsumer`1" />
      <apidata name="IBasicConsumer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:Sif.Framework.Consumers.IBasicConsumer`1.Create">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.IBasicConsumer`1.Delete">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.IBasicConsumer`1.Query">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.IConsumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Register" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.IBasicConsumer`1.Update">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IBasicConsumer`1" />
      </containers>
      <file name="Methods_T_Sif_Framework_Consumers_IBasicConsumer_1" />
    </api>
    <api id="T:Sif.Framework.Consumers.IConsumer`3">
      <topicdata group="api" />
      <apidata name="IConsumer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle" />
        <template name="TMultiple" />
        <template name="TPrimaryKey" />
      </templates>
      <implements>
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true">
          <specialization>
            <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.IConsumer`3" />
            <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.IConsumer`3" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:Sif.Framework.Consumers.IBasicConsumer`1" ref="true" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:Sif.Framework.Consumers.IConsumer`3.Create">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.IConsumer`3.Delete">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.IConsumer`3.Query">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.IConsumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Register" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.IConsumer`3.Update">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
      </containers>
      <file name="T_Sif_Framework_Consumers_IConsumer_3" />
    </api>
    <api id="Methods.T:Sif.Framework.Consumers.IConsumer`3">
      <topicdata name="IConsumer" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Consumers.IConsumer`3" />
      <apidata name="IConsumer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle" />
        <template name="TMultiple" />
        <template name="TPrimaryKey" />
      </templates>
      <elements>
        <element api="Overload:Sif.Framework.Consumers.IConsumer`3.Create">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.IConsumer`3.Delete">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Consumers.IConsumer`3.Query">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Consumers.IConsumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Register" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Unregister(System.Nullable{System.Boolean})" />
        <element api="Overload:Sif.Framework.Consumers.IConsumer`3.Update">
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)" />
          <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" />
      </containers>
      <file name="Methods_T_Sif_Framework_Consumers_IConsumer_3" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.IConsumer`3.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_IConsumer_3_Create" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.IConsumer`3.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_IConsumer_3_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.IConsumer`3.Query">
      <topicdata name="Query" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Query" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_IConsumer_3_Query" />
    </api>
    <api id="Overload:Sif.Framework.Consumers.IConsumer`3.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)" />
        <element api="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Consumers_IConsumer_3_Update" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Create(`1,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.IConsumer`3.Create" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.IConsumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Create" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Create(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.IConsumer`3.Create" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.IConsumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.IConsumer`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Create_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Delete(System.Collections.Generic.IEnumerable{`2},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.IConsumer`3.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="refIds">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.IConsumer`3" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Delete" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Delete(`2,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.IConsumer`3.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="refId">
          <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.IConsumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Query(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Query" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.IConsumer`3.Query" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.IConsumer`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Query" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Query(`2,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Query" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.IConsumer`3.Query" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="refId">
          <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Consumers.IConsumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.IConsumer`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Query_1" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.QueryByExample(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="QueryByExample" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.IConsumer`3" />
        </parameter>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.IConsumer`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_QueryByExample" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.QueryByServicePath(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="QueryByServicePath" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="conditions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Query.EqualCondition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.IConsumer`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_QueryByServicePath" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Register">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Register" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Unregister(System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="deleteOnUnregister" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Unregister" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Update(`1,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.IConsumer`3.Update" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Consumers.IConsumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Update" />
    </api>
    <api id="M:Sif.Framework.Consumers.IConsumer`3.Update(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Consumers.IConsumer`3.Update" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Consumers.IConsumer`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Consumers" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Consumers_IConsumer_3_Update_1" />
    </api>
    <api id="N:Sif.Framework.Controllers">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Controllers" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Controllers.EnvironmentsController" />
        <element api="T:Sif.Framework.Controllers.SifController`2" />
      </elements>
      <file name="N_Sif_Framework_Controllers" />
    </api>
    <api id="T:Sif.Framework.Controllers.EnvironmentsController">
      <topicdata group="api" />
      <apidata name="EnvironmentsController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Controllers.SifController`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.#ctor" />
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Create(Sif.Specification.Infrastructure.environmentType,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="F:Sif.Framework.Controllers.EnvironmentsController.defaultAuthenticationMethod" />
        <element api="F:Sif.Framework.Controllers.EnvironmentsController.defaultConsumerName" />
        <element api="F:Sif.Framework.Controllers.EnvironmentsController.defaultSupportedInfrastructureVersion" />
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Delete(System.Guid,System.String[],System.String[])" />
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Get">
          <element api="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.String[],System.String[])" />
          <element api="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.Guid,System.String[],System.String[])" />
        </element>
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Post(Sif.Specification.Infrastructure.environmentType,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Put(System.Guid,Sif.Specification.Infrastructure.environmentType,System.String[],System.String[])" />
        <element api="F:Sif.Framework.Controllers.SifController`2.authService" />
        <element api="F:Sif.Framework.Controllers.SifController`2.service" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
      </containers>
      <file name="T_Sif_Framework_Controllers_EnvironmentsController" />
    </api>
    <api id="Methods.T:Sif.Framework.Controllers.EnvironmentsController">
      <topicdata name="EnvironmentsController" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Controllers.EnvironmentsController" />
      <apidata name="EnvironmentsController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Create(Sif.Specification.Infrastructure.environmentType,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Delete(System.Guid,System.String[],System.String[])" />
        <element api="Overload:Sif.Framework.Controllers.EnvironmentsController.Get">
          <element api="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.String[],System.String[])" />
          <element api="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.Guid,System.String[],System.String[])" />
        </element>
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Post(Sif.Specification.Infrastructure.environmentType,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Put(System.Guid,Sif.Specification.Infrastructure.environmentType,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" />
      </containers>
      <file name="Methods_T_Sif_Framework_Controllers_EnvironmentsController" />
    </api>
    <api id="Properties.T:Sif.Framework.Controllers.EnvironmentsController">
      <topicdata name="EnvironmentsController" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Controllers.EnvironmentsController" />
      <apidata name="EnvironmentsController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" />
      </containers>
      <file name="Properties_T_Sif_Framework_Controllers_EnvironmentsController" />
    </api>
    <api id="Fields.T:Sif.Framework.Controllers.EnvironmentsController">
      <topicdata name="EnvironmentsController" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Controllers.EnvironmentsController" />
      <apidata name="EnvironmentsController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Controllers.EnvironmentsController.defaultAuthenticationMethod" />
        <element api="F:Sif.Framework.Controllers.EnvironmentsController.defaultConsumerName" />
        <element api="F:Sif.Framework.Controllers.EnvironmentsController.defaultSupportedInfrastructureVersion" />
        <element api="F:Sif.Framework.Controllers.SifController`2.authService" />
        <element api="F:Sif.Framework.Controllers.SifController`2.service" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" />
      </containers>
      <file name="Fields_T_Sif_Framework_Controllers_EnvironmentsController" />
    </api>
    <api id="Overload:Sif.Framework.Controllers.EnvironmentsController.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.String[],System.String[])" />
        <element api="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.Guid,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Controllers_EnvironmentsController_Get" />
    </api>
    <api id="M:Sif.Framework.Controllers.EnvironmentsController.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_EnvironmentsController__ctor" />
    </api>
    <api id="M:Sif.Framework.Controllers.EnvironmentsController.Create(Sif.Specification.Infrastructure.environmentType,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
        </parameter>
        <parameter name="authenticationMethod" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="consumerName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="dataModelNamespace" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="supportedInfrastructureVersion" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="transport" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="productName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_EnvironmentsController_Create" />
    </api>
    <api id="F:Sif.Framework.Controllers.EnvironmentsController.defaultAuthenticationMethod">
      <topicdata group="api" />
      <apidata name="defaultAuthenticationMethod" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Controllers_EnvironmentsController_defaultAuthenticationMethod" />
    </api>
    <api id="F:Sif.Framework.Controllers.EnvironmentsController.defaultConsumerName">
      <topicdata group="api" />
      <apidata name="defaultConsumerName" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Controllers_EnvironmentsController_defaultConsumerName" />
    </api>
    <api id="F:Sif.Framework.Controllers.EnvironmentsController.defaultSupportedInfrastructureVersion">
      <topicdata group="api" />
      <apidata name="defaultSupportedInfrastructureVersion" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Controllers_EnvironmentsController_defaultSupportedInfrastructureVersion" />
    </api>
    <api id="M:Sif.Framework.Controllers.EnvironmentsController.Delete(System.Guid,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Controllers.SifController`2.Delete(System.Guid,System.String[],System.String[])">
          <type api="T:Sif.Framework.Controllers.SifController`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_EnvironmentsController_Delete" />
    </api>
    <api id="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.Guid,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Controllers.EnvironmentsController.Get" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Controllers.SifController`2.Get(System.Guid,System.String[],System.String[])">
          <type api="T:Sif.Framework.Controllers.SifController`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_EnvironmentsController_Get" />
    </api>
    <api id="M:Sif.Framework.Controllers.EnvironmentsController.Get(System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Controllers.EnvironmentsController.Get" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Controllers.SifController`2.Get(System.String[],System.String[])">
          <type api="T:Sif.Framework.Controllers.SifController`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_EnvironmentsController_Get_1" />
    </api>
    <api id="M:Sif.Framework.Controllers.EnvironmentsController.Post(Sif.Specification.Infrastructure.environmentType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Controllers.SifController`2.Post(`0,System.String[],System.String[])">
          <type api="T:Sif.Framework.Controllers.SifController`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_EnvironmentsController_Post" />
    </api>
    <api id="M:Sif.Framework.Controllers.EnvironmentsController.Put(System.Guid,Sif.Specification.Infrastructure.environmentType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Controllers.SifController`2.Put(System.Guid,`0,System.String[],System.String[])">
          <type api="T:Sif.Framework.Controllers.SifController`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_EnvironmentsController_Put" />
    </api>
    <api id="T:Sif.Framework.Controllers.SifController`2">
      <topicdata group="api" />
      <apidata name="SifController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Controllers.EnvironmentsController" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="UI">
          <constrained ctor="true" />
        </template>
        <template name="DB">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Controllers.SifController`2.#ctor(Sif.Framework.Service.ISifService{`0,`1})" />
        <element api="F:Sif.Framework.Controllers.SifController`2.authService" />
        <element api="M:Sif.Framework.Controllers.SifController`2.Delete(System.Guid,System.String[],System.String[])" />
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Get">
          <element api="M:Sif.Framework.Controllers.SifController`2.Get(System.String[],System.String[])" />
          <element api="M:Sif.Framework.Controllers.SifController`2.Get(System.Guid,System.String[],System.String[])" />
        </element>
        <element api="M:Sif.Framework.Controllers.SifController`2.Post(`0,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Controllers.SifController`2.Put(System.Guid,`0,System.String[],System.String[])" />
        <element api="F:Sif.Framework.Controllers.SifController`2.service" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
      </containers>
      <file name="T_Sif_Framework_Controllers_SifController_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Controllers.SifController`2">
      <topicdata name="SifController" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Controllers.SifController`2" />
      <apidata name="SifController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="UI">
          <constrained ctor="true" />
        </template>
        <template name="DB">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Controllers.SifController`2.Delete(System.Guid,System.String[],System.String[])" />
        <element api="Overload:Sif.Framework.Controllers.SifController`2.Get">
          <element api="M:Sif.Framework.Controllers.SifController`2.Get(System.String[],System.String[])" />
          <element api="M:Sif.Framework.Controllers.SifController`2.Get(System.Guid,System.String[],System.String[])" />
        </element>
        <element api="M:Sif.Framework.Controllers.SifController`2.Post(`0,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Controllers.SifController`2.Put(System.Guid,`0,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Controllers_SifController_2" />
    </api>
    <api id="Properties.T:Sif.Framework.Controllers.SifController`2">
      <topicdata name="SifController" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Controllers.SifController`2" />
      <apidata name="SifController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="UI">
          <constrained ctor="true" />
        </template>
        <template name="DB">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" />
      </containers>
      <file name="Properties_T_Sif_Framework_Controllers_SifController_2" />
    </api>
    <api id="Fields.T:Sif.Framework.Controllers.SifController`2">
      <topicdata name="SifController" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Controllers.SifController`2" />
      <apidata name="SifController" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="UI">
          <constrained ctor="true" />
        </template>
        <template name="DB">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="F:Sif.Framework.Controllers.SifController`2.authService" />
        <element api="F:Sif.Framework.Controllers.SifController`2.service" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" />
      </containers>
      <file name="Fields_T_Sif_Framework_Controllers_SifController_2" />
    </api>
    <api id="Overload:Sif.Framework.Controllers.SifController`2.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Controllers.SifController`2.Get(System.String[],System.String[])" />
        <element api="M:Sif.Framework.Controllers.SifController`2.Get(System.Guid,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Controllers_SifController_2_Get" />
    </api>
    <api id="M:Sif.Framework.Controllers.SifController`2.#ctor(Sif.Framework.Service.ISifService{`0,`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="service">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Controllers.SifController`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Controllers.SifController`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_SifController_2__ctor" />
    </api>
    <api id="F:Sif.Framework.Controllers.SifController`2.authService">
      <topicdata group="api" />
      <apidata name="authService" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Controllers_SifController_2_authService" />
    </api>
    <api id="M:Sif.Framework.Controllers.SifController`2.Delete(System.Guid,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_SifController_2_Delete" />
    </api>
    <api id="M:Sif.Framework.Controllers.SifController`2.Get(System.Guid,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Controllers.SifController`2.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="UI" index="0" api="T:Sif.Framework.Controllers.SifController`2" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_SifController_2_Get" />
    </api>
    <api id="M:Sif.Framework.Controllers.SifController`2.Get(System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Controllers.SifController`2.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="UI" index="0" api="T:Sif.Framework.Controllers.SifController`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_SifController_2_Get_1" />
    </api>
    <api id="M:Sif.Framework.Controllers.SifController`2.Post(`0,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Controllers.SifController`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_SifController_2_Post" />
    </api>
    <api id="M:Sif.Framework.Controllers.SifController`2.Put(System.Guid,`0,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Controllers.SifController`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Controllers_SifController_2_Put" />
    </api>
    <api id="F:Sif.Framework.Controllers.SifController`2.service">
      <topicdata group="api" />
      <apidata name="service" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
          <specialization>
            <template name="UI" index="0" api="T:Sif.Framework.Controllers.SifController`2" />
            <template name="DB" index="1" api="T:Sif.Framework.Controllers.SifController`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Controllers" />
        <type api="T:Sif.Framework.Controllers.SifController`2" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Controllers_SifController_2_service" />
    </api>
    <api id="N:Sif.Framework.Model.DataModels">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Model.DataModels" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Model.DataModels.ServiceClassInfo" />
        <element api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" />
        <element api="T:Sif.Framework.Model.DataModels.IDataModel" />
        <element api="T:Sif.Framework.Model.DataModels.ISifRefId`1" />
      </elements>
      <file name="N_Sif_Framework_Model_DataModels" />
    </api>
    <api id="T:Sif.Framework.Model.DataModels.IDataModel">
      <topicdata group="api" />
      <apidata name="IDataModel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="P:Sif.Framework.Model.DataModels.ISifRefId`1.RefId" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
      </containers>
      <file name="T_Sif_Framework_Model_DataModels_IDataModel" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.DataModels.IDataModel">
      <topicdata name="IDataModel" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.DataModels.IDataModel" />
      <apidata name="IDataModel" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.DataModels.ISifRefId`1.RefId" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.IDataModel" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_DataModels_IDataModel" />
    </api>
    <api id="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2">
      <topicdata group="api" />
      <apidata name="IPayloadSerialisable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle" />
        <template name="TMultiple" />
      </templates>
      <implementors>
        <type api="T:Sif.Framework.Consumers.IBasicConsumer`1" ref="true" />
        <type api="T:Sif.Framework.Consumers.BasicConsumer`1" ref="true" />
        <type api="T:Sif.Framework.Consumers.Consumer`3" ref="true" />
        <type api="T:Sif.Framework.Consumers.IConsumer`3" ref="true" />
      </implementors>
      <elements>
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
      </containers>
      <file name="T_Sif_Framework_Model_DataModels_IPayloadSerialisable_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2">
      <topicdata name="IPayloadSerialisable" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" />
      <apidata name="IPayloadSerialisable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle" />
        <template name="TMultiple" />
      </templates>
      <elements>
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)" />
        <element api="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_DataModels_IPayloadSerialisable_2" />
    </api>
    <api id="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseMultiple(System.String)">
      <topicdata group="api" />
      <apidata name="DeserialiseMultiple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="payload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_DataModels_IPayloadSerialisable_2_DeserialiseMultiple" />
    </api>
    <api id="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.DeserialiseSingle(System.String)">
      <topicdata group="api" />
      <apidata name="DeserialiseSingle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="payload">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TSingle" index="0" api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_DataModels_IPayloadSerialisable_2_DeserialiseSingle" />
    </api>
    <api id="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseMultiple(`1)">
      <topicdata group="api" />
      <apidata name="SerialiseMultiple" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_DataModels_IPayloadSerialisable_2_SerialiseMultiple" />
    </api>
    <api id="M:Sif.Framework.Model.DataModels.IPayloadSerialisable`2.SerialiseSingle(`0)">
      <topicdata group="api" />
      <apidata name="SerialiseSingle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.IPayloadSerialisable`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_DataModels_IPayloadSerialisable_2_SerialiseSingle" />
    </api>
    <api id="T:Sif.Framework.Model.DataModels.ISifRefId`1">
      <topicdata group="api" />
      <apidata name="ISifRefId" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TPrimaryKey" />
      </templates>
      <implementors>
        <type api="T:Sif.Framework.Model.DataModels.IDataModel" ref="true" />
      </implementors>
      <elements>
        <element api="P:Sif.Framework.Model.DataModels.ISifRefId`1.RefId" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
      </containers>
      <file name="T_Sif_Framework_Model_DataModels_ISifRefId_1" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.DataModels.ISifRefId`1">
      <topicdata name="ISifRefId" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.DataModels.ISifRefId`1" />
      <apidata name="ISifRefId" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TPrimaryKey" />
      </templates>
      <elements>
        <element api="P:Sif.Framework.Model.DataModels.ISifRefId`1.RefId" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_DataModels_ISifRefId_1" />
    </api>
    <api id="P:Sif.Framework.Model.DataModels.ISifRefId`1.RefId">
      <topicdata group="api" />
      <apidata name="RefId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RefId" />
      <setter name="set_RefId" />
      <returns>
        <template name="TPrimaryKey" index="0" api="T:Sif.Framework.Model.DataModels.ISifRefId`1" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_DataModels_ISifRefId_1_RefId" />
    </api>
    <api id="T:Sif.Framework.Model.DataModels.ServiceClassInfo">
      <topicdata group="api" />
      <apidata name="ServiceClassInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.DataModels.ServiceClassInfo.#ctor(System.Type,System.Type[])" />
        <element api="M:Sif.Framework.Model.DataModels.ServiceClassInfo.GetClassInstance(System.Object[])" />
        <element api="M:Sif.Framework.Model.DataModels.ServiceClassInfo.HasConstructor" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
      </containers>
      <file name="T_Sif_Framework_Model_DataModels_ServiceClassInfo" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.DataModels.ServiceClassInfo">
      <topicdata name="ServiceClassInfo" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.DataModels.ServiceClassInfo" />
      <apidata name="ServiceClassInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.DataModels.ServiceClassInfo.GetClassInstance(System.Object[])" />
        <element api="M:Sif.Framework.Model.DataModels.ServiceClassInfo.HasConstructor" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.ServiceClassInfo" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_DataModels_ServiceClassInfo" />
    </api>
    <api id="M:Sif.Framework.Model.DataModels.ServiceClassInfo.#ctor(System.Type,System.Type[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="clazz">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="paramTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.ServiceClassInfo" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_DataModels_ServiceClassInfo__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.DataModels.ServiceClassInfo.GetClassInstance(System.Object[])">
      <topicdata group="api" />
      <apidata name="GetClassInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args" optional="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.ServiceClassInfo" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_DataModels_ServiceClassInfo_GetClassInstance" />
    </api>
    <api id="M:Sif.Framework.Model.DataModels.ServiceClassInfo.HasConstructor">
      <topicdata group="api" />
      <apidata name="HasConstructor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.DataModels" />
        <type api="T:Sif.Framework.Model.DataModels.ServiceClassInfo" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_DataModels_ServiceClassInfo_HasConstructor" />
    </api>
    <api id="N:Sif.Framework.Model.Exceptions">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Model.Exceptions" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" />
        <element api="T:Sif.Framework.Model.Exceptions.BaseException" />
        <element api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" />
        <element api="T:Sif.Framework.Model.Exceptions.CreateException" />
        <element api="T:Sif.Framework.Model.Exceptions.DeleteException" />
        <element api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" />
        <element api="T:Sif.Framework.Model.Exceptions.NotFoundException" />
        <element api="T:Sif.Framework.Model.Exceptions.QueryException" />
        <element api="T:Sif.Framework.Model.Exceptions.RejectedException" />
        <element api="T:Sif.Framework.Model.Exceptions.UpdateException" />
        <element api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" />
      </elements>
      <file name="N_Sif_Framework_Model_Exceptions" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.AlreadyExistsException">
      <topicdata group="api" />
      <apidata name="AlreadyExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_AlreadyExistsException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.AlreadyExistsException">
      <topicdata name="AlreadyExistsException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" />
      <apidata name="AlreadyExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_AlreadyExistsException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.AlreadyExistsException">
      <topicdata name="AlreadyExistsException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" />
      <apidata name="AlreadyExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_AlreadyExistsException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.AlreadyExistsException">
      <topicdata name="AlreadyExistsException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" />
      <apidata name="AlreadyExistsException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_AlreadyExistsException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_AlreadyExistsException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_AlreadyExistsException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_AlreadyExistsException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_AlreadyExistsException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.AlreadyExistsException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_AlreadyExistsException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException">
      <topicdata group="api" />
      <apidata name="AlreadyRegisteredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_AlreadyRegisteredException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException">
      <topicdata name="AlreadyRegisteredException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" />
      <apidata name="AlreadyRegisteredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_AlreadyRegisteredException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException">
      <topicdata name="AlreadyRegisteredException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" />
      <apidata name="AlreadyRegisteredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_AlreadyRegisteredException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException">
      <topicdata name="AlreadyRegisteredException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" />
      <apidata name="AlreadyRegisteredException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_AlreadyRegisteredException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_AlreadyRegisteredException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_AlreadyRegisteredException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_AlreadyRegisteredException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_AlreadyRegisteredException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.AlreadyRegisteredException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_AlreadyRegisteredException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.BaseException">
      <topicdata group="api" />
      <apidata name="BaseException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Model.Exceptions.AlreadyRegisteredException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.CreateException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.DeleteException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.QueryException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.RejectedException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.UpdateException" ref="true" />
          <type api="T:Sif.Framework.Model.Exceptions.AlreadyExistsException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.BaseException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_BaseException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.BaseException">
      <topicdata name="BaseException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.BaseException" />
      <apidata name="BaseException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_BaseException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.BaseException">
      <topicdata name="BaseException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.BaseException" />
      <apidata name="BaseException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_BaseException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.BaseException">
      <topicdata name="BaseException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.BaseException" />
      <apidata name="BaseException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_BaseException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.BaseException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_BaseException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.BaseException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_BaseException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_BaseException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_BaseException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.BaseException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.BaseException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_BaseException__ctor_3" />
    </api>
    <api id="P:Sif.Framework.Model.Exceptions.BaseException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Exceptions_BaseException_Message" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.ContentTooLargeException">
      <topicdata group="api" />
      <apidata name="ContentTooLargeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_ContentTooLargeException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.ContentTooLargeException">
      <topicdata name="ContentTooLargeException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" />
      <apidata name="ContentTooLargeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_ContentTooLargeException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.ContentTooLargeException">
      <topicdata name="ContentTooLargeException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" />
      <apidata name="ContentTooLargeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_ContentTooLargeException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.ContentTooLargeException">
      <topicdata name="ContentTooLargeException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" />
      <apidata name="ContentTooLargeException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_ContentTooLargeException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_ContentTooLargeException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_ContentTooLargeException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_ContentTooLargeException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_ContentTooLargeException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.ContentTooLargeException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.ContentTooLargeException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_ContentTooLargeException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.CreateException">
      <topicdata group="api" />
      <apidata name="CreateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.CreateException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.CreateException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_CreateException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.CreateException">
      <topicdata name="CreateException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.CreateException" />
      <apidata name="CreateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.CreateException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_CreateException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.CreateException">
      <topicdata name="CreateException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.CreateException" />
      <apidata name="CreateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.CreateException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_CreateException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.CreateException">
      <topicdata name="CreateException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.CreateException" />
      <apidata name="CreateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.CreateException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_CreateException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.CreateException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.CreateException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.CreateException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_CreateException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.CreateException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.CreateException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.CreateException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_CreateException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.CreateException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.CreateException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_CreateException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.CreateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.CreateException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_CreateException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.CreateException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.CreateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.CreateException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_CreateException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.DeleteException">
      <topicdata group="api" />
      <apidata name="DeleteException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.DeleteException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_DeleteException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.DeleteException">
      <topicdata name="DeleteException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.DeleteException" />
      <apidata name="DeleteException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.DeleteException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_DeleteException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.DeleteException">
      <topicdata name="DeleteException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.DeleteException" />
      <apidata name="DeleteException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.DeleteException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_DeleteException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.DeleteException">
      <topicdata name="DeleteException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.DeleteException" />
      <apidata name="DeleteException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.DeleteException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_DeleteException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.DeleteException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.DeleteException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_DeleteException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.DeleteException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.DeleteException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_DeleteException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.DeleteException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.DeleteException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_DeleteException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.DeleteException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.DeleteException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_DeleteException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.DeleteException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.DeleteException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.DeleteException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_DeleteException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.InvalidSessionException">
      <topicdata group="api" />
      <apidata name="InvalidSessionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_InvalidSessionException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.InvalidSessionException">
      <topicdata name="InvalidSessionException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.InvalidSessionException" />
      <apidata name="InvalidSessionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_InvalidSessionException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.InvalidSessionException">
      <topicdata name="InvalidSessionException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.InvalidSessionException" />
      <apidata name="InvalidSessionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_InvalidSessionException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.InvalidSessionException">
      <topicdata name="InvalidSessionException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.InvalidSessionException" />
      <apidata name="InvalidSessionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_InvalidSessionException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_InvalidSessionException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_InvalidSessionException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_InvalidSessionException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_InvalidSessionException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.InvalidSessionException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.InvalidSessionException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_InvalidSessionException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.NotFoundException">
      <topicdata group="api" />
      <apidata name="NotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.NotFoundException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_NotFoundException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.NotFoundException">
      <topicdata name="NotFoundException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.NotFoundException" />
      <apidata name="NotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_NotFoundException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.NotFoundException">
      <topicdata name="NotFoundException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.NotFoundException" />
      <apidata name="NotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_NotFoundException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.NotFoundException">
      <topicdata name="NotFoundException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.NotFoundException" />
      <apidata name="NotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_NotFoundException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.NotFoundException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_NotFoundException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.NotFoundException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_NotFoundException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.NotFoundException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_NotFoundException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.NotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_NotFoundException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.NotFoundException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.NotFoundException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.NotFoundException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_NotFoundException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.QueryException">
      <topicdata group="api" />
      <apidata name="QueryException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.QueryException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.QueryException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_QueryException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.QueryException">
      <topicdata name="QueryException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.QueryException" />
      <apidata name="QueryException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.QueryException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_QueryException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.QueryException">
      <topicdata name="QueryException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.QueryException" />
      <apidata name="QueryException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.QueryException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_QueryException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.QueryException">
      <topicdata name="QueryException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.QueryException" />
      <apidata name="QueryException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.QueryException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_QueryException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.QueryException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.QueryException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.QueryException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_QueryException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.QueryException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.QueryException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.QueryException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_QueryException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.QueryException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.QueryException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_QueryException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.QueryException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.QueryException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_QueryException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.QueryException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.QueryException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.QueryException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_QueryException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.RejectedException">
      <topicdata group="api" />
      <apidata name="RejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.RejectedException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_RejectedException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.RejectedException">
      <topicdata name="RejectedException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.RejectedException" />
      <apidata name="RejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.RejectedException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_RejectedException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.RejectedException">
      <topicdata name="RejectedException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.RejectedException" />
      <apidata name="RejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.RejectedException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_RejectedException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.RejectedException">
      <topicdata name="RejectedException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.RejectedException" />
      <apidata name="RejectedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.RejectedException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_RejectedException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.RejectedException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.RejectedException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_RejectedException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.RejectedException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.RejectedException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_RejectedException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.RejectedException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.RejectedException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_RejectedException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.RejectedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.RejectedException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_RejectedException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.RejectedException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.RejectedException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.RejectedException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_RejectedException__ctor_3" />
    </api>
    <api id="T:Sif.Framework.Model.Exceptions.UpdateException">
      <topicdata group="api" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Exceptions.BaseException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Exceptions.UpdateException.#ctor">
          <element api="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor" />
          <element api="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.String)" />
          <element api="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
      </containers>
      <file name="T_Sif_Framework_Model_Exceptions_UpdateException" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Exceptions.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Exceptions.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.UpdateException" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Exceptions_UpdateException" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Exceptions.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Exceptions.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Sif.Framework.Model.Exceptions.BaseException.Message" />
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.UpdateException" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Exceptions_UpdateException" />
    </api>
    <api id="Events.T:Sif.Framework.Model.Exceptions.UpdateException">
      <topicdata name="UpdateException" group="list" subgroup="Events" typeTopicId="T:Sif.Framework.Model.Exceptions.UpdateException" />
      <apidata name="UpdateException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.UpdateException" />
      </containers>
      <file name="Events_T_Sif_Framework_Model_Exceptions_UpdateException" />
    </api>
    <api id="Overload:Sif.Framework.Model.Exceptions.UpdateException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor" />
        <element api="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.String)" />
        <element api="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.UpdateException" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Exceptions_UpdateException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.UpdateException.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.UpdateException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_UpdateException__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Model.Exceptions.UpdateException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.UpdateException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_UpdateException__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.UpdateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.UpdateException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_UpdateException__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Exceptions.UpdateException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Exceptions.UpdateException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Exceptions" />
        <type api="T:Sif.Framework.Model.Exceptions.UpdateException" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Exceptions_UpdateException__ctor_3" />
    </api>
    <api id="N:Sif.Framework.Model.Infrastructure">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Model.Infrastructure" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Model.Infrastructure.PhaseState" />
        <element api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" />
        <element api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" />
        <element api="T:Sif.Framework.Model.Infrastructure.Phase" />
        <element api="T:Sif.Framework.Model.Infrastructure.Job" />
        <element api="T:Sif.Framework.Model.Infrastructure.Environment" />
        <element api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" />
        <element api="T:Sif.Framework.Model.Infrastructure.EnvironmentType" />
        <element api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" />
        <element api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" />
        <element api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" />
        <element api="T:Sif.Framework.Model.Infrastructure.Property" />
        <element api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" />
        <element api="T:Sif.Framework.Model.Infrastructure.Right" />
        <element api="T:Sif.Framework.Model.Infrastructure.JobStateType" />
        <element api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" />
        <element api="T:Sif.Framework.Model.Infrastructure.RightType" />
        <element api="T:Sif.Framework.Model.Infrastructure.RightValue" />
        <element api="T:Sif.Framework.Model.Infrastructure.Service" />
        <element api="T:Sif.Framework.Model.Infrastructure.ServiceType" />
        <element api="T:Sif.Framework.Model.Infrastructure.Zone" />
      </elements>
      <file name="N_Sif_Framework_Model_Infrastructure" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.ApplicationInfo">
      <topicdata group="api" />
      <apidata name="ApplicationInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.ApplicationInfo.#ctor" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.AdapterProduct" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.ApplicationKey" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.ApplicationProduct" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.DataModelNamespace" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.SupportedInfrastructureVersion" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.Transport" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_ApplicationInfo" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.ApplicationInfo">
      <topicdata name="ApplicationInfo" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" />
      <apidata name="ApplicationInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_ApplicationInfo" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.ApplicationInfo">
      <topicdata name="ApplicationInfo" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" />
      <apidata name="ApplicationInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.AdapterProduct" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.ApplicationKey" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.ApplicationProduct" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.DataModelNamespace" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.SupportedInfrastructureVersion" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.Transport" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_ApplicationInfo" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.ApplicationInfo.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_ApplicationInfo__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.AdapterProduct">
      <topicdata group="api" />
      <apidata name="AdapterProduct" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AdapterProduct" />
      <setter name="set_AdapterProduct" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationInfo_AdapterProduct" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.ApplicationKey">
      <topicdata group="api" />
      <apidata name="ApplicationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationKey" />
      <setter name="set_ApplicationKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationInfo_ApplicationKey" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.ApplicationProduct">
      <topicdata group="api" />
      <apidata name="ApplicationProduct" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationProduct" />
      <setter name="set_ApplicationProduct" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationInfo_ApplicationProduct" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.DataModelNamespace">
      <topicdata group="api" />
      <apidata name="DataModelNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DataModelNamespace" />
      <setter name="set_DataModelNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationInfo_DataModelNamespace" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationInfo_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.SupportedInfrastructureVersion">
      <topicdata group="api" />
      <apidata name="SupportedInfrastructureVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SupportedInfrastructureVersion" />
      <setter name="set_SupportedInfrastructureVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationInfo_SupportedInfrastructureVersion" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationInfo.Transport">
      <topicdata group="api" />
      <apidata name="Transport" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Transport" />
      <setter name="set_Transport" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationInfo_Transport" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.ApplicationRegister">
      <topicdata group="api" />
      <apidata name="ApplicationRegister" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.ApplicationRegister.#ctor" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.ApplicationKey" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.EnvironmentRegisters" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.SharedSecret" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_ApplicationRegister" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.ApplicationRegister">
      <topicdata name="ApplicationRegister" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" />
      <apidata name="ApplicationRegister" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_ApplicationRegister" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.ApplicationRegister">
      <topicdata name="ApplicationRegister" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" />
      <apidata name="ApplicationRegister" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.ApplicationKey" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.EnvironmentRegisters" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.SharedSecret" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_ApplicationRegister" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.ApplicationRegister.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_ApplicationRegister__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.ApplicationKey">
      <topicdata group="api" />
      <apidata name="ApplicationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationKey" />
      <setter name="set_ApplicationKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationRegister_ApplicationKey" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.EnvironmentRegisters">
      <topicdata group="api" />
      <apidata name="EnvironmentRegisters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_EnvironmentRegisters" />
      <setter name="set_EnvironmentRegisters" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationRegister_EnvironmentRegisters" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationRegister_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ApplicationRegister.SharedSecret">
      <topicdata group="api" />
      <apidata name="SharedSecret" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SharedSecret" />
      <setter name="set_SharedSecret" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ApplicationRegister_SharedSecret" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.Environment">
      <topicdata group="api" />
      <apidata name="Environment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Infrastructure.Environment.#ctor">
          <element api="M:Sif.Framework.Model.Infrastructure.Environment.#ctor" />
          <element api="M:Sif.Framework.Model.Infrastructure.Environment.#ctor(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.ApplicationInfo" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.AuthenticationMethod" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.ConsumerName" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.DefaultZone" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.InfrastructureServices" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.InstanceId" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.ProvisionedZones" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.SessionToken" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.SolutionId" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.Type" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.UserToken" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_Environment" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.Environment">
      <topicdata name="Environment" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.Environment" />
      <apidata name="Environment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_Environment" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.Environment">
      <topicdata name="Environment" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.Environment" />
      <apidata name="Environment" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.ApplicationInfo" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.AuthenticationMethod" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.ConsumerName" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.DefaultZone" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.InfrastructureServices" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.InstanceId" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.ProvisionedZones" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.SessionToken" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.SolutionId" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.Type" />
        <element api="P:Sif.Framework.Model.Infrastructure.Environment.UserToken" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_Environment" />
    </api>
    <api id="Overload:Sif.Framework.Model.Infrastructure.Environment.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Infrastructure.Environment.#ctor" />
        <element api="M:Sif.Framework.Model.Infrastructure.Environment.#ctor(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Infrastructure_Environment__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Environment.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Environment.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Environment__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Environment.#ctor(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Environment.#ctor" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="userToken" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Environment__ctor_1" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.ApplicationInfo">
      <topicdata group="api" />
      <apidata name="ApplicationInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationInfo" />
      <setter name="set_ApplicationInfo" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_ApplicationInfo" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.AuthenticationMethod">
      <topicdata group="api" />
      <apidata name="AuthenticationMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_AuthenticationMethod" />
      <setter name="set_AuthenticationMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_AuthenticationMethod" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.ConsumerName">
      <topicdata group="api" />
      <apidata name="ConsumerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ConsumerName" />
      <setter name="set_ConsumerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_ConsumerName" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.DefaultZone">
      <topicdata group="api" />
      <apidata name="DefaultZone" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultZone" />
      <setter name="set_DefaultZone" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_DefaultZone" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.InfrastructureServices">
      <topicdata group="api" />
      <apidata name="InfrastructureServices" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InfrastructureServices" />
      <setter name="set_InfrastructureServices" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
            <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_InfrastructureServices" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceId" />
      <setter name="set_InstanceId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_InstanceId" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.ProvisionedZones">
      <topicdata group="api" />
      <apidata name="ProvisionedZones" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ProvisionedZones" />
      <setter name="set_ProvisionedZones" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_ProvisionedZones" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.SessionToken">
      <topicdata group="api" />
      <apidata name="SessionToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SessionToken" />
      <setter name="set_SessionToken" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_SessionToken" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.SolutionId">
      <topicdata group="api" />
      <apidata name="SolutionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SolutionId" />
      <setter name="set_SolutionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_SolutionId" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentType" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_Type" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Environment.UserToken">
      <topicdata group="api" />
      <apidata name="UserToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UserToken" />
      <setter name="set_UserToken" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Environment_UserToken" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister">
      <topicdata group="api" />
      <apidata name="EnvironmentRegister" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.EnvironmentRegister.#ctor" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.ApplicationKey" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.DefaultZone" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.InfrastructureServices" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.InstanceId" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.ProvisionedZones" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.SolutionId" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.UserToken" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_EnvironmentRegister" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.EnvironmentRegister">
      <topicdata name="EnvironmentRegister" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" />
      <apidata name="EnvironmentRegister" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_EnvironmentRegister" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.EnvironmentRegister">
      <topicdata name="EnvironmentRegister" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" />
      <apidata name="EnvironmentRegister" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.ApplicationKey" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.DefaultZone" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.InfrastructureServices" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.InstanceId" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.ProvisionedZones" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.SolutionId" />
        <element api="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.UserToken" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_EnvironmentRegister" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.EnvironmentRegister.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_EnvironmentRegister__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.ApplicationKey">
      <topicdata group="api" />
      <apidata name="ApplicationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationKey" />
      <setter name="set_ApplicationKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_EnvironmentRegister_ApplicationKey" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.DefaultZone">
      <topicdata group="api" />
      <apidata name="DefaultZone" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultZone" />
      <setter name="set_DefaultZone" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_EnvironmentRegister_DefaultZone" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_EnvironmentRegister_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.InfrastructureServices">
      <topicdata group="api" />
      <apidata name="InfrastructureServices" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InfrastructureServices" />
      <setter name="set_InfrastructureServices" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
            <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_EnvironmentRegister_InfrastructureServices" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceId" />
      <setter name="set_InstanceId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_EnvironmentRegister_InstanceId" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.ProvisionedZones">
      <topicdata group="api" />
      <apidata name="ProvisionedZones" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ProvisionedZones" />
      <setter name="set_ProvisionedZones" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_EnvironmentRegister_ProvisionedZones" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.SolutionId">
      <topicdata group="api" />
      <apidata name="SolutionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SolutionId" />
      <setter name="set_SolutionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_EnvironmentRegister_SolutionId" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.EnvironmentRegister.UserToken">
      <topicdata group="api" />
      <apidata name="UserToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_UserToken" />
      <setter name="set_UserToken" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_EnvironmentRegister_UserToken" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.EnvironmentType">
      <topicdata group="api" />
      <apidata name="EnvironmentType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Model.Infrastructure.EnvironmentType.DIRECT" />
        <element api="F:Sif.Framework.Model.Infrastructure.EnvironmentType.BROKERED" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_EnvironmentType" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.EnvironmentType.BROKERED">
      <topicdata group="api" notopic="" />
      <apidata name="BROKERED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_EnvironmentType_BROKERED" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.EnvironmentType.DIRECT">
      <topicdata group="api" notopic="" />
      <apidata name="DIRECT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_EnvironmentType_DIRECT" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.InfrastructureService">
      <topicdata group="api" />
      <apidata name="InfrastructureService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.InfrastructureService.#ctor" />
        <element api="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Value" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_InfrastructureService" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.InfrastructureService">
      <topicdata name="InfrastructureService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.InfrastructureService" />
      <apidata name="InfrastructureService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_InfrastructureService" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.InfrastructureService">
      <topicdata name="InfrastructureService" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.InfrastructureService" />
      <apidata name="InfrastructureService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Value" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_InfrastructureService" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.InfrastructureService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_InfrastructureService__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_InfrastructureService_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_InfrastructureService_Name" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.InfrastructureService.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_InfrastructureService_Value" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames">
      <topicdata group="api" />
      <apidata name="InfrastructureServiceNames" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.environment" />
        <element api="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.provisionRequests" />
        <element api="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.requestsConnector" />
        <element api="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.servicesConnector" />
        <element api="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.eventsConnector" />
        <element api="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.queues" />
        <element api="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.subscriptions" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_InfrastructureServiceNames" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.environment">
      <topicdata group="api" notopic="" />
      <apidata name="environment" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_InfrastructureServiceNames_environment" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.eventsConnector">
      <topicdata group="api" notopic="" />
      <apidata name="eventsConnector" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_InfrastructureServiceNames_eventsConnector" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.provisionRequests">
      <topicdata group="api" notopic="" />
      <apidata name="provisionRequests" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_InfrastructureServiceNames_provisionRequests" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.queues">
      <topicdata group="api" notopic="" />
      <apidata name="queues" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_InfrastructureServiceNames_queues" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.requestsConnector">
      <topicdata group="api" notopic="" />
      <apidata name="requestsConnector" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_InfrastructureServiceNames_requestsConnector" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.servicesConnector">
      <topicdata group="api" notopic="" />
      <apidata name="servicesConnector" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_InfrastructureServiceNames_servicesConnector" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames.subscriptions">
      <topicdata group="api" notopic="" />
      <apidata name="subscriptions" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureServiceNames" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_InfrastructureServiceNames_subscriptions" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.Job">
      <topicdata group="api" />
      <apidata name="Job" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Infrastructure.Job.#ctor">
          <element api="M:Sif.Framework.Model.Infrastructure.Job.#ctor" />
          <element api="M:Sif.Framework.Model.Infrastructure.Job.#ctor(System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.Job.AddPhase(Sif.Framework.Model.Infrastructure.Phase)" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Created" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Description" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.LastModified" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Phases" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.State" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.StateDescription" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Timeout" />
        <element api="M:Sif.Framework.Model.Infrastructure.Job.UpdatePhaseState(System.String,Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)" />
        <element api="M:Sif.Framework.Model.Infrastructure.Job.UpdateState(Sif.Framework.Model.Infrastructure.JobStateType,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_Job" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.Job">
      <topicdata name="Job" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.Job" />
      <apidata name="Job" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.Job.AddPhase(Sif.Framework.Model.Infrastructure.Phase)" />
        <element api="M:Sif.Framework.Model.Infrastructure.Job.UpdatePhaseState(System.String,Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)" />
        <element api="M:Sif.Framework.Model.Infrastructure.Job.UpdateState(Sif.Framework.Model.Infrastructure.JobStateType,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_Job" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.Job">
      <topicdata name="Job" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.Job" />
      <apidata name="Job" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Created" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Description" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.LastModified" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Phases" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.State" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.StateDescription" />
        <element api="P:Sif.Framework.Model.Infrastructure.Job.Timeout" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_Job" />
    </api>
    <api id="Overload:Sif.Framework.Model.Infrastructure.Job.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Infrastructure.Job.#ctor" />
        <element api="M:Sif.Framework.Model.Infrastructure.Job.#ctor(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Infrastructure_Job__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Job.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Job.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Job__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Job.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Job.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="description" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Job__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Job.AddPhase(Sif.Framework.Model.Infrastructure.Phase)">
      <topicdata group="api" />
      <apidata name="AddPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Job_AddPhase" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.Created">
      <topicdata group="api" />
      <apidata name="Created" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Created" />
      <setter name="set_Created" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_Created" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_Description" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.LastModified">
      <topicdata group="api" />
      <apidata name="LastModified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LastModified" />
      <setter name="set_LastModified" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_LastModified" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_Name" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.Phases">
      <topicdata group="api" />
      <apidata name="Phases" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Phases" />
      <setter name="set_Phases" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_Phases" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_State" />
      <setter name="set_State" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_State" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.StateDescription">
      <topicdata group="api" />
      <apidata name="StateDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StateDescription" />
      <setter name="set_StateDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_StateDescription" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Job.Timeout">
      <topicdata group="api" />
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Job_Timeout" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Job.UpdatePhaseState(System.String,Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)">
      <topicdata group="api" />
      <apidata name="UpdatePhaseState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
        </parameter>
        <parameter name="stateDescription" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Job_UpdatePhaseState" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Job.UpdateState(Sif.Framework.Model.Infrastructure.JobStateType,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
        </parameter>
        <parameter name="description" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Job_UpdateState" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.JobStateType">
      <topicdata group="api" />
      <apidata name="JobStateType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Model.Infrastructure.JobStateType.NOTSTARTED" />
        <element api="F:Sif.Framework.Model.Infrastructure.JobStateType.INPROGRESS" />
        <element api="F:Sif.Framework.Model.Infrastructure.JobStateType.COMPLETED" />
        <element api="F:Sif.Framework.Model.Infrastructure.JobStateType.FAILED" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_JobStateType" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.JobStateType.COMPLETED">
      <topicdata group="api" notopic="" />
      <apidata name="COMPLETED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_JobStateType_COMPLETED" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.JobStateType.FAILED">
      <topicdata group="api" notopic="" />
      <apidata name="FAILED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_JobStateType_FAILED" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.JobStateType.INPROGRESS">
      <topicdata group="api" notopic="" />
      <apidata name="INPROGRESS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_JobStateType_INPROGRESS" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.JobStateType.NOTSTARTED">
      <topicdata group="api" notopic="" />
      <apidata name="NOTSTARTED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.JobStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_JobStateType_NOTSTARTED" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.Phase">
      <topicdata group="api" />
      <apidata name="Phase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Infrastructure.Phase.#ctor">
          <element api="M:Sif.Framework.Model.Infrastructure.Phase.#ctor" />
          <element api="M:Sif.Framework.Model.Infrastructure.Phase.#ctor(System.String,System.Boolean)" />
          <element api="M:Sif.Framework.Model.Infrastructure.Phase.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)" />
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.Phase.GetCurrentState" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.Required" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.Rights" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.States" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.StatesRights" />
        <element api="M:Sif.Framework.Model.Infrastructure.Phase.UpdateState(Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_Phase" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.Phase">
      <topicdata name="Phase" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.Phase" />
      <apidata name="Phase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.Phase.GetCurrentState" />
        <element api="M:Sif.Framework.Model.Infrastructure.Phase.UpdateState(Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_Phase" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.Phase">
      <topicdata name="Phase" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.Phase" />
      <apidata name="Phase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.Required" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.Rights" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.States" />
        <element api="P:Sif.Framework.Model.Infrastructure.Phase.StatesRights" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_Phase" />
    </api>
    <api id="Overload:Sif.Framework.Model.Infrastructure.Phase.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Infrastructure.Phase.#ctor" />
        <element api="M:Sif.Framework.Model.Infrastructure.Phase.#ctor(System.String,System.Boolean)" />
        <element api="M:Sif.Framework.Model.Infrastructure.Phase.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Infrastructure_Phase__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Phase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Phase.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Phase__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Phase.#ctor(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Phase.#ctor" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="required" optional="true">
          <type api="T:System.Boolean" ref="false" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Phase__ctor_1" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Phase.#ctor(System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Phase.#ctor" />
      <parameters>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="required">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="rights" optional="true">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="stateRights" optional="true">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="phaseState" optional="true">
          <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
          <argument>
            <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
            <enumValue>
              <field name="NOTAPPLICABLE" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="stateDescription" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Not applicable</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Phase__ctor_2" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Phase.GetCurrentState">
      <topicdata group="api" />
      <apidata name="GetCurrentState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Phase_GetCurrentState" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Phase.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Phase_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Phase.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Phase_Name" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Phase.Required">
      <topicdata group="api" />
      <apidata name="Required" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Required" />
      <setter name="set_Required" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Phase_Required" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Phase.Rights">
      <topicdata group="api" />
      <apidata name="Rights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Rights" />
      <setter name="set_Rights" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Phase_Rights" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Phase.States">
      <topicdata group="api" />
      <apidata name="States" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_States" />
      <setter name="set_States" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Phase_States" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Phase.StatesRights">
      <topicdata group="api" />
      <apidata name="StatesRights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StatesRights" />
      <setter name="set_StatesRights" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Phase_StatesRights" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Phase.UpdateState(Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
        </parameter>
        <parameter name="description" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Phase_UpdateState" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.PhaseState">
      <topicdata group="api" />
      <apidata name="PhaseState" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Infrastructure.PhaseState.#ctor">
          <element api="M:Sif.Framework.Model.Infrastructure.PhaseState.#ctor" />
          <element api="M:Sif.Framework.Model.Infrastructure.PhaseState.#ctor(Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)" />
        </element>
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.Created" />
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.Description" />
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.LastModified" />
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.Type" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_PhaseState" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.PhaseState">
      <topicdata name="PhaseState" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.PhaseState" />
      <apidata name="PhaseState" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_PhaseState" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.PhaseState">
      <topicdata name="PhaseState" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.PhaseState" />
      <apidata name="PhaseState" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.Created" />
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.Description" />
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.LastModified" />
        <element api="P:Sif.Framework.Model.Infrastructure.PhaseState.Type" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_PhaseState" />
    </api>
    <api id="Overload:Sif.Framework.Model.Infrastructure.PhaseState.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Infrastructure.PhaseState.#ctor" />
        <element api="M:Sif.Framework.Model.Infrastructure.PhaseState.#ctor(Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Infrastructure_PhaseState__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.PhaseState.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.PhaseState.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_PhaseState__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.PhaseState.#ctor(Sif.Framework.Model.Infrastructure.PhaseStateType,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.PhaseState.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
        </parameter>
        <parameter name="description" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_PhaseState__ctor_1" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.PhaseState.Created">
      <topicdata group="api" />
      <apidata name="Created" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Created" />
      <setter name="set_Created" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_PhaseState_Created" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.PhaseState.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_PhaseState_Description" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.PhaseState.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_PhaseState_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.PhaseState.LastModified">
      <topicdata group="api" />
      <apidata name="LastModified" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LastModified" />
      <setter name="set_LastModified" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.DateTime" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_PhaseState_LastModified" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.PhaseState.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_PhaseState_Type" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.PhaseStateType">
      <topicdata group="api" />
      <apidata name="PhaseStateType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Model.Infrastructure.PhaseStateType.NOTAPPLICABLE" />
        <element api="F:Sif.Framework.Model.Infrastructure.PhaseStateType.NOTSTARTED" />
        <element api="F:Sif.Framework.Model.Infrastructure.PhaseStateType.PENDING" />
        <element api="F:Sif.Framework.Model.Infrastructure.PhaseStateType.SKIPPED" />
        <element api="F:Sif.Framework.Model.Infrastructure.PhaseStateType.INPROGRESS" />
        <element api="F:Sif.Framework.Model.Infrastructure.PhaseStateType.COMPLETED" />
        <element api="F:Sif.Framework.Model.Infrastructure.PhaseStateType.FAILED" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_PhaseStateType" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.PhaseStateType.COMPLETED">
      <topicdata group="api" notopic="" />
      <apidata name="COMPLETED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_PhaseStateType_COMPLETED" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.PhaseStateType.FAILED">
      <topicdata group="api" notopic="" />
      <apidata name="FAILED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_PhaseStateType_FAILED" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.PhaseStateType.INPROGRESS">
      <topicdata group="api" notopic="" />
      <apidata name="INPROGRESS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_PhaseStateType_INPROGRESS" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.PhaseStateType.NOTAPPLICABLE">
      <topicdata group="api" notopic="" />
      <apidata name="NOTAPPLICABLE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_PhaseStateType_NOTAPPLICABLE" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.PhaseStateType.NOTSTARTED">
      <topicdata group="api" notopic="" />
      <apidata name="NOTSTARTED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_PhaseStateType_NOTSTARTED" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.PhaseStateType.PENDING">
      <topicdata group="api" notopic="" />
      <apidata name="PENDING" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_PhaseStateType_PENDING" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.PhaseStateType.SKIPPED">
      <topicdata group="api" notopic="" />
      <apidata name="SKIPPED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseStateType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_PhaseStateType_SKIPPED" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.ProductIdentity">
      <topicdata group="api" />
      <apidata name="ProductIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.ProductIdentity.#ctor" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.IconURI" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.ProductName" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.ProductVersion" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.VendorName" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_ProductIdentity" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.ProductIdentity">
      <topicdata name="ProductIdentity" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.ProductIdentity" />
      <apidata name="ProductIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_ProductIdentity" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.ProductIdentity">
      <topicdata name="ProductIdentity" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.ProductIdentity" />
      <apidata name="ProductIdentity" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.IconURI" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.ProductName" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.ProductVersion" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProductIdentity.VendorName" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_ProductIdentity" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.ProductIdentity.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_ProductIdentity__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ProductIdentity.IconURI">
      <topicdata group="api" />
      <apidata name="IconURI" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IconURI" />
      <setter name="set_IconURI" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ProductIdentity_IconURI" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ProductIdentity.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ProductIdentity_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ProductIdentity.ProductName">
      <topicdata group="api" />
      <apidata name="ProductName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ProductName" />
      <setter name="set_ProductName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ProductIdentity_ProductName" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ProductIdentity.ProductVersion">
      <topicdata group="api" />
      <apidata name="ProductVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ProductVersion" />
      <setter name="set_ProductVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ProductIdentity_ProductVersion" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ProductIdentity.VendorName">
      <topicdata group="api" />
      <apidata name="VendorName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_VendorName" />
      <setter name="set_VendorName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ProductIdentity_VendorName" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.Property">
      <topicdata group="api" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.Property.#ctor" />
        <element api="P:Sif.Framework.Model.Infrastructure.Property.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Property.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.Property.Value" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_Property" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.Property">
      <topicdata name="Property" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.Property" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Property" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_Property" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.Property">
      <topicdata name="Property" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.Property" />
      <apidata name="Property" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.Property.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Property.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.Property.Value" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Property" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_Property" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Property.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Property" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Property__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Property.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Property" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Property_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Property.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Property" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Property_Name" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Property.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Property" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Property_Value" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.ProvisionedZone">
      <topicdata group="api" />
      <apidata name="ProvisionedZone" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.ProvisionedZone.#ctor" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.Services" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.SifId" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_ProvisionedZone" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.ProvisionedZone">
      <topicdata name="ProvisionedZone" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" />
      <apidata name="ProvisionedZone" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_ProvisionedZone" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.ProvisionedZone">
      <topicdata name="ProvisionedZone" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" />
      <apidata name="ProvisionedZone" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.Services" />
        <element api="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.SifId" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_ProvisionedZone" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.ProvisionedZone.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_ProvisionedZone__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ProvisionedZone_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.Services">
      <topicdata group="api" />
      <apidata name="Services" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Services" />
      <setter name="set_Services" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ProvisionedZone_Services" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.ProvisionedZone.SifId">
      <topicdata group="api" />
      <apidata name="SifId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SifId" />
      <setter name="set_SifId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_ProvisionedZone_SifId" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.Right">
      <topicdata group="api" />
      <apidata name="Right" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Model.Infrastructure.Right.#ctor">
          <element api="M:Sif.Framework.Model.Infrastructure.Right.#ctor" />
          <element api="M:Sif.Framework.Model.Infrastructure.Right.#ctor(Sif.Framework.Model.Infrastructure.RightType,Sif.Framework.Model.Infrastructure.RightValue)" />
        </element>
        <element api="P:Sif.Framework.Model.Infrastructure.Right.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Right.Type" />
        <element api="P:Sif.Framework.Model.Infrastructure.Right.Value" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_Right" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.Right">
      <topicdata name="Right" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.Right" />
      <apidata name="Right" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_Right" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.Right">
      <topicdata name="Right" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.Right" />
      <apidata name="Right" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.Right.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Right.Type" />
        <element api="P:Sif.Framework.Model.Infrastructure.Right.Value" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_Right" />
    </api>
    <api id="Overload:Sif.Framework.Model.Infrastructure.Right.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Model.Infrastructure.Right.#ctor" />
        <element api="M:Sif.Framework.Model.Infrastructure.Right.#ctor(Sif.Framework.Model.Infrastructure.RightType,Sif.Framework.Model.Infrastructure.RightValue)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Model_Infrastructure_Right__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Right.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Right.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Right__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Right.#ctor(Sif.Framework.Model.Infrastructure.RightType,Sif.Framework.Model.Infrastructure.RightValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Model.Infrastructure.Right.#ctor" />
      <parameters>
        <parameter name="type">
          <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Right__ctor_1" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Right.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Right_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Right.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Right_Type" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Right.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Right_Value" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.RightType">
      <topicdata group="api" />
      <apidata name="RightType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Model.Infrastructure.RightType.ADMIN" />
        <element api="F:Sif.Framework.Model.Infrastructure.RightType.CREATE" />
        <element api="F:Sif.Framework.Model.Infrastructure.RightType.DELETE" />
        <element api="F:Sif.Framework.Model.Infrastructure.RightType.PROVIDE" />
        <element api="F:Sif.Framework.Model.Infrastructure.RightType.QUERY" />
        <element api="F:Sif.Framework.Model.Infrastructure.RightType.SUBSCRIBE" />
        <element api="F:Sif.Framework.Model.Infrastructure.RightType.UPDATE" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_RightType" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightType.ADMIN">
      <topicdata group="api" notopic="" />
      <apidata name="ADMIN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightType_ADMIN" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightType.CREATE">
      <topicdata group="api" notopic="" />
      <apidata name="CREATE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightType_CREATE" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightType.DELETE">
      <topicdata group="api" notopic="" />
      <apidata name="DELETE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightType_DELETE" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightType.PROVIDE">
      <topicdata group="api" notopic="" />
      <apidata name="PROVIDE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightType_PROVIDE" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightType.QUERY">
      <topicdata group="api" notopic="" />
      <apidata name="QUERY" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightType_QUERY" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightType.SUBSCRIBE">
      <topicdata group="api" notopic="" />
      <apidata name="SUBSCRIBE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightType_SUBSCRIBE" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightType.UPDATE">
      <topicdata group="api" notopic="" />
      <apidata name="UPDATE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightType_UPDATE" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.RightValue">
      <topicdata group="api" />
      <apidata name="RightValue" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Model.Infrastructure.RightValue.APPROVED" />
        <element api="F:Sif.Framework.Model.Infrastructure.RightValue.REJECTED" />
        <element api="F:Sif.Framework.Model.Infrastructure.RightValue.SUPPORTED" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_RightValue" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightValue.APPROVED">
      <topicdata group="api" notopic="" />
      <apidata name="APPROVED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightValue_APPROVED" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightValue.REJECTED">
      <topicdata group="api" notopic="" />
      <apidata name="REJECTED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightValue_REJECTED" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.RightValue.SUPPORTED">
      <topicdata group="api" notopic="" />
      <apidata name="SUPPORTED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_RightValue_SUPPORTED" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.Service">
      <topicdata group="api" />
      <apidata name="Service" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.Service.#ctor" />
        <element api="M:Sif.Framework.Model.Infrastructure.Service.CompareTo(Sif.Framework.Model.Infrastructure.Service)" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.ContextId" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.Rights" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.Type" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_Service" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.Service">
      <topicdata name="Service" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.Service" />
      <apidata name="Service" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.Service.CompareTo(Sif.Framework.Model.Infrastructure.Service)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_Service" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.Service">
      <topicdata name="Service" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.Service" />
      <apidata name="Service" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.Service.ContextId" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.Name" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.Rights" />
        <element api="P:Sif.Framework.Model.Infrastructure.Service.Type" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_Service" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Service.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Service__ctor" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Service.CompareTo(Sif.Framework.Model.Infrastructure.Service)">
      <topicdata group="api" />
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="service">
          <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Service_CompareTo" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Service.ContextId">
      <topicdata group="api" />
      <apidata name="ContextId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContextId" />
      <setter name="set_ContextId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Service_ContextId" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Service.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Service_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Service.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Service_Name" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Service.Rights">
      <topicdata group="api" />
      <apidata name="Rights" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Rights" />
      <setter name="set_Rights" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Service_Rights" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Service.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Service_Type" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.ServiceType">
      <topicdata group="api" />
      <apidata name="ServiceType" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Model.Infrastructure.ServiceType.UTILITY" />
        <element api="F:Sif.Framework.Model.Infrastructure.ServiceType.OBJECT" />
        <element api="F:Sif.Framework.Model.Infrastructure.ServiceType.FUNCTIONAL" />
        <element api="F:Sif.Framework.Model.Infrastructure.ServiceType.SERVICEPATH" />
        <element api="F:Sif.Framework.Model.Infrastructure.ServiceType.XQUERYTEMP" />
        <element api="F:Sif.Framework.Model.Infrastructure.ServiceType.LATE" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_ServiceType" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.ServiceType.FUNCTIONAL">
      <topicdata group="api" notopic="" />
      <apidata name="FUNCTIONAL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_ServiceType_FUNCTIONAL" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.ServiceType.LATE">
      <topicdata group="api" notopic="" />
      <apidata name="LATE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_ServiceType_LATE" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.ServiceType.OBJECT">
      <topicdata group="api" notopic="" />
      <apidata name="OBJECT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_ServiceType_OBJECT" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.ServiceType.SERVICEPATH">
      <topicdata group="api" notopic="" />
      <apidata name="SERVICEPATH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_ServiceType_SERVICEPATH" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.ServiceType.UTILITY">
      <topicdata group="api" notopic="" />
      <apidata name="UTILITY" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_ServiceType_UTILITY" />
    </api>
    <api id="F:Sif.Framework.Model.Infrastructure.ServiceType.XQUERYTEMP">
      <topicdata group="api" notopic="" />
      <apidata name="XQUERYTEMP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.ServiceType" ref="false" />
      </containers>
      <file name="F_Sif_Framework_Model_Infrastructure_ServiceType_XQUERYTEMP" />
    </api>
    <api id="T:Sif.Framework.Model.Infrastructure.Zone">
      <topicdata group="api" />
      <apidata name="Zone" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Infrastructure.Zone.#ctor" />
        <element api="P:Sif.Framework.Model.Infrastructure.Zone.Description" />
        <element api="P:Sif.Framework.Model.Infrastructure.Zone.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Zone.Properties" />
        <element api="P:Sif.Framework.Model.Infrastructure.Zone.SifId" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Model_Infrastructure_Zone" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Infrastructure.Zone">
      <topicdata name="Zone" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Infrastructure.Zone" />
      <apidata name="Zone" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Infrastructure_Zone" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Infrastructure.Zone">
      <topicdata name="Zone" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Infrastructure.Zone" />
      <apidata name="Zone" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Infrastructure.Zone.Description" />
        <element api="P:Sif.Framework.Model.Infrastructure.Zone.Id" />
        <element api="P:Sif.Framework.Model.Infrastructure.Zone.Properties" />
        <element api="P:Sif.Framework.Model.Infrastructure.Zone.SifId" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Infrastructure_Zone" />
    </api>
    <api id="M:Sif.Framework.Model.Infrastructure.Zone.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Infrastructure_Zone__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Zone.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Zone_Description" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Zone.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
          <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
            <specialization>
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Zone_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Zone.Properties">
      <topicdata group="api" />
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Properties" />
      <setter name="set_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Property" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Zone_Properties" />
    </api>
    <api id="P:Sif.Framework.Model.Infrastructure.Zone.SifId">
      <topicdata group="api" />
      <apidata name="SifId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_SifId" />
      <setter name="set_SifId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Infrastructure" />
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Infrastructure_Zone_SifId" />
    </api>
    <api id="N:Sif.Framework.Model.Persistence">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Model.Persistence" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Model.Persistence.IPersistable`1" />
      </elements>
      <file name="N_Sif_Framework_Model_Persistence" />
    </api>
    <api id="T:Sif.Framework.Model.Persistence.IPersistable`1">
      <topicdata group="api" />
      <apidata name="IPersistable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="PK" />
      </templates>
      <implementors>
        <type api="T:Sif.Framework.Model.Infrastructure.PhaseState" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationInfo" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.InfrastructureService" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProductIdentity" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.Property" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.ProvisionedZone" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.Service" ref="true" />
        <type api="T:Sif.Framework.Model.Infrastructure.Zone" ref="true" />
      </implementors>
      <elements>
        <element api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Persistence" />
      </containers>
      <file name="T_Sif_Framework_Model_Persistence_IPersistable_1" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Persistence.IPersistable`1">
      <topicdata name="IPersistable" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Persistence.IPersistable`1" />
      <apidata name="IPersistable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="PK" />
      </templates>
      <elements>
        <element api="P:Sif.Framework.Model.Persistence.IPersistable`1.Id" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Persistence" />
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Persistence_IPersistable_1" />
    </api>
    <api id="P:Sif.Framework.Model.Persistence.IPersistable`1.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <template name="PK" index="0" api="T:Sif.Framework.Model.Persistence.IPersistable`1" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Persistence" />
        <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Persistence_IPersistable_1_Id" />
    </api>
    <api id="N:Sif.Framework.Model.Query">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Model.Query" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Model.Query.Condition" />
        <element api="T:Sif.Framework.Model.Query.Condition.Operator" />
        <element api="T:Sif.Framework.Model.Query.EqualCondition" />
      </elements>
      <file name="N_Sif_Framework_Model_Query" />
    </api>
    <api id="T:Sif.Framework.Model.Query.Condition">
      <topicdata group="api" />
      <apidata name="Condition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Model.Query.EqualCondition" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Query.Condition.#ctor" />
        <element api="P:Sif.Framework.Model.Query.Condition.Left" />
        <element api="P:Sif.Framework.Model.Query.Condition.Op" />
        <element api="P:Sif.Framework.Model.Query.Condition.Right" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
      </containers>
      <file name="T_Sif_Framework_Model_Query_Condition" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Query.Condition">
      <topicdata name="Condition" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Query.Condition" />
      <apidata name="Condition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Query_Condition" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Query.Condition">
      <topicdata name="Condition" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Query.Condition" />
      <apidata name="Condition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Query.Condition.Left" />
        <element api="P:Sif.Framework.Model.Query.Condition.Op" />
        <element api="P:Sif.Framework.Model.Query.Condition.Right" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Query_Condition" />
    </api>
    <api id="M:Sif.Framework.Model.Query.Condition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Query_Condition__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Query.Condition.Left">
      <topicdata group="api" />
      <apidata name="Left" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Left" />
      <setter name="set_Left" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Query_Condition_Left" />
    </api>
    <api id="P:Sif.Framework.Model.Query.Condition.Op">
      <topicdata group="api" />
      <apidata name="Op" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Op" />
      <setter name="set_Op" />
      <returns>
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Query_Condition_Op" />
    </api>
    <api id="P:Sif.Framework.Model.Query.Condition.Right">
      <topicdata group="api" />
      <apidata name="Right" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Right" />
      <setter name="set_Right" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Query_Condition_Right" />
    </api>
    <api id="T:Sif.Framework.Model.Query.Condition.Operator">
      <topicdata group="api" />
      <apidata name="Operator" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Model.Query.Condition.Operator.Equal" />
        <element api="F:Sif.Framework.Model.Query.Condition.Operator.NotEqual" />
        <element api="F:Sif.Framework.Model.Query.Condition.Operator.LessThan" />
        <element api="F:Sif.Framework.Model.Query.Condition.Operator.GreaterThan" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
      </containers>
      <file name="T_Sif_Framework_Model_Query_Condition_Operator" />
    </api>
    <api id="F:Sif.Framework.Model.Query.Condition.Operator.Equal">
      <topicdata group="api" notopic="" />
      <apidata name="Equal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </containers>
      <file name="F_Sif_Framework_Model_Query_Condition_Operator_Equal" />
    </api>
    <api id="F:Sif.Framework.Model.Query.Condition.Operator.GreaterThan">
      <topicdata group="api" notopic="" />
      <apidata name="GreaterThan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </containers>
      <file name="F_Sif_Framework_Model_Query_Condition_Operator_GreaterThan" />
    </api>
    <api id="F:Sif.Framework.Model.Query.Condition.Operator.LessThan">
      <topicdata group="api" notopic="" />
      <apidata name="LessThan" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </containers>
      <file name="F_Sif_Framework_Model_Query_Condition_Operator_LessThan" />
    </api>
    <api id="F:Sif.Framework.Model.Query.Condition.Operator.NotEqual">
      <topicdata group="api" notopic="" />
      <apidata name="NotEqual" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </containers>
      <file name="F_Sif_Framework_Model_Query_Condition_Operator_NotEqual" />
    </api>
    <api id="T:Sif.Framework.Model.Query.EqualCondition">
      <topicdata group="api" />
      <apidata name="EqualCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Query.Condition.Left" />
        <element api="P:Sif.Framework.Model.Query.Condition.Right" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Query.EqualCondition.#ctor" />
        <element api="P:Sif.Framework.Model.Query.EqualCondition.Op" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
      </containers>
      <file name="T_Sif_Framework_Model_Query_EqualCondition" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Query.EqualCondition">
      <topicdata name="EqualCondition" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Query.EqualCondition" />
      <apidata name="EqualCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.EqualCondition" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Query_EqualCondition" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Query.EqualCondition">
      <topicdata name="EqualCondition" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Query.EqualCondition" />
      <apidata name="EqualCondition" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Query.Condition.Left" />
        <element api="P:Sif.Framework.Model.Query.Condition.Right" />
        <element api="P:Sif.Framework.Model.Query.EqualCondition.Op" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.EqualCondition" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Query_EqualCondition" />
    </api>
    <api id="M:Sif.Framework.Model.Query.EqualCondition.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.EqualCondition" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Query_EqualCondition__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Query.EqualCondition.Op">
      <topicdata group="api" />
      <apidata name="Op" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Sif.Framework.Model.Query.Condition.Op">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Op" />
      <returns>
        <type api="T:Sif.Framework.Model.Query.Condition.Operator" ref="false">
          <type api="T:Sif.Framework.Model.Query.Condition" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Query" />
        <type api="T:Sif.Framework.Model.Query.EqualCondition" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Query_EqualCondition_Op" />
    </api>
    <api id="N:Sif.Framework.Model.Responses">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Model.Responses" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" />
        <element api="T:Sif.Framework.Model.Responses.CreateStatus" />
        <element api="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" />
        <element api="T:Sif.Framework.Model.Responses.DeleteStatus" />
        <element api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" />
        <element api="T:Sif.Framework.Model.Responses.ResponseError" />
        <element api="T:Sif.Framework.Model.Responses.ResponseStatus" />
        <element api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" />
        <element api="T:Sif.Framework.Model.Responses.UpdateStatus" />
      </elements>
      <file name="N_Sif_Framework_Model_Responses" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.CreateStatus">
      <topicdata group="api" />
      <apidata name="CreateStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Responses.ResponseStatus" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.CreateStatus.#ctor" />
        <element api="P:Sif.Framework.Model.Responses.CreateStatus.AdvisoryId" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Error" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_CreateStatus" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.CreateStatus">
      <topicdata name="CreateStatus" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.CreateStatus" />
      <apidata name="CreateStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.CreateStatus" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_CreateStatus" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.CreateStatus">
      <topicdata name="CreateStatus" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.CreateStatus" />
      <apidata name="CreateStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Responses.CreateStatus.AdvisoryId" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Error" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.CreateStatus" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_CreateStatus" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.CreateStatus.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.CreateStatus" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_CreateStatus__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.CreateStatus.AdvisoryId">
      <topicdata group="api" />
      <apidata name="AdvisoryId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AdvisoryId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.CreateStatus" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_CreateStatus_AdvisoryId" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.DeleteStatus">
      <topicdata group="api" />
      <apidata name="DeleteStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Responses.ResponseStatus" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.DeleteStatus.#ctor" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Error" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_DeleteStatus" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.DeleteStatus">
      <topicdata name="DeleteStatus" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.DeleteStatus" />
      <apidata name="DeleteStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.DeleteStatus" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_DeleteStatus" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.DeleteStatus">
      <topicdata name="DeleteStatus" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.DeleteStatus" />
      <apidata name="DeleteStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Error" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.DeleteStatus" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_DeleteStatus" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.DeleteStatus.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.DeleteStatus" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_DeleteStatus__ctor" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.MultipleCreateResponse">
      <topicdata group="api" />
      <apidata name="MultipleCreateResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Responses.CreateStatus" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.MultipleCreateResponse.#ctor" />
        <element api="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_MultipleCreateResponse" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.MultipleCreateResponse">
      <topicdata name="MultipleCreateResponse" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.MultipleCreateResponse" />
      <apidata name="MultipleCreateResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_MultipleCreateResponse" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.MultipleCreateResponse">
      <topicdata name="MultipleCreateResponse" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.MultipleCreateResponse" />
      <apidata name="MultipleCreateResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_MultipleCreateResponse" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.MultipleCreateResponse.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_MultipleCreateResponse__ctor" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.MultipleDeleteResponse">
      <topicdata group="api" />
      <apidata name="MultipleDeleteResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Responses.DeleteStatus" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.MultipleDeleteResponse.#ctor" />
        <element api="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_MultipleDeleteResponse" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.MultipleDeleteResponse">
      <topicdata name="MultipleDeleteResponse" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" />
      <apidata name="MultipleDeleteResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_MultipleDeleteResponse" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.MultipleDeleteResponse">
      <topicdata name="MultipleDeleteResponse" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" />
      <apidata name="MultipleDeleteResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_MultipleDeleteResponse" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.MultipleDeleteResponse.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_MultipleDeleteResponse__ctor" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1">
      <topicdata group="api" />
      <apidata name="MultipleObjectResponse" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" ref="true" />
          <type api="T:Sif.Framework.Model.Responses.MultipleDeleteResponse" ref="true" />
          <type api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TStatus" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.MultipleObjectResponse`1.#ctor" />
        <element api="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_MultipleObjectResponse_1" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.MultipleObjectResponse`1">
      <topicdata name="MultipleObjectResponse" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" />
      <apidata name="MultipleObjectResponse" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TStatus" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_MultipleObjectResponse_1" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.MultipleObjectResponse`1">
      <topicdata name="MultipleObjectResponse" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" />
      <apidata name="MultipleObjectResponse" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TStatus" />
      </templates>
      <elements>
        <element api="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_MultipleObjectResponse_1" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.MultipleObjectResponse`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_MultipleObjectResponse_1__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords">
      <topicdata group="api" />
      <apidata name="StatusRecords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StatusRecords" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TStatus" index="0" api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_MultipleObjectResponse_1_StatusRecords" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.MultipleUpdateResponse">
      <topicdata group="api" />
      <apidata name="MultipleUpdateResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Responses.MultipleObjectResponse`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Responses.UpdateStatus" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.MultipleUpdateResponse.#ctor" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_MultipleUpdateResponse" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.MultipleUpdateResponse">
      <topicdata name="MultipleUpdateResponse" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" />
      <apidata name="MultipleUpdateResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_MultipleUpdateResponse" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.MultipleUpdateResponse">
      <topicdata name="MultipleUpdateResponse" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" />
      <apidata name="MultipleUpdateResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Responses.MultipleObjectResponse`1.StatusRecords" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_MultipleUpdateResponse" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.MultipleUpdateResponse.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_MultipleUpdateResponse__ctor" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.ResponseError">
      <topicdata group="api" />
      <apidata name="ResponseError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.ResponseError.#ctor" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Code" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Description" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Message" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Scope" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_ResponseError" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.ResponseError">
      <topicdata name="ResponseError" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.ResponseError" />
      <apidata name="ResponseError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseError" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_ResponseError" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.ResponseError">
      <topicdata name="ResponseError" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.ResponseError" />
      <apidata name="ResponseError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Code" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Description" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Message" />
        <element api="P:Sif.Framework.Model.Responses.ResponseError.Scope" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseError" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_ResponseError" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.ResponseError.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseError" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_ResponseError__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.ResponseError.Code">
      <topicdata group="api" />
      <apidata name="Code" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Code" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseError" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_ResponseError_Code" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.ResponseError.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseError" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_ResponseError_Description" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.ResponseError.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseError" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_ResponseError_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.ResponseError.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseError" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_ResponseError_Message" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.ResponseError.Scope">
      <topicdata group="api" />
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scope" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseError" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_ResponseError_Scope" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.ResponseStatus">
      <topicdata group="api" />
      <apidata name="ResponseStatus" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Model.Responses.CreateStatus" ref="true" />
          <type api="T:Sif.Framework.Model.Responses.DeleteStatus" ref="true" />
          <type api="T:Sif.Framework.Model.Responses.UpdateStatus" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.ResponseStatus.#ctor" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Error" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_ResponseStatus" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.ResponseStatus">
      <topicdata name="ResponseStatus" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.ResponseStatus" />
      <apidata name="ResponseStatus" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseStatus" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_ResponseStatus" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.ResponseStatus">
      <topicdata name="ResponseStatus" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.ResponseStatus" />
      <apidata name="ResponseStatus" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Error" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseStatus" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_ResponseStatus" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.ResponseStatus.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseStatus" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_ResponseStatus__ctor" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.ResponseStatus.Error">
      <topicdata group="api" />
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:Sif.Framework.Model.Responses.ResponseError" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseStatus" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_ResponseStatus_Error" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.ResponseStatus.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseStatus" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_ResponseStatus_Id" />
    </api>
    <api id="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode">
      <topicdata group="api" />
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StatusCode" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.ResponseStatus" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Responses_ResponseStatus_StatusCode" />
    </api>
    <api id="T:Sif.Framework.Model.Responses.UpdateStatus">
      <topicdata group="api" />
      <apidata name="UpdateStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Model.Responses.ResponseStatus" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Error" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Model.Responses.UpdateStatus.#ctor" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
      </containers>
      <file name="T_Sif_Framework_Model_Responses_UpdateStatus" />
    </api>
    <api id="Methods.T:Sif.Framework.Model.Responses.UpdateStatus">
      <topicdata name="UpdateStatus" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Model.Responses.UpdateStatus" />
      <apidata name="UpdateStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.UpdateStatus" />
      </containers>
      <file name="Methods_T_Sif_Framework_Model_Responses_UpdateStatus" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Responses.UpdateStatus">
      <topicdata name="UpdateStatus" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Responses.UpdateStatus" />
      <apidata name="UpdateStatus" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Error" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.Id" />
        <element api="P:Sif.Framework.Model.Responses.ResponseStatus.StatusCode" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.UpdateStatus" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Responses_UpdateStatus" />
    </api>
    <api id="M:Sif.Framework.Model.Responses.UpdateStatus.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Responses" />
        <type api="T:Sif.Framework.Model.Responses.UpdateStatus" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Model_Responses_UpdateStatus__ctor" />
    </api>
    <api id="N:Sif.Framework.Model.Settings">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Model.Settings" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Model.Settings.IFrameworkSettings" />
      </elements>
      <file name="N_Sif_Framework_Model_Settings" />
    </api>
    <api id="T:Sif.Framework.Model.Settings.IFrameworkSettings">
      <topicdata group="api" />
      <apidata name="IFrameworkSettings" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.ApplicationKey" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.AuthenticationMethod" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.ConsumerName" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.DataModelNamespace" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.DeleteOnUnregister" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentType" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentUrl" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.InfrastructureNamespace" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.InstanceId" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobBinding" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobClasses" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobTimeoutEnabled" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobTimeoutFrequency" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.NavigationPageSize" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.SharedSecret" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.SolutionId" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.StartupDelay" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.SupportedInfrastructureVersion" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.UserToken" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
      </containers>
      <file name="T_Sif_Framework_Model_Settings_IFrameworkSettings" />
    </api>
    <api id="Properties.T:Sif.Framework.Model.Settings.IFrameworkSettings">
      <topicdata name="IFrameworkSettings" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Model.Settings.IFrameworkSettings" />
      <apidata name="IFrameworkSettings" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.ApplicationKey" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.AuthenticationMethod" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.ConsumerName" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.DataModelNamespace" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.DeleteOnUnregister" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentType" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentUrl" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.InfrastructureNamespace" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.InstanceId" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobBinding" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobClasses" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobTimeoutEnabled" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobTimeoutFrequency" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.NavigationPageSize" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.SharedSecret" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.SolutionId" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.StartupDelay" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.SupportedInfrastructureVersion" />
        <element api="P:Sif.Framework.Model.Settings.IFrameworkSettings.UserToken" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" />
      </containers>
      <file name="Properties_T_Sif_Framework_Model_Settings_IFrameworkSettings" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.ApplicationKey">
      <topicdata group="api" />
      <apidata name="ApplicationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ApplicationKey" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_ApplicationKey" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.AuthenticationMethod">
      <topicdata group="api" />
      <apidata name="AuthenticationMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AuthenticationMethod" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_AuthenticationMethod" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.ConsumerName">
      <topicdata group="api" />
      <apidata name="ConsumerName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ConsumerName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_ConsumerName" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.DataModelNamespace">
      <topicdata group="api" />
      <apidata name="DataModelNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DataModelNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_DataModelNamespace" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.DeleteOnUnregister">
      <topicdata group="api" />
      <apidata name="DeleteOnUnregister" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DeleteOnUnregister" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_DeleteOnUnregister" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentType">
      <topicdata group="api" />
      <apidata name="EnvironmentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_EnvironmentType" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentType" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_EnvironmentType" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.EnvironmentUrl">
      <topicdata group="api" />
      <apidata name="EnvironmentUrl" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_EnvironmentUrl" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_EnvironmentUrl" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.InfrastructureNamespace">
      <topicdata group="api" />
      <apidata name="InfrastructureNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InfrastructureNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_InfrastructureNamespace" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_InstanceId" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobBinding">
      <topicdata group="api" />
      <apidata name="JobBinding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_JobBinding" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_JobBinding" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobClasses">
      <topicdata group="api" />
      <apidata name="JobClasses" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_JobClasses" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_JobClasses" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobTimeoutEnabled">
      <topicdata group="api" />
      <apidata name="JobTimeoutEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_JobTimeoutEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_JobTimeoutEnabled" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.JobTimeoutFrequency">
      <topicdata group="api" />
      <apidata name="JobTimeoutFrequency" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_JobTimeoutFrequency" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_JobTimeoutFrequency" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.NavigationPageSize">
      <topicdata group="api" />
      <apidata name="NavigationPageSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_NavigationPageSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_NavigationPageSize" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.SharedSecret">
      <topicdata group="api" />
      <apidata name="SharedSecret" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SharedSecret" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_SharedSecret" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.SolutionId">
      <topicdata group="api" />
      <apidata name="SolutionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SolutionId" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_SolutionId" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.StartupDelay">
      <topicdata group="api" />
      <apidata name="StartupDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_StartupDelay" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_StartupDelay" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.SupportedInfrastructureVersion">
      <topicdata group="api" />
      <apidata name="SupportedInfrastructureVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_SupportedInfrastructureVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_SupportedInfrastructureVersion" />
    </api>
    <api id="P:Sif.Framework.Model.Settings.IFrameworkSettings.UserToken">
      <topicdata group="api" />
      <apidata name="UserToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_UserToken" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Model.Settings" />
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Model_Settings_IFrameworkSettings_UserToken" />
    </api>
    <api id="N:Sif.Framework.Persistence">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Persistence" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Persistence.IGenericRepository`2" />
      </elements>
      <file name="N_Sif_Framework_Persistence" />
    </api>
    <api id="T:Sif.Framework.Persistence.IGenericRepository`2">
      <topicdata group="api" />
      <apidata name="IGenericRepository" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <implementors>
        <type api="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" ref="true" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" ref="true" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" ref="true" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:Sif.Framework.Persistence.IGenericRepository`2.Delete">
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.IGenericRepository`2.Retrieve">
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.IGenericRepository`2.Save">
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Save(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
      </containers>
      <file name="T_Sif_Framework_Persistence_IGenericRepository_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Persistence.IGenericRepository`2">
      <topicdata name="IGenericRepository" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Persistence.IGenericRepository`2" />
      <apidata name="IGenericRepository" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <elements>
        <element api="Overload:Sif.Framework.Persistence.IGenericRepository`2.Delete">
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.IGenericRepository`2.Retrieve">
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.IGenericRepository`2.Save">
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Save(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Persistence_IGenericRepository_2" />
    </api>
    <api id="Overload:Sif.Framework.Persistence.IGenericRepository`2.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`1)" />
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Persistence_IGenericRepository_2_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Persistence.IGenericRepository`2.Retrieve">
      <topicdata name="Retrieve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve" />
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`1)" />
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`0)" />
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Persistence_IGenericRepository_2_Retrieve" />
    </api>
    <api id="Overload:Sif.Framework.Persistence.IGenericRepository`2.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Persistence.IGenericRepository`2.Save(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Persistence_IGenericRepository_2_Save" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Delete" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`1)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`0)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Delete_2" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Exists(`1)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Exists" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pageIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Retrieve_1" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`1)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Retrieve_2" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`0)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Retrieve_3" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Save" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Save" />
    </api>
    <api id="M:Sif.Framework.Persistence.IGenericRepository`2.Save(`0)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.IGenericRepository`2.Save" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="PK" index="1" api="T:Sif.Framework.Persistence.IGenericRepository`2" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence" />
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_IGenericRepository_2_Save_1" />
    </api>
    <api id="N:Sif.Framework.Persistence.NHibernate">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Persistence.NHibernate" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" />
        <element api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" />
        <element api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" />
        <element api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
        <element api="T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory" />
      </elements>
      <file name="N_Sif_Framework_Persistence_NHibernate" />
    </api>
    <api id="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository">
      <topicdata group="api" />
      <apidata name="ApplicationRegisterRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.#ctor" />
        <element api="M:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.RetrieveByApplicationKey(System.String)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.Delete">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.Retrieve">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.Save">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
        </element>
        <element api="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
      </containers>
      <file name="T_Sif_Framework_Persistence_NHibernate_ApplicationRegisterRepository" />
    </api>
    <api id="Methods.T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository">
      <topicdata name="ApplicationRegisterRepository" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" />
      <apidata name="ApplicationRegisterRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.RetrieveByApplicationKey(System.String)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.Delete">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.Retrieve">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.Save">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" />
      </containers>
      <file name="Methods_T_Sif_Framework_Persistence_NHibernate_ApplicationRegisterRepository" />
    </api>
    <api id="Fields.T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository">
      <topicdata name="ApplicationRegisterRepository" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" />
      <apidata name="ApplicationRegisterRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" />
      </containers>
      <file name="Fields_T_Sif_Framework_Persistence_NHibernate_ApplicationRegisterRepository" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_ApplicationRegisterRepository__ctor" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository.RetrieveByApplicationKey(System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveByApplicationKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_ApplicationRegisterRepository_RetrieveByApplicationKey" />
    </api>
    <api id="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository">
      <topicdata group="api" />
      <apidata name="EnvironmentRegisterRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.#ctor" />
        <element api="M:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.RetrieveByUniqueIdentifiers(System.String,System.String,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.Delete">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.Retrieve">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.Save">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
        </element>
        <element api="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
      </containers>
      <file name="T_Sif_Framework_Persistence_NHibernate_EnvironmentRegisterRepository" />
    </api>
    <api id="Methods.T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository">
      <topicdata name="EnvironmentRegisterRepository" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" />
      <apidata name="EnvironmentRegisterRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.RetrieveByUniqueIdentifiers(System.String,System.String,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.Delete">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.Retrieve">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.Save">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" />
      </containers>
      <file name="Methods_T_Sif_Framework_Persistence_NHibernate_EnvironmentRegisterRepository" />
    </api>
    <api id="Fields.T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository">
      <topicdata name="EnvironmentRegisterRepository" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" />
      <apidata name="EnvironmentRegisterRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" />
      </containers>
      <file name="Fields_T_Sif_Framework_Persistence_NHibernate_EnvironmentRegisterRepository" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_EnvironmentRegisterRepository__ctor" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository.RetrieveByUniqueIdentifiers(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveByUniqueIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="solutionId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_EnvironmentRegisterRepository_RetrieveByUniqueIdentifiers" />
    </api>
    <api id="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository">
      <topicdata group="api" />
      <apidata name="EnvironmentRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.#ctor" />
        <element api="M:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.RetrieveBySessionToken(System.String)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.Delete">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.Retrieve">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.Save">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
        </element>
        <element api="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
      </containers>
      <file name="T_Sif_Framework_Persistence_NHibernate_EnvironmentRepository" />
    </api>
    <api id="Methods.T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository">
      <topicdata name="EnvironmentRepository" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" />
      <apidata name="EnvironmentRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.RetrieveBySessionToken(System.String)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.Delete">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.Retrieve">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.Save">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" />
      </containers>
      <file name="Methods_T_Sif_Framework_Persistence_NHibernate_EnvironmentRepository" />
    </api>
    <api id="Fields.T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository">
      <topicdata name="EnvironmentRepository" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" />
      <apidata name="EnvironmentRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" />
      </containers>
      <file name="Fields_T_Sif_Framework_Persistence_NHibernate_EnvironmentRepository" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_EnvironmentRepository__ctor" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.EnvironmentRepository.RetrieveBySessionToken(System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveBySessionToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_EnvironmentRepository_RetrieveBySessionToken" />
    </api>
    <api id="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2">
      <topicdata group="api" />
      <apidata name="GenericRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Persistence.NHibernate.ApplicationRegisterRepository" ref="true" />
          <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRegisterRepository" ref="true" />
          <type api="T:Sif.Framework.Persistence.NHibernate.EnvironmentRepository" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <implements>
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.#ctor(Sif.Framework.Persistence.NHibernate.IBaseSessionFactory)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
        </element>
        <element api="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
      </containers>
      <file name="T_Sif_Framework_Persistence_NHibernate_GenericRepository_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Persistence.NHibernate.GenericRepository`2">
      <topicdata name="GenericRepository" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
      <apidata name="GenericRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
        </element>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)" />
        <element api="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save">
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Persistence_NHibernate_GenericRepository_2" />
    </api>
    <api id="Fields.T:Sif.Framework.Persistence.NHibernate.GenericRepository`2">
      <topicdata name="GenericRepository" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
      <apidata name="GenericRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ref="true" ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <elements>
        <element api="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
      </containers>
      <file name="Fields_T_Sif_Framework_Persistence_NHibernate_GenericRepository_2" />
    </api>
    <api id="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)" />
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve">
      <topicdata name="Retrieve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)" />
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)" />
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Retrieve" />
    </api>
    <api id="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save">
      <topicdata name="Save" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Save" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Save" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.#ctor(Sif.Framework.Persistence.NHibernate.IBaseSessionFactory)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sessionFactory">
          <type api="T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2__ctor" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(System.Collections.Generic.IEnumerable{`0})">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Delete" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`1)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`1)">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete(`0)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Delete(`0)">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Delete_2" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Exists(`1)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Exists(`1)">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Exists" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pageIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(System.Int32,System.Int32)">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Retrieve_1" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`1)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`1)">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Retrieve_2" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve(`0)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Retrieve(`0)">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Retrieve_3" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Save(System.Collections.Generic.IEnumerable{`0})">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Save" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save(`0)">
      <topicdata group="api" />
      <apidata name="Save" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Persistence.NHibernate.GenericRepository`2.Save" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Persistence.IGenericRepository`2.Save(`0)">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_GenericRepository_2_Save_1" />
    </api>
    <api id="F:Sif.Framework.Persistence.NHibernate.GenericRepository`2.sessionFactory">
      <topicdata group="api" />
      <apidata name="sessionFactory" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.GenericRepository`2" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Persistence_NHibernate_GenericRepository_2_sessionFactory" />
    </api>
    <api id="T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory">
      <topicdata group="api" />
      <apidata name="IBaseSessionFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory.OpenSession" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
      </containers>
      <file name="T_Sif_Framework_Persistence_NHibernate_IBaseSessionFactory" />
    </api>
    <api id="Methods.T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory">
      <topicdata name="IBaseSessionFactory" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory" />
      <apidata name="IBaseSessionFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory.OpenSession" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory" />
      </containers>
      <file name="Methods_T_Sif_Framework_Persistence_NHibernate_IBaseSessionFactory" />
    </api>
    <api id="M:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory.OpenSession">
      <topicdata group="api" />
      <apidata name="OpenSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:NHibernate.ISession" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Persistence.NHibernate" />
        <type api="T:Sif.Framework.Persistence.NHibernate.IBaseSessionFactory" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Persistence_NHibernate_IBaseSessionFactory_OpenSession" />
    </api>
    <api id="N:Sif.Framework.Providers">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Providers" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Providers.FunctionalServiceProvider" />
        <element api="T:Sif.Framework.Providers.BasicProvider`1" />
        <element api="T:Sif.Framework.Providers.Provider`2" />
        <element api="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" />
      </elements>
      <file name="N_Sif_Framework_Providers" />
    </api>
    <api id="T:Sif.Framework.Providers.BasicProvider`1">
      <topicdata group="api" />
      <apidata name="BasicProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Providers.Provider`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Providers.BasicProvider`1.#ctor(Sif.Framework.Service.Providers.IBasicProviderService{`0})" />
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Post">
          <element api="M:Sif.Framework.Providers.BasicProvider`1.Post(System.Collections.Generic.List{`0},System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Post(`0,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Put">
          <element api="M:Sif.Framework.Providers.BasicProvider`1.Put(System.Collections.Generic.List{`0},System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Put(System.String,`0,System.String[],System.String[])" />
        </element>
        <element api="F:Sif.Framework.Providers.Provider`2.authService" />
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Delete">
          <element api="M:Sif.Framework.Providers.Provider`2.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Delete(System.String,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Get">
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])" />
        </element>
        <element api="F:Sif.Framework.Providers.Provider`2.service" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
      </containers>
      <file name="T_Sif_Framework_Providers_BasicProvider_1" />
    </api>
    <api id="Methods.T:Sif.Framework.Providers.BasicProvider`1">
      <topicdata name="BasicProvider" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Providers.BasicProvider`1" />
      <apidata name="BasicProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Post">
          <element api="M:Sif.Framework.Providers.BasicProvider`1.Post(System.Collections.Generic.List{`0},System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Post(`0,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Put">
          <element api="M:Sif.Framework.Providers.BasicProvider`1.Put(System.Collections.Generic.List{`0},System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Put(System.String,`0,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Delete">
          <element api="M:Sif.Framework.Providers.Provider`2.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Delete(System.String,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.BasicProvider`1.Get">
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.BasicProvider`1" />
      </containers>
      <file name="Methods_T_Sif_Framework_Providers_BasicProvider_1" />
    </api>
    <api id="Properties.T:Sif.Framework.Providers.BasicProvider`1">
      <topicdata name="BasicProvider" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Providers.BasicProvider`1" />
      <apidata name="BasicProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.BasicProvider`1" />
      </containers>
      <file name="Properties_T_Sif_Framework_Providers_BasicProvider_1" />
    </api>
    <api id="Fields.T:Sif.Framework.Providers.BasicProvider`1">
      <topicdata name="BasicProvider" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Providers.BasicProvider`1" />
      <apidata name="BasicProvider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="F:Sif.Framework.Providers.Provider`2.authService" />
        <element api="F:Sif.Framework.Providers.Provider`2.service" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.BasicProvider`1" />
      </containers>
      <file name="Fields_T_Sif_Framework_Providers_BasicProvider_1" />
    </api>
    <api id="Overload:Sif.Framework.Providers.BasicProvider`1.Post">
      <topicdata name="Post" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Post" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.BasicProvider`1.Post(System.Collections.Generic.List{`0},System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.Provider`2.Post(`0,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.BasicProvider`1" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_BasicProvider_1_Post" />
    </api>
    <api id="Overload:Sif.Framework.Providers.BasicProvider`1.Put">
      <topicdata name="Put" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Put" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.BasicProvider`1.Put(System.Collections.Generic.List{`0},System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.Provider`2.Put(System.String,`0,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.BasicProvider`1" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_BasicProvider_1_Put" />
    </api>
    <api id="M:Sif.Framework.Providers.BasicProvider`1.#ctor(Sif.Framework.Service.Providers.IBasicProviderService{`0})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="service">
          <type api="T:Sif.Framework.Service.Providers.IBasicProviderService`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.BasicProvider`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_BasicProvider_1__ctor" />
    </api>
    <api id="M:Sif.Framework.Providers.BasicProvider`1.Post(System.Collections.Generic.List{`0},System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.BasicProvider`1.Post" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Providers.Provider`2.Post(`1,System.String[],System.String[])">
          <type api="T:Sif.Framework.Providers.Provider`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.BasicProvider`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_BasicProvider_1_Post" />
    </api>
    <api id="M:Sif.Framework.Providers.BasicProvider`1.Put(System.Collections.Generic.List{`0},System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.BasicProvider`1.Put" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Providers.Provider`2.Put(`1,System.String[],System.String[])">
          <type api="T:Sif.Framework.Providers.Provider`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
              <type api="T:System.Collections.Generic.List`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Providers.BasicProvider`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.BasicProvider`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_BasicProvider_1_Put" />
    </api>
    <api id="T:Sif.Framework.Providers.FunctionalServiceProvider">
      <topicdata group="api" />
      <apidata name="FunctionalServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.#ctor" />
        <element api="F:Sif.Framework.Providers.FunctionalServiceProvider.authService" />
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String,System.String[],System.String[],Sif.Framework.Model.Infrastructure.Right)" />
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Delete">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Get">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String,System.String[],System.String[])" />
        </element>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.getService(System.String)" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.OKResult(System.String)" />
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Post">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.String,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String[],System.String[])" />
        </element>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.preventPagingHeaders" />
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Put">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,System.String,System.String[],System.String[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
      </containers>
      <file name="T_Sif_Framework_Providers_FunctionalServiceProvider" />
    </api>
    <api id="Methods.T:Sif.Framework.Providers.FunctionalServiceProvider">
      <topicdata name="FunctionalServiceProvider" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Providers.FunctionalServiceProvider" />
      <apidata name="FunctionalServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String,System.String[],System.String[],Sif.Framework.Model.Infrastructure.Right)" />
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Delete">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Get">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String,System.String[],System.String[])" />
        </element>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.getService(System.String)" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.OKResult(System.String)" />
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Post">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.String,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String[],System.String[])" />
        </element>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.preventPagingHeaders" />
        <element api="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Put">
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,System.String,System.String[],System.String[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" />
      </containers>
      <file name="Methods_T_Sif_Framework_Providers_FunctionalServiceProvider" />
    </api>
    <api id="Properties.T:Sif.Framework.Providers.FunctionalServiceProvider">
      <topicdata name="FunctionalServiceProvider" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Providers.FunctionalServiceProvider" />
      <apidata name="FunctionalServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" />
      </containers>
      <file name="Properties_T_Sif_Framework_Providers_FunctionalServiceProvider" />
    </api>
    <api id="Fields.T:Sif.Framework.Providers.FunctionalServiceProvider">
      <topicdata name="FunctionalServiceProvider" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Providers.FunctionalServiceProvider" />
      <apidata name="FunctionalServiceProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Providers.FunctionalServiceProvider.authService" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" />
      </containers>
      <file name="Fields_T_Sif_Framework_Providers_FunctionalServiceProvider" />
    </api>
    <api id="Overload:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation">
      <topicdata name="CheckAuthorisation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CheckAuthorisation" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String,System.String[],System.String[],Sif.Framework.Model.Infrastructure.Right)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_FunctionalServiceProvider_CheckAuthorisation" />
    </api>
    <api id="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_FunctionalServiceProvider_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_FunctionalServiceProvider_Get" />
    </api>
    <api id="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Post">
      <topicdata name="Post" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Post" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.String,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_FunctionalServiceProvider_Post" />
    </api>
    <api id="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Put">
      <topicdata name="Put" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Put" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,System.String,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_FunctionalServiceProvider_Put" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider__ctor" />
    </api>
    <api id="F:Sif.Framework.Providers.FunctionalServiceProvider.authService">
      <topicdata group="api" />
      <apidata name="authService" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Providers_FunctionalServiceProvider_authService" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String,System.String[],System.String[],Sif.Framework.Model.Infrastructure.Right)">
      <topicdata group="api" />
      <apidata name="CheckAuthorisation" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="context">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="right">
          <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_CheckAuthorisation" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation(System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="CheckAuthorisation" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.CheckAuthorisation" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="zone">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="context">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_CheckAuthorisation_1" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="deleteRequest">
          <type api="T:Sif.Specification.Infrastructure.deleteRequestType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Delete" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Delete(System.String,System.Guid,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Delete_2" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Get" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.Guid,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Get_1" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Get_2" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Get(System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Get_3" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.getService(System.String)">
      <topicdata group="api" />
      <apidata name="getService" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_getService" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.OKResult(System.String)">
      <topicdata group="api" />
      <apidata name="OKResult" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="payload" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_OKResult" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Post" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="items">
          <type api="T:Sif.Specification.Infrastructure.jobCollectionType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Post" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Post" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.stateType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Post_1" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.Guid,System.String,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Post" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Post_2" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Post(System.String,System.String,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Post" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="jobName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Post_3" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.preventPagingHeaders">
      <topicdata group="api" />
      <apidata name="preventPagingHeaders" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_preventPagingHeaders" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,Sif.Specification.Infrastructure.jobCollectionType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Put" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="items">
          <type api="T:Sif.Specification.Infrastructure.jobCollectionType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Put" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,Sif.Specification.Infrastructure.jobType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Put" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Put_1" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProvider.Put(System.String,System.Guid,System.String,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.FunctionalServiceProvider.Put" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProvider" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProvider_Put_2" />
    </api>
    <api id="T:Sif.Framework.Providers.FunctionalServiceProviderFactory">
      <topicdata group="api" />
      <apidata name="FunctionalServiceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.CreateFactory" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.GetInstance" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.GetProvider(System.String)" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.Shutdown" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
      </containers>
      <file name="T_Sif_Framework_Providers_FunctionalServiceProviderFactory" />
    </api>
    <api id="Methods.T:Sif.Framework.Providers.FunctionalServiceProviderFactory">
      <topicdata name="FunctionalServiceProviderFactory" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" />
      <apidata name="FunctionalServiceProviderFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.CreateFactory" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.GetInstance" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.GetProvider(System.String)" />
        <element api="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.Shutdown" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" />
      </containers>
      <file name="Methods_T_Sif_Framework_Providers_FunctionalServiceProviderFactory" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.CreateFactory">
      <topicdata group="api" />
      <apidata name="CreateFactory" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProviderFactory_CreateFactory" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.GetInstance">
      <topicdata group="api" />
      <apidata name="GetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProviderFactory_GetInstance" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.GetProvider(System.String)">
      <topicdata group="api" />
      <apidata name="GetProvider" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProviderFactory_GetProvider" />
    </api>
    <api id="M:Sif.Framework.Providers.FunctionalServiceProviderFactory.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.FunctionalServiceProviderFactory" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_FunctionalServiceProviderFactory_Shutdown" />
    </api>
    <api id="T:Sif.Framework.Providers.Provider`2">
      <topicdata group="api" />
      <apidata name="Provider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ApiController" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Providers.BasicProvider`1" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TSingle">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TMultiple" />
      </templates>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.#ctor">
          <element api="M:Sif.Framework.Providers.Provider`2.#ctor" />
          <element api="M:Sif.Framework.Providers.Provider`2.#ctor(Sif.Framework.Service.Providers.IProviderService{`0,`1})" />
        </element>
        <element api="F:Sif.Framework.Providers.Provider`2.authService" />
        <element api="Overload:Sif.Framework.Providers.Provider`2.Delete">
          <element api="M:Sif.Framework.Providers.Provider`2.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Delete(System.String,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Get">
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Get(`0,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Post">
          <element api="M:Sif.Framework.Providers.Provider`2.Post(`1,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Post(`0,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Put">
          <element api="M:Sif.Framework.Providers.Provider`2.Put(`1,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Put(System.String,`0,System.String[],System.String[])" />
        </element>
        <element api="F:Sif.Framework.Providers.Provider`2.service" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
      </containers>
      <file name="T_Sif_Framework_Providers_Provider_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Providers.Provider`2">
      <topicdata name="Provider" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Providers.Provider`2" />
      <apidata name="Provider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TMultiple" />
      </templates>
      <elements>
        <element api="M:System.Web.Http.ApiController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
          <apidata name="ExecuteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Controllers.IHttpController.ExecuteAsync(System.Web.Http.Controllers.HttpControllerContext,System.Threading.CancellationToken)">
              <type api="T:System.Web.Http.Controllers.IHttpController" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Validate">
          <element api="M:System.Web.Http.ApiController.Validate``1(``0)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0)" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)">
            <apidata name="Validate" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="false" />
            <templates>
              <template name="TEntity" />
            </templates>
            <parameters>
              <parameter name="entity">
                <template name="TEntity" index="0" api="M:System.Web.Http.ApiController.Validate``1(``0,System.String)" />
              </parameter>
              <parameter name="keyPrefix">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.BadRequest">
          <element api="M:System.Web.Http.ApiController.BadRequest">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.String)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="message">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.BadRequestErrorMessageResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.BadRequest(System.Web.Http.ModelBinding.ModelStateDictionary)">
            <apidata name="BadRequest" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="modelState">
                <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.InvalidModelStateResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Conflict">
          <apidata name="Conflict" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.ConflictResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Content">
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.NegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.String)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <apidata name="Content" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="statusCode">
                <type api="T:System.Net.HttpStatusCode" ref="false" />
              </parameter>
              <parameter name="value">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
              </parameter>
              <parameter name="formatter">
                <type api="T:System.Net.Http.Formatting.MediaTypeFormatter" ref="true" />
              </parameter>
              <parameter name="mediaType">
                <type api="T:System.Net.Http.Headers.MediaTypeHeaderValue" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.FormattedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Content``1(System.Net.HttpStatusCode,``0,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Created">
          <element api="M:System.Web.Http.ApiController.Created``1(System.String,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.String,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)">
            <apidata name="Created" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Created``1(System.Uri,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.CreatedAtRoute">
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Object,``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)">
            <apidata name="CreatedAtRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.CreatedAtRouteNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.CreatedAtRoute``1(System.String,System.Collections.Generic.IDictionary{System.String,System.Object},``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.InternalServerError">
          <element api="M:System.Web.Http.ApiController.InternalServerError">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.InternalServerErrorResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.InternalServerError(System.Exception)">
            <apidata name="InternalServerError" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="exception">
                <type api="T:System.Exception" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.ExceptionResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Json">
          <element api="M:System.Web.Http.ApiController.Json``1(``0)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)">
            <apidata name="Json" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
              </parameter>
              <parameter name="serializerSettings">
                <type api="T:Newtonsoft.Json.JsonSerializerSettings" ref="true" />
              </parameter>
              <parameter name="encoding">
                <type api="T:System.Text.Encoding" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.JsonResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Json``1(``0,Newtonsoft.Json.JsonSerializerSettings,System.Text.Encoding)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.NotFound">
          <apidata name="NotFound" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Web.Http.Results.NotFoundResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Ok">
          <element api="M:System.Web.Http.ApiController.Ok">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <returns>
              <type api="T:System.Web.Http.Results.OkResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Ok``1(``0)">
            <apidata name="Ok" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <templates>
              <template name="T" />
            </templates>
            <parameters>
              <parameter name="content">
                <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.OkNegotiatedContentResult`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:System.Web.Http.ApiController.Ok``1(``0)" />
                </specialization>
              </type>
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Redirect">
          <element api="M:System.Web.Http.ApiController.Redirect(System.String)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.String" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Redirect(System.Uri)">
            <apidata name="Redirect" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="location">
                <type api="T:System.Uri" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.RedirectToRoute">
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Object)">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Object" ref="true" />
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.RedirectToRoute(System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <apidata name="RedirectToRoute" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="routeName">
                <type api="T:System.String" ref="true" />
              </parameter>
              <parameter name="routeValues">
                <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Object" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.RedirectToRouteResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.ResponseMessage(System.Net.Http.HttpResponseMessage)">
          <apidata name="ResponseMessage" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="response">
              <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.ResponseMessageResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ApiController.StatusCode(System.Net.HttpStatusCode)">
          <apidata name="StatusCode" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="status">
              <type api="T:System.Net.HttpStatusCode" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Results.StatusCodeResult" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Unauthorized">
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Net.Http.Headers.AuthenticationHeaderValue[])">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="false" />
            <parameters>
              <parameter name="challenges" params="true">
                <arrayOf rank="1">
                  <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                </arrayOf>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Unauthorized(System.Collections.Generic.IEnumerable{System.Net.Http.Headers.AuthenticationHeaderValue})">
            <apidata name="Unauthorized" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="challenges">
                <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                  <specialization>
                    <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
                  </specialization>
                </type>
              </parameter>
            </parameters>
            <returns>
              <type api="T:System.Web.Http.Results.UnauthorizedResult" ref="true" />
            </returns>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Web.Http.ApiController.Initialize(System.Web.Http.Controllers.HttpControllerContext)">
          <apidata name="Initialize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="controllerContext">
              <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Dispose">
          <element api="M:System.Web.Http.ApiController.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
          <element api="M:System.Web.Http.ApiController.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Web.Http" />
              <type api="T:System.Web.Http.ApiController" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Delete">
          <element api="M:Sif.Framework.Providers.Provider`2.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Delete(System.String,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Get">
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Get(`0,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Post">
          <element api="M:Sif.Framework.Providers.Provider`2.Post(`1,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Post(`0,System.String[],System.String[])" />
        </element>
        <element api="Overload:Sif.Framework.Providers.Provider`2.Put">
          <element api="M:Sif.Framework.Providers.Provider`2.Put(`1,System.String[],System.String[])" />
          <element api="M:Sif.Framework.Providers.Provider`2.Put(System.String,`0,System.String[],System.String[])" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Providers_Provider_2" />
    </api>
    <api id="Properties.T:Sif.Framework.Providers.Provider`2">
      <topicdata name="Provider" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Providers.Provider`2" />
      <apidata name="Provider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TMultiple" />
      </templates>
      <elements>
        <element api="P:System.Web.Http.ApiController.Configuration">
          <apidata name="Configuration" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Configuration" />
          <setter name="set_Configuration" />
          <returns>
            <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ControllerContext">
          <apidata name="ControllerContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ControllerContext" />
          <setter name="set_ControllerContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ActionContext">
          <apidata name="ActionContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_ActionContext" />
          <setter name="set_ActionContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.ModelState">
          <apidata name="ModelState" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_ModelState" />
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelStateDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Request">
          <apidata name="Request" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Request" />
          <setter name="set_Request" />
          <returns>
            <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.RequestContext">
          <apidata name="RequestContext" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_RequestContext" />
          <setter name="set_RequestContext" />
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpRequestContext" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.Url">
          <apidata name="Url" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Url" />
          <setter name="set_Url" />
          <returns>
            <type api="T:System.Web.Http.Routing.UrlHelper" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ApiController.User">
          <apidata name="User" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_User" />
          <setter name="set_User" />
          <returns>
            <type api="T:System.Security.Principal.IPrincipal" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http" />
            <type api="T:System.Web.Http.ApiController" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" />
      </containers>
      <file name="Properties_T_Sif_Framework_Providers_Provider_2" />
    </api>
    <api id="Fields.T:Sif.Framework.Providers.Provider`2">
      <topicdata name="Provider" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Providers.Provider`2" />
      <apidata name="Provider" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.DataModels.ISifRefId`1" ref="true">
                <specialization>
                  <type api="T:System.String" ref="true" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="TMultiple" />
      </templates>
      <elements>
        <element api="F:Sif.Framework.Providers.Provider`2.authService" />
        <element api="F:Sif.Framework.Providers.Provider`2.service" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" />
      </containers>
      <file name="Fields_T_Sif_Framework_Providers_Provider_2" />
    </api>
    <api id="Overload:Sif.Framework.Providers.Provider`2.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.Providers.Provider`2.#ctor" />
        <element api="M:Sif.Framework.Providers.Provider`2.#ctor(Sif.Framework.Service.Providers.IProviderService{`0,`1})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_Provider_2__ctor" />
    </api>
    <api id="Overload:Sif.Framework.Providers.Provider`2.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.Provider`2.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.Provider`2.Delete(System.String,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_Provider_2_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Providers.Provider`2.Get">
      <topicdata name="Get" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Get" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.Provider`2.Get(`0,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_Provider_2_Get" />
    </api>
    <api id="Overload:Sif.Framework.Providers.Provider`2.Post">
      <topicdata name="Post" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Post" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.Provider`2.Post(`1,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.Provider`2.Post(`0,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_Provider_2_Post" />
    </api>
    <api id="Overload:Sif.Framework.Providers.Provider`2.Put">
      <topicdata name="Put" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Put" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Providers.Provider`2.Put(`1,System.String[],System.String[])" />
        <element api="M:Sif.Framework.Providers.Provider`2.Put(System.String,`0,System.String[],System.String[])" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Providers_Provider_2_Put" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Sif.Framework.Providers.Provider`2.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2__ctor" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.#ctor(Sif.Framework.Service.Providers.IProviderService{`0,`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.Providers.Provider`2.#ctor" />
      <parameters>
        <parameter name="service">
          <type api="T:Sif.Framework.Service.Providers.IProviderService`2" ref="true">
            <specialization>
              <template name="TSingle" index="0" api="T:Sif.Framework.Providers.Provider`2" />
              <template name="TMultiple" index="1" api="T:Sif.Framework.Providers.Provider`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2__ctor_1" />
    </api>
    <api id="F:Sif.Framework.Providers.Provider`2.authService">
      <topicdata group="api" />
      <apidata name="authService" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Providers_Provider_2_authService" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Delete(Sif.Specification.Infrastructure.deleteRequestType,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="deleteRequest">
          <type api="T:Sif.Specification.Infrastructure.deleteRequestType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Delete" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Delete(System.String,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="refId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String,System.String,System.String,System.String,System.String,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="object1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="refId1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="object2" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="refId2" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="object3" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="refId3" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Get" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Get(System.String,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="refId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Get_1" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Get(`0,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Get" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Providers.Provider`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Get_2" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Post(`1,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Post" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Providers.Provider`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Post" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Post(`0,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Post" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Post" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Providers.Provider`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Post_1" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Put(System.String,`0,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Put" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="refId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Providers.Provider`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Put" />
    </api>
    <api id="M:Sif.Framework.Providers.Provider`2.Put(`1,System.String[],System.String[])">
      <topicdata group="api" />
      <apidata name="Put" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Providers.Provider`2.Put" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Providers.Provider`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.IHttpActionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Providers_Provider_2_Put_1" />
    </api>
    <api id="F:Sif.Framework.Providers.Provider`2.service">
      <topicdata group="api" />
      <apidata name="service" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true">
          <specialization>
            <template name="TSingle" index="0" api="T:Sif.Framework.Providers.Provider`2" />
            <template name="TMultiple" index="1" api="T:Sif.Framework.Providers.Provider`2" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Providers" />
        <type api="T:Sif.Framework.Providers.Provider`2" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Providers_Provider_2_service" />
    </api>
    <api id="N:Sif.Framework.Service">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.IService" />
        <element api="T:Sif.Framework.Service.IObjectService`3" />
        <element api="T:Sif.Framework.Service.GenericService`2" />
        <element api="T:Sif.Framework.Service.IGenericService`2" />
        <element api="T:Sif.Framework.Service.SifService`2" />
        <element api="T:Sif.Framework.Service.ISifService`2" />
      </elements>
      <file name="N_Sif_Framework_Service" />
    </api>
    <api id="T:Sif.Framework.Service.GenericService`2">
      <topicdata group="api" />
      <apidata name="GenericService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" ref="true" />
          <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <implements>
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
            <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.GenericService`2.#ctor(Sif.Framework.Persistence.IGenericRepository{`0,`1})" />
        <element api="Overload:Sif.Framework.Service.GenericService`2.Create">
          <element api="M:Sif.Framework.Service.GenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Create(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.GenericService`2.Delete">
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`0)" />
        </element>
        <element api="F:Sif.Framework.Service.GenericService`2.repository" />
        <element api="Overload:Sif.Framework.Service.GenericService`2.Retrieve">
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Service.GenericService`2.Update">
          <element api="M:Sif.Framework.Service.GenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Update(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
      </containers>
      <file name="T_Sif_Framework_Service_GenericService_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.GenericService`2">
      <topicdata name="GenericService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.GenericService`2" />
      <apidata name="GenericService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Service.GenericService`2.Create">
          <element api="M:Sif.Framework.Service.GenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Create(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.GenericService`2.Delete">
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.GenericService`2.Retrieve">
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Service.GenericService`2.Update">
          <element api="M:Sif.Framework.Service.GenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Update(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_GenericService_2" />
    </api>
    <api id="Fields.T:Sif.Framework.Service.GenericService`2">
      <topicdata name="GenericService" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Service.GenericService`2" />
      <apidata name="GenericService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <templates>
        <template name="T">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <elements>
        <element api="F:Sif.Framework.Service.GenericService`2.repository" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" />
      </containers>
      <file name="Fields_T_Sif_Framework_Service_GenericService_2" />
    </api>
    <api id="Overload:Sif.Framework.Service.GenericService`2.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.GenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Service.GenericService`2.Create(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_GenericService_2_Create" />
    </api>
    <api id="Overload:Sif.Framework.Service.GenericService`2.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.GenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Service.GenericService`2.Delete(`1)" />
        <element api="M:Sif.Framework.Service.GenericService`2.Delete(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_GenericService_2_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Service.GenericService`2.Retrieve">
      <topicdata name="Retrieve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.GenericService`2.Retrieve" />
        <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`1)" />
        <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`0)" />
        <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
        <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_GenericService_2_Retrieve" />
    </api>
    <api id="Overload:Sif.Framework.Service.GenericService`2.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.GenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Service.GenericService`2.Update(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_GenericService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.#ctor(Sif.Framework.Persistence.IGenericRepository{`0,`1})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="repository">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2__ctor" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Create(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Create" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Create(System.Collections.Generic.IEnumerable{`0})">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Create" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Create(`0)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Create" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Create(`0)">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Create_1" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Delete" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Delete(`1)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Delete(`1)">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Delete(`0)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Delete(`0)">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Delete_2" />
    </api>
    <api id="F:Sif.Framework.Service.GenericService`2.repository">
      <topicdata group="api" />
      <apidata name="repository" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
            <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Service_GenericService_2_repository" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Retrieve">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Retrieve" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Retrieve">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="conditions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Query.EqualCondition" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Retrieve_1" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="pageIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Int32,System.Int32)">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Retrieve_2" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Retrieve(`1)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Retrieve(`1)">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Retrieve_3" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Retrieve(`0)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Retrieve(`0)">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Retrieve_4" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Update(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Update" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Update(System.Collections.Generic.IEnumerable{`0})">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.GenericService`2.Update(`0)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.GenericService`2.Update" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.IGenericService`2.Update(`0)">
          <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.GenericService`2" />
              <template name="PK" index="1" api="T:Sif.Framework.Service.GenericService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_GenericService_2_Update_1" />
    </api>
    <api id="T:Sif.Framework.Service.IGenericService`2">
      <topicdata group="api" />
      <apidata name="IGenericService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Service.IGenericService`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <implementors>
        <type api="T:Sif.Framework.Service.GenericService`2" ref="true" />
        <type api="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" ref="true" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:Sif.Framework.Service.IGenericService`2.Create">
          <element api="M:Sif.Framework.Service.IGenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Create(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.IGenericService`2.Delete">
          <element api="M:Sif.Framework.Service.IGenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Delete(`1)" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Delete(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.IGenericService`2.Retrieve">
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Service.IGenericService`2.Update">
          <element api="M:Sif.Framework.Service.IGenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Update(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
      </containers>
      <file name="T_Sif_Framework_Service_IGenericService_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.IGenericService`2">
      <topicdata name="IGenericService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.IGenericService`2" />
      <apidata name="IGenericService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <template name="PK" index="1" api="T:Sif.Framework.Service.IGenericService`2" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="PK" />
      </templates>
      <elements>
        <element api="Overload:Sif.Framework.Service.IGenericService`2.Create">
          <element api="M:Sif.Framework.Service.IGenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Create(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.IGenericService`2.Delete">
          <element api="M:Sif.Framework.Service.IGenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Delete(`1)" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Delete(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.IGenericService`2.Retrieve">
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Service.IGenericService`2.Update">
          <element api="M:Sif.Framework.Service.IGenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.IGenericService`2.Update(`0)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_IGenericService_2" />
    </api>
    <api id="Overload:Sif.Framework.Service.IGenericService`2.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.IGenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Service.IGenericService`2.Create(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_IGenericService_2_Create" />
    </api>
    <api id="Overload:Sif.Framework.Service.IGenericService`2.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.IGenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Service.IGenericService`2.Delete(`1)" />
        <element api="M:Sif.Framework.Service.IGenericService`2.Delete(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_IGenericService_2_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Service.IGenericService`2.Retrieve">
      <topicdata name="Retrieve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve" />
        <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(`1)" />
        <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(`0)" />
        <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
        <element api="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_IGenericService_2_Retrieve" />
    </api>
    <api id="Overload:Sif.Framework.Service.IGenericService`2.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.IGenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:Sif.Framework.Service.IGenericService`2.Update(`0)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_IGenericService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Create(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Create" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Create" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Create(`0)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Create" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="PK" index="1" api="T:Sif.Framework.Service.IGenericService`2" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Create_1" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Delete" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Delete(`1)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Service.IGenericService`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Delete(`0)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Delete_2" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Retrieve">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="conditions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Query.EqualCondition" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Retrieve_1" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Retrieve(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pageIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="pageSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Retrieve_2" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Retrieve(`1)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <template name="PK" index="1" api="T:Sif.Framework.Service.IGenericService`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Retrieve_3" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Retrieve(`0)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Retrieve_4" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Update(System.Collections.Generic.IEnumerable{`0})">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Update" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.IGenericService`2.Update(`0)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IGenericService`2.Update" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.IGenericService`2" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IGenericService_2_Update_1" />
    </api>
    <api id="T:Sif.Framework.Service.IObjectService`3">
      <topicdata group="api" />
      <apidata name="IObjectService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle" />
        <template name="TMultiple" />
        <template name="TPrimaryKey" />
      </templates>
      <implements>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </implements>
      <implementors>
        <type api="T:Sif.Framework.Service.Providers.IBasicProviderService`1" ref="true" />
        <type api="T:Sif.Framework.Service.Providers.IProviderService`2" ref="true" />
      </implementors>
      <elements>
        <element api="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.IObjectService`3.Delete(`2,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Service.IObjectService`3.Retrieve">
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
      </containers>
      <file name="T_Sif_Framework_Service_IObjectService_3" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.IObjectService`3">
      <topicdata name="IObjectService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.IObjectService`3" />
      <apidata name="IObjectService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle" />
        <template name="TMultiple" />
        <template name="TPrimaryKey" />
      </templates>
      <elements>
        <element api="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.IObjectService`3.Delete(`2,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Service.IObjectService`3.Retrieve">
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_IObjectService_3" />
    </api>
    <api id="Overload:Sif.Framework.Service.IObjectService`3.Retrieve">
      <topicdata name="Retrieve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_IObjectService_3_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Service.IObjectService`3" />
        </parameter>
        <parameter name="mustUseAdvisory" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSingle" index="0" api="T:Sif.Framework.Service.IObjectService`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IObjectService_3_Create" />
    </api>
    <api id="M:Sif.Framework.Service.IObjectService`3.Delete(`2,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="refId">
          <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Service.IObjectService`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IObjectService_3_Delete" />
    </api>
    <api id="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IObjectService`3.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="conditions">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Query.EqualCondition" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="pageIndex" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="pageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Service.IObjectService`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IObjectService_3_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IObjectService`3.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="pageIndex" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="pageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Service.IObjectService`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IObjectService_3_Retrieve_1" />
    </api>
    <api id="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IObjectService`3.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="refId">
          <template name="TPrimaryKey" index="2" api="T:Sif.Framework.Service.IObjectService`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TSingle" index="0" api="T:Sif.Framework.Service.IObjectService`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IObjectService_3_Retrieve_2" />
    </api>
    <api id="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.IObjectService`3.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Service.IObjectService`3" />
        </parameter>
        <parameter name="pageIndex" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="pageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="TMultiple" index="1" api="T:Sif.Framework.Service.IObjectService`3" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IObjectService_3_Retrieve_3" />
    </api>
    <api id="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TSingle" index="0" api="T:Sif.Framework.Service.IObjectService`3" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_IObjectService_3_Update" />
    </api>
    <api id="T:Sif.Framework.Service.IService">
      <topicdata group="api" />
      <apidata name="IService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
        <type api="T:Sif.Framework.Service.Providers.IBasicProviderService`1" ref="true" />
        <type api="T:Sif.Framework.Service.Providers.IProviderService`2" ref="true" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" ref="true" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </implementors>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
      </containers>
      <file name="T_Sif_Framework_Service_IService" />
    </api>
    <api id="T:Sif.Framework.Service.ISifService`2">
      <topicdata group="api" />
      <apidata name="ISifService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="UI" />
        <template name="DB">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </implements>
      <implementors>
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" ref="true" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:Sif.Framework.Service.ISifService`2.Create">
          <element api="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.ISifService`2.Delete">
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.ISifService`2.Retrieve">
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.ISifService`2.Update">
          <element api="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
      </containers>
      <file name="T_Sif_Framework_Service_ISifService_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.ISifService`2">
      <topicdata name="ISifService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.ISifService`2" />
      <apidata name="ISifService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="UI" />
        <template name="DB">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="Overload:Sif.Framework.Service.ISifService`2.Create">
          <element api="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.ISifService`2.Delete">
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.ISifService`2.Retrieve">
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.ISifService`2.Update">
          <element api="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_ISifService_2" />
    </api>
    <api id="Overload:Sif.Framework.Service.ISifService`2.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_ISifService_2_Create" />
    </api>
    <api id="Overload:Sif.Framework.Service.ISifService`2.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.ISifService`2.Delete(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_ISifService_2_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Service.ISifService`2.Retrieve">
      <topicdata name="Retrieve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)" />
        <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_ISifService_2_Retrieve" />
    </api>
    <api id="Overload:Sif.Framework.Service.ISifService`2.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_ISifService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Create" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Create" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Create" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Create_1" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Delete" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Delete(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Delete" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Delete_2" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Retrieve_1" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Retrieve(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Retrieve" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Retrieve_2" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Update" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.ISifService`2.Update" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Service.ISifService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_ISifService_2_Update_1" />
    </api>
    <api id="T:Sif.Framework.Service.SifService`2">
      <topicdata group="api" />
      <apidata name="SifService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" ref="true" />
          <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="UI" />
        <template name="DB">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
          <specialization>
            <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
            <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.SifService`2.#ctor(Sif.Framework.Persistence.IGenericRepository{`1,System.Guid})" />
        <element api="Overload:Sif.Framework.Service.SifService`2.Create">
          <element api="M:Sif.Framework.Service.SifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.SifService`2.Delete">
          <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Delete(`0,System.String,System.String)" />
        </element>
        <element api="F:Sif.Framework.Service.SifService`2.repository" />
        <element api="Overload:Sif.Framework.Service.SifService`2.Retrieve">
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.SifService`2.Update">
          <element api="M:Sif.Framework.Service.SifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Update(`0,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
      </containers>
      <file name="T_Sif_Framework_Service_SifService_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.SifService`2">
      <topicdata name="SifService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.SifService`2" />
      <apidata name="SifService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="UI" />
        <template name="DB">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Service.SifService`2.Create">
          <element api="M:Sif.Framework.Service.SifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.SifService`2.Delete">
          <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Delete(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.SifService`2.Retrieve">
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.SifService`2.Update">
          <element api="M:Sif.Framework.Service.SifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Update(`0,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_SifService_2" />
    </api>
    <api id="Fields.T:Sif.Framework.Service.SifService`2">
      <topicdata name="SifService" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Service.SifService`2" />
      <apidata name="SifService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="UI" />
        <template name="DB">
          <constrained ctor="true">
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:Sif.Framework.Model.Persistence.IPersistable`1" ref="true">
                <specialization>
                  <type api="T:System.Guid" ref="false" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="F:Sif.Framework.Service.SifService`2.repository" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" />
      </containers>
      <file name="Fields_T_Sif_Framework_Service_SifService_2" />
    </api>
    <api id="Overload:Sif.Framework.Service.SifService`2.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.SifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.SifService`2.Create(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_SifService_2_Create" />
    </api>
    <api id="Overload:Sif.Framework.Service.SifService`2.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Guid,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.SifService`2.Delete(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_SifService_2_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Service.SifService`2.Retrieve">
      <topicdata name="Retrieve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.String,System.String)" />
        <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.Guid,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.SifService`2.Retrieve(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_SifService_2_Retrieve" />
    </api>
    <api id="Overload:Sif.Framework.Service.SifService`2.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.SifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.SifService`2.Update(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_SifService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.#ctor(Sif.Framework.Persistence.IGenericRepository{`1,System.Guid})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="repository">
          <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
            <specialization>
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
              <type api="T:System.Guid" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2__ctor" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Create" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Create" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Create(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Create" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Create_1" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Delete" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Delete(System.Guid,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Delete(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Delete" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Delete_2" />
    </api>
    <api id="F:Sif.Framework.Service.SifService`2.repository">
      <topicdata group="api" />
      <apidata name="repository" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Sif.Framework.Persistence.IGenericRepository`2" ref="true">
          <specialization>
            <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Service_SifService_2_repository" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Retrieve(System.Guid,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Retrieve(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Retrieve_1" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Retrieve(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Retrieve" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Retrieve_2" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Update" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.SifService`2.Update(`0,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.SifService`2.Update" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="item">
          <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service" />
        <type api="T:Sif.Framework.Service.SifService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_SifService_2_Update_1" />
    </api>
    <api id="N:Sif.Framework.Service.Authentication">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service.Authentication" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.Authentication.IAuthenticationService" />
      </elements>
      <file name="N_Sif_Framework_Service_Authentication" />
    </api>
    <api id="T:Sif.Framework.Service.Authentication.IAuthenticationService">
      <topicdata group="api" />
      <apidata name="IAuthenticationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.GetEnvironmentBySessionToken(System.String)" />
        <element api="Overload:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader">
          <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue)" />
          <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)" />
        </element>
        <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyInitialAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Authentication" />
      </containers>
      <file name="T_Sif_Framework_Service_Authentication_IAuthenticationService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Authentication.IAuthenticationService">
      <topicdata name="IAuthenticationService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Authentication.IAuthenticationService" />
      <apidata name="IAuthenticationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.GetEnvironmentBySessionToken(System.String)" />
        <element api="Overload:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader">
          <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue)" />
          <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)" />
        </element>
        <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyInitialAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Authentication" />
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Authentication_IAuthenticationService" />
    </api>
    <api id="Overload:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader">
      <topicdata name="VerifyAuthenticationHeader" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="VerifyAuthenticationHeader" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue)" />
        <element api="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Authentication" />
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Authentication_IAuthenticationService_VerifyAuthenticationHeader" />
    </api>
    <api id="M:Sif.Framework.Service.Authentication.IAuthenticationService.GetEnvironmentBySessionToken(System.String)">
      <topicdata group="api" />
      <apidata name="GetEnvironmentBySessionToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Authentication" />
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Authentication_IAuthenticationService_GetEnvironmentBySessionToken" />
    </api>
    <api id="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue)">
      <topicdata group="api" />
      <apidata name="VerifyAuthenticationHeader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Authentication" />
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Authentication_IAuthenticationService_VerifyAuthenticationHeader" />
    </api>
    <api id="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)">
      <topicdata group="api" />
      <apidata name="VerifyAuthenticationHeader" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyAuthenticationHeader" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
        </parameter>
        <parameter name="sessionToken" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Authentication" />
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Authentication_IAuthenticationService_VerifyAuthenticationHeader_1" />
    </api>
    <api id="M:Sif.Framework.Service.Authentication.IAuthenticationService.VerifyInitialAuthenticationHeader(System.Net.Http.Headers.AuthenticationHeaderValue,System.String@)">
      <topicdata group="api" />
      <apidata name="VerifyInitialAuthenticationHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="header">
          <type api="T:System.Net.Http.Headers.AuthenticationHeaderValue" ref="true" />
        </parameter>
        <parameter name="sessionToken" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Authentication" />
        <type api="T:Sif.Framework.Service.Authentication.IAuthenticationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Authentication_IAuthenticationService_VerifyInitialAuthenticationHeader" />
    </api>
    <api id="N:Sif.Framework.Service.Functional">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service.Functional" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.Functional.FunctionalService" />
        <element api="T:Sif.Framework.Service.Functional.PhaseActions" />
        <element api="T:Sif.Framework.Service.Functional.IPhaseActions" />
        <element api="T:Sif.Framework.Service.Functional.IFunctionalService" />
      </elements>
      <file name="N_Sif_Framework_Service_Functional" />
    </api>
    <api id="T:Sif.Framework.Service.Functional.FunctionalService">
      <topicdata group="api" />
      <apidata name="FunctionalService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
          <specialization>
            <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </implements>
      <elements>
        <element api="F:Sif.Framework.Service.SifService`2.repository" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.#ctor" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.AcceptJob">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Bind(System.Guid,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Configure(Sif.Framework.Model.Infrastructure.Job)" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Create">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Create(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Create(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Delete">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Guid,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.GetBinding(System.Guid)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.GetServiceName" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.IsBound(System.Guid,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.JobShutdown(Sif.Framework.Model.Infrastructure.Job)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.JobTimeout" />
        <element api="F:Sif.Framework.Service.Functional.FunctionalService.phaseActions" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Retrieve">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.Guid,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Shutdown" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Startup" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Unbind">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.Guid)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Update">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Update(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Update(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
      </containers>
      <file name="T_Sif_Framework_Service_Functional_FunctionalService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Functional.FunctionalService">
      <topicdata name="FunctionalService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Functional.FunctionalService" />
      <apidata name="FunctionalService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.AcceptJob">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Bind(System.Guid,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Configure(Sif.Framework.Model.Infrastructure.Job)" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Create">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Create(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Create(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Delete">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Guid,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.GetBinding(System.Guid)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.GetServiceName" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.IsBound(System.Guid,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.JobShutdown(Sif.Framework.Model.Infrastructure.Job)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.JobTimeout" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Retrieve">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.Guid,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Shutdown" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Startup" />
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Unbind">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.Guid)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.FunctionalService.Update">
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Update(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Functional.FunctionalService.Update(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Functional_FunctionalService" />
    </api>
    <api id="Fields.T:Sif.Framework.Service.Functional.FunctionalService">
      <topicdata name="FunctionalService" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Service.Functional.FunctionalService" />
      <apidata name="FunctionalService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Service.SifService`2.repository" />
        <element api="F:Sif.Framework.Service.Functional.FunctionalService.phaseActions" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" />
      </containers>
      <file name="Fields_T_Sif_Framework_Service_Functional_FunctionalService" />
    </api>
    <api id="Overload:Sif.Framework.Service.Functional.FunctionalService.AcceptJob">
      <topicdata name="AcceptJob" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Functional_FunctionalService_AcceptJob" />
    </api>
    <api id="Overload:Sif.Framework.Service.Functional.FunctionalService.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Create(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Create(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Functional_FunctionalService_Create" />
    </api>
    <api id="Overload:Sif.Framework.Service.Functional.FunctionalService.Delete">
      <topicdata name="Delete" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Delete" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Guid,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Functional_FunctionalService_Delete" />
    </api>
    <api id="Overload:Sif.Framework.Service.Functional.FunctionalService.Retrieve">
      <topicdata name="Retrieve" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.Guid,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Functional_FunctionalService_Retrieve" />
    </api>
    <api id="Overload:Sif.Framework.Service.Functional.FunctionalService.Unbind">
      <topicdata name="Unbind" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Unbind" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.Guid)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Functional_FunctionalService_Unbind" />
    </api>
    <api id="Overload:Sif.Framework.Service.Functional.FunctionalService.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Update(Sif.Specification.Infrastructure.jobType,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.FunctionalService.Update(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Functional_FunctionalService_Update" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService__ctor" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob">
      <topicdata group="api" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.AcceptJob" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_AcceptJob" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)">
      <topicdata group="api" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.AcceptJob" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_AcceptJob_1" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String)">
      <topicdata group="api" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.AcceptJob" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="jobName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_AcceptJob_2" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.AcceptJob(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.AcceptJob" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="jobName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_AcceptJob_3" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Bind(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="ownerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.Bind(System.Guid,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Bind" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Configure(Sif.Framework.Model.Infrastructure.Job)">
      <topicdata group="api" />
      <apidata name="Configure" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Configure" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Create(Sif.Specification.Infrastructure.jobType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Create" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Create(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Create" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Create(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Create" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Create_1" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_CreateToPhase" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateToState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="item" optional="true">
          <type api="T:Sif.Specification.Infrastructure.stateType" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Specification.Infrastructure.stateType" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_CreateToState" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Delete(Sif.Specification.Infrastructure.jobType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Delete" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Delete(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Delete" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Delete" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Delete_1" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Delete(System.Guid,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Delete" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Delete(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Delete_2" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="DeleteToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_DeleteToPhase" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="ExtendJobTimeout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="duration">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_ExtendJobTimeout" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.GetBinding(System.Guid)">
      <topicdata group="api" />
      <apidata name="GetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.GetBinding(System.Guid)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_GetBinding" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.GetServiceName">
      <topicdata group="api" />
      <apidata name="GetServiceName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.GetServiceName">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_GetServiceName" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.IsBound(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="IsBound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="ownerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.IsBound(System.Guid,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_IsBound" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.JobShutdown(Sif.Framework.Model.Infrastructure.Job)">
      <topicdata group="api" />
      <apidata name="JobShutdown" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_JobShutdown" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.JobTimeout">
      <topicdata group="api" />
      <apidata name="JobTimeout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.JobTimeout">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_JobTimeout" />
    </api>
    <api id="F:Sif.Framework.Service.Functional.FunctionalService.phaseActions">
      <topicdata group="api" />
      <apidata name="phaseActions" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="F_Sif_Framework_Service_Functional_FunctionalService_phaseActions" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(Sif.Specification.Infrastructure.jobType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Retrieve" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Retrieve(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.Guid,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Retrieve" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Retrieve(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Retrieve_1" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Retrieve(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Retrieve" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Retrieve(System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Retrieve_2" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_RetrieveToPhase" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.Shutdown">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Shutdown" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Startup">
      <topicdata group="api" />
      <apidata name="Startup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.Startup">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Startup" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.Guid)">
      <topicdata group="api" />
      <apidata name="Unbind" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Unbind" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.Guid)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Unbind" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Unbind(System.String)">
      <topicdata group="api" />
      <apidata name="Unbind" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Unbind" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ownerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Unbind_1" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Update(Sif.Specification.Infrastructure.jobType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Update" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Update(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Update" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.Update(System.Collections.Generic.IEnumerable{Sif.Specification.Infrastructure.jobType},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.FunctionalService.Update" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="items">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_Update_1" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.FunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IFunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_FunctionalService_UpdateToPhase" />
    </api>
    <api id="T:Sif.Framework.Service.Functional.IFunctionalService">
      <topicdata group="api" />
      <apidata name="IFunctionalService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
          <specialization>
            <type api="T:Sif.Specification.Infrastructure.jobType" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </implements>
      <implementors>
        <type api="T:Sif.Framework.Service.Functional.FunctionalService" ref="true" />
      </implementors>
      <elements>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Create">
          <element api="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Delete">
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Retrieve">
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Update">
          <element api="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob">
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob" />
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String)" />
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)" />
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Bind(System.Guid,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.GetBinding(System.Guid)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.GetServiceName" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.IsBound(System.Guid,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.JobTimeout" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Shutdown" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Startup" />
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Unbind">
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.Guid)" />
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
      </containers>
      <file name="T_Sif_Framework_Service_Functional_IFunctionalService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Functional.IFunctionalService">
      <topicdata name="IFunctionalService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Functional.IFunctionalService" />
      <apidata name="IFunctionalService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Create">
          <element api="M:Sif.Framework.Service.ISifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Delete">
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Delete(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Retrieve">
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Retrieve(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Update">
          <element api="M:Sif.Framework.Service.ISifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.ISifService`2.Update(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob">
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob" />
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String)" />
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)" />
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Bind(System.Guid,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.GetBinding(System.Guid)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.GetServiceName" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.IsBound(System.Guid,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.JobTimeout" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Shutdown" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Startup" />
        <element api="Overload:Sif.Framework.Service.Functional.IFunctionalService.Unbind">
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.Guid)" />
          <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Functional_IFunctionalService" />
    </api>
    <api id="Overload:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob">
      <topicdata name="AcceptJob" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Functional_IFunctionalService_AcceptJob" />
    </api>
    <api id="Overload:Sif.Framework.Service.Functional.IFunctionalService.Unbind">
      <topicdata name="Unbind" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Unbind" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.Guid)" />
        <element api="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Functional_IFunctionalService_Unbind" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob">
      <topicdata group="api" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_AcceptJob" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(Sif.Framework.Model.Infrastructure.Job)">
      <topicdata group="api" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_AcceptJob_1" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String)">
      <topicdata group="api" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="jobName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_AcceptJob_2" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AcceptJob" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.IFunctionalService.AcceptJob" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="jobName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_AcceptJob_3" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.Bind(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="ownerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_Bind" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_CreateToPhase" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.CreateToState(System.Guid,System.String,Sif.Specification.Infrastructure.stateType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CreateToState" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="item" optional="true">
          <type api="T:Sif.Specification.Infrastructure.stateType" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Specification.Infrastructure.stateType" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_CreateToState" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.DeleteToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="DeleteToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_DeleteToPhase" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.ExtendJobTimeout(Sif.Framework.Model.Infrastructure.Job,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="ExtendJobTimeout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="duration">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_ExtendJobTimeout" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.GetBinding(System.Guid)">
      <topicdata group="api" />
      <apidata name="GetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_GetBinding" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.GetServiceName">
      <topicdata group="api" />
      <apidata name="GetServiceName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_GetServiceName" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.IsBound(System.Guid,System.String)">
      <topicdata group="api" />
      <apidata name="IsBound" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="ownerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_IsBound" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.JobTimeout">
      <topicdata group="api" />
      <apidata name="JobTimeout" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_JobTimeout" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.RetrieveToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_RetrieveToPhase" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.Shutdown">
      <topicdata group="api" />
      <apidata name="Shutdown" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_Shutdown" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.Startup">
      <topicdata group="api" />
      <apidata name="Startup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_Startup" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.Guid)">
      <topicdata group="api" />
      <apidata name="Unbind" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.IFunctionalService.Unbind" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="objectId">
          <type api="T:System.Guid" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_Unbind" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.Unbind(System.String)">
      <topicdata group="api" />
      <apidata name="Unbind" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Functional.IFunctionalService.Unbind" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ownerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_Unbind_1" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IFunctionalService.UpdateToPhase(System.Guid,System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateToPhase" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Guid" ref="false" />
        </parameter>
        <parameter name="phaseName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IFunctionalService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IFunctionalService_UpdateToPhase" />
    </api>
    <api id="T:Sif.Framework.Service.Functional.IPhaseActions">
      <topicdata group="api" />
      <apidata name="IPhaseActions" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Sif.Framework.Service.Functional.PhaseActions" ref="true" />
      </implementors>
      <elements>
        <element api="M:Sif.Framework.Service.Functional.IPhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IPhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IPhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IPhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
      </containers>
      <file name="T_Sif_Framework_Service_Functional_IPhaseActions" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Functional.IPhaseActions">
      <topicdata name="IPhaseActions" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Functional.IPhaseActions" />
      <apidata name="IPhaseActions" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Service.Functional.IPhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IPhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IPhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.IPhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IPhaseActions" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Functional_IPhaseActions" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IPhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IPhaseActions_Create" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IPhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IPhaseActions_Delete" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IPhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IPhaseActions_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.IPhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_IPhaseActions_Update" />
    </api>
    <api id="T:Sif.Framework.Service.Functional.PhaseActions">
      <topicdata group="api" />
      <apidata name="PhaseActions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.#ctor" />
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
      </containers>
      <file name="T_Sif_Framework_Service_Functional_PhaseActions" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Functional.PhaseActions">
      <topicdata name="PhaseActions" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Functional.PhaseActions" />
      <apidata name="PhaseActions" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Functional.PhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.PhaseActions" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Functional_PhaseActions" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.PhaseActions.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.PhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_PhaseActions__ctor" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.PhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IPhaseActions.Create(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.PhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_PhaseActions_Create" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.PhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IPhaseActions.Delete(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.PhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_PhaseActions_Delete" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.PhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Retrieve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IPhaseActions.Retrieve(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.PhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_PhaseActions_Retrieve" />
    </api>
    <api id="M:Sif.Framework.Service.Functional.PhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="job">
          <type api="T:Sif.Framework.Model.Infrastructure.Job" ref="true" />
        </parameter>
        <parameter name="phase">
          <type api="T:Sif.Framework.Model.Infrastructure.Phase" ref="true" />
        </parameter>
        <parameter name="body" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentType" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="accept" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Functional.IPhaseActions.Update(Sif.Framework.Model.Infrastructure.Job,Sif.Framework.Model.Infrastructure.Phase,System.String,System.String,System.String)">
          <type api="T:Sif.Framework.Service.Functional.IPhaseActions" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Functional" />
        <type api="T:Sif.Framework.Service.Functional.PhaseActions" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Functional_PhaseActions_Update" />
    </api>
    <api id="N:Sif.Framework.Service.Infrastructure">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service.Infrastructure" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" />
        <element api="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" />
        <element api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" />
      </elements>
      <file name="N_Sif_Framework_Service_Infrastructure" />
    </api>
    <api id="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService">
      <topicdata group="api" />
      <apidata name="ApplicationRegisterService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Service.GenericService`2" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.Create">
          <element api="M:Sif.Framework.Service.GenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Create(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.Delete">
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`0)" />
        </element>
        <element api="F:Sif.Framework.Service.GenericService`2.repository" />
        <element api="Overload:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.Retrieve">
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.Update">
          <element api="M:Sif.Framework.Service.GenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Update(`0)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.#ctor" />
        <element api="M:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.RetrieveByApplicationKey(System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Service_Infrastructure_ApplicationRegisterService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService">
      <topicdata name="ApplicationRegisterService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" />
      <apidata name="ApplicationRegisterService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.Create">
          <element api="M:Sif.Framework.Service.GenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Create(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.Delete">
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.Retrieve">
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.Update">
          <element api="M:Sif.Framework.Service.GenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Update(`0)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.RetrieveByApplicationKey(System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Infrastructure_ApplicationRegisterService" />
    </api>
    <api id="Fields.T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService">
      <topicdata name="ApplicationRegisterService" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" />
      <apidata name="ApplicationRegisterService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Service.GenericService`2.repository" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" />
      </containers>
      <file name="Fields_T_Sif_Framework_Service_Infrastructure_ApplicationRegisterService" />
    </api>
    <api id="M:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Infrastructure_ApplicationRegisterService__ctor" />
    </api>
    <api id="M:Sif.Framework.Service.Infrastructure.ApplicationRegisterService.RetrieveByApplicationKey(System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveByApplicationKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.ApplicationRegister" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.ApplicationRegisterService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Infrastructure_ApplicationRegisterService_RetrieveByApplicationKey" />
    </api>
    <api id="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService">
      <topicdata group="api" />
      <apidata name="EnvironmentRegisterService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Service.GenericService`2" ref="true">
            <specialization>
              <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
              <type api="T:System.Int64" ref="false" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Service.IGenericService`2" ref="true">
          <specialization>
            <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.Create">
          <element api="M:Sif.Framework.Service.GenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Create(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.Delete">
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`0)" />
        </element>
        <element api="F:Sif.Framework.Service.GenericService`2.repository" />
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.Retrieve">
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.Update">
          <element api="M:Sif.Framework.Service.GenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Update(`0)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.#ctor" />
        <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.RetrieveByUniqueIdentifiers(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Service_Infrastructure_EnvironmentRegisterService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService">
      <topicdata name="EnvironmentRegisterService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" />
      <apidata name="EnvironmentRegisterService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.Create">
          <element api="M:Sif.Framework.Service.GenericService`2.Create(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Create(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.Delete">
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Delete(`0)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.Retrieve">
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`1)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(`0)" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Retrieve(System.Int32,System.Int32)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.Update">
          <element api="M:Sif.Framework.Service.GenericService`2.Update(System.Collections.Generic.IEnumerable{`0})" />
          <element api="M:Sif.Framework.Service.GenericService`2.Update(`0)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.RetrieveByUniqueIdentifiers(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Infrastructure_EnvironmentRegisterService" />
    </api>
    <api id="Fields.T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService">
      <topicdata name="EnvironmentRegisterService" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" />
      <apidata name="EnvironmentRegisterService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Service.GenericService`2.repository" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" />
      </containers>
      <file name="Fields_T_Sif_Framework_Service_Infrastructure_EnvironmentRegisterService" />
    </api>
    <api id="M:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Infrastructure_EnvironmentRegisterService__ctor" />
    </api>
    <api id="M:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService.RetrieveByUniqueIdentifiers(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveByUniqueIdentifiers" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="solutionId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.EnvironmentRegister" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentRegisterService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Infrastructure_EnvironmentRegisterService_RetrieveByUniqueIdentifiers" />
    </api>
    <api id="T:Sif.Framework.Service.Infrastructure.EnvironmentService">
      <topicdata group="api" />
      <apidata name="EnvironmentService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
          <specialization>
            <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </implements>
      <elements>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Create">
          <element api="M:Sif.Framework.Service.SifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentService.Create(Sif.Specification.Infrastructure.environmentType,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Delete">
          <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Delete(`0,System.String,System.String)" />
        </element>
        <element api="F:Sif.Framework.Service.SifService`2.repository" />
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Retrieve">
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Update">
          <element api="M:Sif.Framework.Service.SifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Update(`0,System.String,System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentService.#ctor" />
        <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentService.RetrieveBySessionToken(System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
      </containers>
      <file name="T_Sif_Framework_Service_Infrastructure_EnvironmentService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Infrastructure.EnvironmentService">
      <topicdata name="EnvironmentService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Infrastructure.EnvironmentService" />
      <apidata name="EnvironmentService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Create">
          <element api="M:Sif.Framework.Service.SifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentService.Create(Sif.Specification.Infrastructure.environmentType,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Delete">
          <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Delete(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Delete(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Retrieve">
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(System.Guid,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Retrieve(`0,System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Update">
          <element api="M:Sif.Framework.Service.SifService`2.Update(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.SifService`2.Update(`0,System.String,System.String)" />
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentService.RetrieveBySessionToken(System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Infrastructure_EnvironmentService" />
    </api>
    <api id="Fields.T:Sif.Framework.Service.Infrastructure.EnvironmentService">
      <topicdata name="EnvironmentService" group="list" subgroup="Fields" typeTopicId="T:Sif.Framework.Service.Infrastructure.EnvironmentService" />
      <apidata name="EnvironmentService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:Sif.Framework.Service.SifService`2.repository" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" />
      </containers>
      <file name="Fields_T_Sif_Framework_Service_Infrastructure_EnvironmentService" />
    </api>
    <api id="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.SifService`2.Create(System.Collections.Generic.IEnumerable{`0},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Infrastructure.EnvironmentService.Create(Sif.Specification.Infrastructure.environmentType,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Infrastructure_EnvironmentService_Create" />
    </api>
    <api id="M:Sif.Framework.Service.Infrastructure.EnvironmentService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Infrastructure_EnvironmentService__ctor" />
    </api>
    <api id="M:Sif.Framework.Service.Infrastructure.EnvironmentService.Create(Sif.Specification.Infrastructure.environmentType,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Infrastructure.EnvironmentService.Create" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Sif.Framework.Service.SifService`2.Create(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.SifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
            </specialization>
          </type>
        </member>
        <member api="M:Sif.Framework.Service.ISifService`2.Create(`0,System.String,System.String)">
          <type api="T:Sif.Framework.Service.ISifService`2" ref="true">
            <specialization>
              <template name="UI" index="0" api="T:Sif.Framework.Service.SifService`2" />
              <template name="DB" index="1" api="T:Sif.Framework.Service.SifService`2" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Infrastructure_EnvironmentService_Create" />
    </api>
    <api id="M:Sif.Framework.Service.Infrastructure.EnvironmentService.RetrieveBySessionToken(System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveBySessionToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Specification.Infrastructure.environmentType" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Infrastructure" />
        <type api="T:Sif.Framework.Service.Infrastructure.EnvironmentService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Infrastructure_EnvironmentService_RetrieveBySessionToken" />
    </api>
    <api id="N:Sif.Framework.Service.Mapper">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service.Mapper" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.Mapper.MapperFactory" />
      </elements>
      <file name="N_Sif_Framework_Service_Mapper" />
    </api>
    <api id="T:Sif.Framework.Service.Mapper.MapperFactory">
      <topicdata group="api" />
      <apidata name="MapperFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstance``2(``0)" />
        <element api="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstances``2(System.Collections.Generic.IEnumerable{``0})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Mapper" />
      </containers>
      <file name="T_Sif_Framework_Service_Mapper_MapperFactory" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Mapper.MapperFactory">
      <topicdata name="MapperFactory" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Mapper.MapperFactory" />
      <apidata name="MapperFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstance``2(``0)" />
        <element api="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstances``2(System.Collections.Generic.IEnumerable{``0})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Mapper" />
        <type api="T:Sif.Framework.Service.Mapper.MapperFactory" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Mapper_MapperFactory" />
    </api>
    <api id="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstance``2(``0)">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="S" />
        <template name="D" />
      </templates>
      <parameters>
        <parameter name="source">
          <template name="S" index="0" api="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstance``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="D" index="1" api="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstance``2(``0)" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Mapper" />
        <type api="T:Sif.Framework.Service.Mapper.MapperFactory" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Mapper_MapperFactory_CreateInstance__2" />
    </api>
    <api id="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstances``2(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="CreateInstances" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="S" />
        <template name="D" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="S" index="0" api="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstances``2(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="D" index="1" api="M:Sif.Framework.Service.Mapper.MapperFactory.CreateInstances``2(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Mapper" />
        <type api="T:Sif.Framework.Service.Mapper.MapperFactory" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Mapper_MapperFactory_CreateInstances__2" />
    </api>
    <api id="N:Sif.Framework.Service.Providers">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service.Providers" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.Providers.IBasicProviderService`1" />
        <element api="T:Sif.Framework.Service.Providers.IProviderService`2" />
      </elements>
      <file name="N_Sif_Framework_Service_Providers" />
    </api>
    <api id="T:Sif.Framework.Service.Providers.IBasicProviderService`1">
      <topicdata group="api" />
      <apidata name="IBasicProviderService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Sif.Framework.Service.Providers.IBasicProviderService`1" />
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Sif.Framework.Service.Providers.IBasicProviderService`1" />
              </specialization>
            </type>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </implements>
      <elements>
        <element api="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.IObjectService`3.Delete(`2,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Service.Providers.IBasicProviderService`1.Retrieve">
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Providers" />
      </containers>
      <file name="T_Sif_Framework_Service_Providers_IBasicProviderService_1" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Providers.IBasicProviderService`1">
      <topicdata name="IBasicProviderService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Providers.IBasicProviderService`1" />
      <apidata name="IBasicProviderService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.IObjectService`3.Delete(`2,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Service.Providers.IBasicProviderService`1.Retrieve">
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Providers" />
        <type api="T:Sif.Framework.Service.Providers.IBasicProviderService`1" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Providers_IBasicProviderService_1" />
    </api>
    <api id="T:Sif.Framework.Service.Providers.IProviderService`2">
      <topicdata group="api" />
      <apidata name="IProviderService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle" />
        <template name="TMultiple" />
      </templates>
      <implements>
        <type api="T:Sif.Framework.Service.IObjectService`3" ref="true">
          <specialization>
            <template name="TSingle" index="0" api="T:Sif.Framework.Service.Providers.IProviderService`2" />
            <template name="TMultiple" index="1" api="T:Sif.Framework.Service.Providers.IProviderService`2" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
        <type api="T:Sif.Framework.Service.IService" ref="true" />
      </implements>
      <elements>
        <element api="Overload:Sif.Framework.Service.Providers.IProviderService`2.Create">
          <element api="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Providers.IProviderService`2.Create(`1,System.Nullable{System.Boolean},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.IObjectService`3.Delete(`2,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Service.Providers.IProviderService`2.Retrieve">
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Providers.IProviderService`2.Update">
          <element api="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Providers.IProviderService`2.Update(`1,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Providers" />
      </containers>
      <file name="T_Sif_Framework_Service_Providers_IProviderService_2" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Providers.IProviderService`2">
      <topicdata name="IProviderService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Providers.IProviderService`2" />
      <apidata name="IProviderService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TSingle" />
        <template name="TMultiple" />
      </templates>
      <elements>
        <element api="Overload:Sif.Framework.Service.Providers.IProviderService`2.Create">
          <element api="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Providers.IProviderService`2.Create(`1,System.Nullable{System.Boolean},System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.IObjectService`3.Delete(`2,System.String,System.String)" />
        <element api="Overload:Sif.Framework.Service.Providers.IProviderService`2.Retrieve">
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`2,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(`0,System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
          <element api="M:Sif.Framework.Service.IObjectService`3.Retrieve(System.Collections.Generic.IEnumerable{Sif.Framework.Model.Query.EqualCondition},System.Nullable{System.UInt32},System.Nullable{System.UInt32},System.String,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Providers.IProviderService`2.Update">
          <element api="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)" />
          <element api="M:Sif.Framework.Service.Providers.IProviderService`2.Update(`1,System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Providers" />
        <type api="T:Sif.Framework.Service.Providers.IProviderService`2" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Providers_IProviderService_2" />
    </api>
    <api id="Overload:Sif.Framework.Service.Providers.IProviderService`2.Create">
      <topicdata name="Create" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Create" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.IObjectService`3.Create(`0,System.Nullable{System.Boolean},System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Providers.IProviderService`2.Create(`1,System.Nullable{System.Boolean},System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Providers" />
        <type api="T:Sif.Framework.Service.Providers.IProviderService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Providers_IProviderService_2_Create" />
    </api>
    <api id="Overload:Sif.Framework.Service.Providers.IProviderService`2.Update">
      <topicdata name="Update" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Update" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.IObjectService`3.Update(`0,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Providers.IProviderService`2.Update(`1,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Providers" />
        <type api="T:Sif.Framework.Service.Providers.IProviderService`2" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Providers_IProviderService_2_Update" />
    </api>
    <api id="M:Sif.Framework.Service.Providers.IProviderService`2.Create(`1,System.Nullable{System.Boolean},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Providers.IProviderService`2.Create" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Service.Providers.IProviderService`2" />
        </parameter>
        <parameter name="mustUseAdvisory" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleCreateResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Providers" />
        <type api="T:Sif.Framework.Service.Providers.IProviderService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Providers_IProviderService_2_Create" />
    </api>
    <api id="M:Sif.Framework.Service.Providers.IProviderService`2.Update(`1,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Update" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Providers.IProviderService`2.Update" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="TMultiple" index="1" api="T:Sif.Framework.Service.Providers.IProviderService`2" />
        </parameter>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Responses.MultipleUpdateResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Providers" />
        <type api="T:Sif.Framework.Service.Providers.IProviderService`2" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Providers_IProviderService_2_Update" />
    </api>
    <api id="N:Sif.Framework.Service.Registration">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service.Registration" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.Registration.IRegistrationService" />
        <element api="T:Sif.Framework.Service.Registration.NoRegistrationService" />
        <element api="T:Sif.Framework.Service.Registration.RegistrationService" />
      </elements>
      <file name="N_Sif_Framework_Service_Registration" />
    </api>
    <api id="T:Sif.Framework.Service.Registration.IRegistrationService">
      <topicdata group="api" />
      <apidata name="IRegistrationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" ref="true" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </implementors>
      <elements>
        <element api="P:Sif.Framework.Service.Registration.IRegistrationService.AuthorisationToken" />
        <element api="Overload:Sif.Framework.Service.Registration.IRegistrationService.Register">
          <element api="M:Sif.Framework.Service.Registration.IRegistrationService.Register" />
          <element api="M:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
        </element>
        <element api="P:Sif.Framework.Service.Registration.IRegistrationService.Registered" />
        <element api="M:Sif.Framework.Service.Registration.IRegistrationService.Unregister(System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
      </containers>
      <file name="T_Sif_Framework_Service_Registration_IRegistrationService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Registration.IRegistrationService">
      <topicdata name="IRegistrationService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Registration.IRegistrationService" />
      <apidata name="IRegistrationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.Service.Registration.IRegistrationService.Register">
          <element api="M:Sif.Framework.Service.Registration.IRegistrationService.Register" />
          <element api="M:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
        </element>
        <element api="M:Sif.Framework.Service.Registration.IRegistrationService.Unregister(System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Registration_IRegistrationService" />
    </api>
    <api id="Properties.T:Sif.Framework.Service.Registration.IRegistrationService">
      <topicdata name="IRegistrationService" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Service.Registration.IRegistrationService" />
      <apidata name="IRegistrationService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Service.Registration.IRegistrationService.AuthorisationToken" />
        <element api="P:Sif.Framework.Service.Registration.IRegistrationService.Registered" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" />
      </containers>
      <file name="Properties_T_Sif_Framework_Service_Registration_IRegistrationService" />
    </api>
    <api id="Overload:Sif.Framework.Service.Registration.IRegistrationService.Register">
      <topicdata name="Register" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Register" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Registration.IRegistrationService.Register" />
        <element api="M:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Registration_IRegistrationService_Register" />
    </api>
    <api id="P:Sif.Framework.Service.Registration.IRegistrationService.AuthorisationToken">
      <topicdata group="api" />
      <apidata name="AuthorisationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AuthorisationToken" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Service_Registration_IRegistrationService_AuthorisationToken" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.IRegistrationService.Register">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Registration.IRegistrationService.Register" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_IRegistrationService_Register" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Registration.IRegistrationService.Register" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="environment">
          <referenceTo>
            <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_IRegistrationService_Register_1" />
    </api>
    <api id="P:Sif.Framework.Service.Registration.IRegistrationService.Registered">
      <topicdata group="api" />
      <apidata name="Registered" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Registered" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Service_Registration_IRegistrationService_Registered" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.IRegistrationService.Unregister(System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="deleteOnUnregister" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_IRegistrationService_Unregister" />
    </api>
    <api id="T:Sif.Framework.Service.Registration.NoRegistrationService">
      <topicdata group="api" />
      <apidata name="NoRegistrationService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.#ctor" />
        <element api="P:Sif.Framework.Service.Registration.NoRegistrationService.AuthorisationToken" />
        <element api="Overload:Sif.Framework.Service.Registration.NoRegistrationService.Register">
          <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.Register" />
          <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
        </element>
        <element api="P:Sif.Framework.Service.Registration.NoRegistrationService.Registered" />
        <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.Unregister(System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
      </containers>
      <file name="T_Sif_Framework_Service_Registration_NoRegistrationService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Registration.NoRegistrationService">
      <topicdata name="NoRegistrationService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Registration.NoRegistrationService" />
      <apidata name="NoRegistrationService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Service.Registration.NoRegistrationService.Register">
          <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.Register" />
          <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
        </element>
        <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.Unregister(System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Registration_NoRegistrationService" />
    </api>
    <api id="Properties.T:Sif.Framework.Service.Registration.NoRegistrationService">
      <topicdata name="NoRegistrationService" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Service.Registration.NoRegistrationService" />
      <apidata name="NoRegistrationService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Service.Registration.NoRegistrationService.AuthorisationToken" />
        <element api="P:Sif.Framework.Service.Registration.NoRegistrationService.Registered" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" />
      </containers>
      <file name="Properties_T_Sif_Framework_Service_Registration_NoRegistrationService" />
    </api>
    <api id="Overload:Sif.Framework.Service.Registration.NoRegistrationService.Register">
      <topicdata name="Register" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Register" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.Register" />
        <element api="M:Sif.Framework.Service.Registration.NoRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Registration_NoRegistrationService_Register" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.NoRegistrationService.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_NoRegistrationService__ctor" />
    </api>
    <api id="P:Sif.Framework.Service.Registration.NoRegistrationService.AuthorisationToken">
      <topicdata group="api" />
      <apidata name="AuthorisationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AuthorisationToken" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Service.Registration.IRegistrationService.AuthorisationToken">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Service_Registration_NoRegistrationService_AuthorisationToken" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.NoRegistrationService.Register">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Registration.NoRegistrationService.Register" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Registration.IRegistrationService.Register">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_NoRegistrationService_Register" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.NoRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Registration.NoRegistrationService.Register" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="environment">
          <referenceTo>
            <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_NoRegistrationService_Register_1" />
    </api>
    <api id="P:Sif.Framework.Service.Registration.NoRegistrationService.Registered">
      <topicdata group="api" />
      <apidata name="Registered" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Registered" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Service.Registration.IRegistrationService.Registered">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Service_Registration_NoRegistrationService_Registered" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.NoRegistrationService.Unregister(System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="deleteOnUnregister" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.Registration.IRegistrationService.Unregister(System.Nullable{System.Boolean})">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.NoRegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_NoRegistrationService_Unregister" />
    </api>
    <api id="T:Sif.Framework.Service.Registration.RegistrationService">
      <topicdata group="api" />
      <apidata name="RegistrationService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Service.Registration.RegistrationService.#ctor(Sif.Framework.Model.Settings.IFrameworkSettings,Sif.Framework.Service.Sessions.ISessionService)" />
        <element api="P:Sif.Framework.Service.Registration.RegistrationService.AuthorisationToken" />
        <element api="P:Sif.Framework.Service.Registration.RegistrationService.CurrentEnvironment" />
        <element api="Overload:Sif.Framework.Service.Registration.RegistrationService.Register">
          <element api="M:Sif.Framework.Service.Registration.RegistrationService.Register" />
          <element api="M:Sif.Framework.Service.Registration.RegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
        </element>
        <element api="P:Sif.Framework.Service.Registration.RegistrationService.Registered" />
        <element api="M:Sif.Framework.Service.Registration.RegistrationService.Unregister(System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
      </containers>
      <file name="T_Sif_Framework_Service_Registration_RegistrationService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Registration.RegistrationService">
      <topicdata name="RegistrationService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Registration.RegistrationService" />
      <apidata name="RegistrationService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.Service.Registration.RegistrationService.Register">
          <element api="M:Sif.Framework.Service.Registration.RegistrationService.Register" />
          <element api="M:Sif.Framework.Service.Registration.RegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
        </element>
        <element api="M:Sif.Framework.Service.Registration.RegistrationService.Unregister(System.Nullable{System.Boolean})" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Registration_RegistrationService" />
    </api>
    <api id="Properties.T:Sif.Framework.Service.Registration.RegistrationService">
      <topicdata name="RegistrationService" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Service.Registration.RegistrationService" />
      <apidata name="RegistrationService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Service.Registration.RegistrationService.AuthorisationToken" />
        <element api="P:Sif.Framework.Service.Registration.RegistrationService.CurrentEnvironment" />
        <element api="P:Sif.Framework.Service.Registration.RegistrationService.Registered" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" />
      </containers>
      <file name="Properties_T_Sif_Framework_Service_Registration_RegistrationService" />
    </api>
    <api id="Overload:Sif.Framework.Service.Registration.RegistrationService.Register">
      <topicdata name="Register" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Register" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Registration.RegistrationService.Register" />
        <element api="M:Sif.Framework.Service.Registration.RegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Registration_RegistrationService_Register" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.RegistrationService.#ctor(Sif.Framework.Model.Settings.IFrameworkSettings,Sif.Framework.Service.Sessions.ISessionService)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="settings">
          <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
        </parameter>
        <parameter name="sessionService">
          <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_RegistrationService__ctor" />
    </api>
    <api id="P:Sif.Framework.Service.Registration.RegistrationService.AuthorisationToken">
      <topicdata group="api" />
      <apidata name="AuthorisationToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AuthorisationToken" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Service.Registration.IRegistrationService.AuthorisationToken">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Service_Registration_RegistrationService_AuthorisationToken" />
    </api>
    <api id="P:Sif.Framework.Service.Registration.RegistrationService.CurrentEnvironment">
      <topicdata group="api" />
      <apidata name="CurrentEnvironment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentEnvironment" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Service_Registration_RegistrationService_CurrentEnvironment" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.RegistrationService.Register">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Registration.RegistrationService.Register" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Registration.IRegistrationService.Register">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_RegistrationService_Register" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.RegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)">
      <topicdata group="api" />
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Registration.RegistrationService.Register" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="environment">
          <referenceTo>
            <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Model.Infrastructure.Environment" ref="true" />
      </returns>
      <implements>
        <member api="M:Sif.Framework.Service.Registration.IRegistrationService.Register(Sif.Framework.Model.Infrastructure.Environment@)">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_RegistrationService_Register_1" />
    </api>
    <api id="P:Sif.Framework.Service.Registration.RegistrationService.Registered">
      <topicdata group="api" />
      <apidata name="Registered" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Registered" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Sif.Framework.Service.Registration.IRegistrationService.Registered">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Service_Registration_RegistrationService_Registered" />
    </api>
    <api id="M:Sif.Framework.Service.Registration.RegistrationService.Unregister(System.Nullable{System.Boolean})">
      <topicdata group="api" />
      <apidata name="Unregister" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="deleteOnUnregister" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Sif.Framework.Service.Registration.IRegistrationService.Unregister(System.Nullable{System.Boolean})">
          <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Registration" />
        <type api="T:Sif.Framework.Service.Registration.RegistrationService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Registration_RegistrationService_Unregister" />
    </api>
    <api id="N:Sif.Framework.Service.Serialisation">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service.Serialisation" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" />
        <element api="T:Sif.Framework.Service.Serialisation.SerialiserFactory" />
      </elements>
      <file name="N_Sif_Framework_Service_Serialisation" />
    </api>
    <api id="T:Sif.Framework.Service.Serialisation.ISerialiser`1">
      <topicdata group="api" />
      <apidata name="ISerialiser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise">
          <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.IO.Stream)" />
          <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise">
          <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0)" />
          <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0,System.IO.Stream@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
      </containers>
      <file name="T_Sif_Framework_Service_Serialisation_ISerialiser_1" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Serialisation.ISerialiser`1">
      <topicdata name="ISerialiser" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Serialisation.ISerialiser`1" />
      <apidata name="ISerialiser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise">
          <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.IO.Stream)" />
          <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise">
          <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0)" />
          <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0,System.IO.Stream@)" />
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Serialisation_ISerialiser_1" />
    </api>
    <api id="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise">
      <topicdata name="Deserialise" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Deserialise" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.IO.Stream)" />
        <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Serialisation_ISerialiser_1_Deserialise" />
    </api>
    <api id="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise">
      <topicdata name="Serialise" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="Serialise" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0)" />
        <element api="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0,System.IO.Stream@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Serialisation_ISerialiser_1_Serialise" />
    </api>
    <api id="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="Deserialise" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Serialisation_ISerialiser_1_Deserialise" />
    </api>
    <api id="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise(System.String)">
      <topicdata group="api" />
      <apidata name="Deserialise" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Deserialise" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Serialisation_ISerialiser_1_Deserialise_1" />
    </api>
    <api id="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0)">
      <topicdata group="api" />
      <apidata name="Serialise" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Serialisation_ISerialiser_1_Serialise" />
    </api>
    <api id="M:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise(`0,System.IO.Stream@)">
      <topicdata group="api" />
      <apidata name="Serialise" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Serialisation.ISerialiser`1.Serialise" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" />
        </parameter>
        <parameter name="stream" out="true">
          <referenceTo>
            <type api="T:System.IO.Stream" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Serialisation_ISerialiser_1_Serialise_1" />
    </api>
    <api id="T:Sif.Framework.Service.Serialisation.SerialiserFactory">
      <topicdata group="api" />
      <apidata name="SerialiserFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Sif.Framework.Service.Serialisation.SerialiserFactory.GetXmlSerialiser``1(System.Xml.Serialization.XmlRootAttribute)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
      </containers>
      <file name="T_Sif_Framework_Service_Serialisation_SerialiserFactory" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Serialisation.SerialiserFactory">
      <topicdata name="SerialiserFactory" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Serialisation.SerialiserFactory" />
      <apidata name="SerialiserFactory" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Service.Serialisation.SerialiserFactory.GetXmlSerialiser``1(System.Xml.Serialization.XmlRootAttribute)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.SerialiserFactory" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Serialisation_SerialiserFactory" />
    </api>
    <api id="M:Sif.Framework.Service.Serialisation.SerialiserFactory.GetXmlSerialiser``1(System.Xml.Serialization.XmlRootAttribute)">
      <topicdata group="api" />
      <apidata name="GetXmlSerialiser" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="rootAttribute" optional="true">
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Sif.Framework.Service.Serialisation.ISerialiser`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Sif.Framework.Service.Serialisation.SerialiserFactory.GetXmlSerialiser``1(System.Xml.Serialization.XmlRootAttribute)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Serialisation" />
        <type api="T:Sif.Framework.Service.Serialisation.SerialiserFactory" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Serialisation_SerialiserFactory_GetXmlSerialiser__1" />
    </api>
    <api id="N:Sif.Framework.Service.Sessions">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Service.Sessions" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Service.Sessions.ISessionService" />
      </elements>
      <file name="N_Sif_Framework_Service_Sessions" />
    </api>
    <api id="T:Sif.Framework.Service.Sessions.ISessionService">
      <topicdata group="api" />
      <apidata name="ISessionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.Service.Sessions.ISessionService.HasSession">
          <element api="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String)" />
          <element api="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.RemoveSession(System.String)" />
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveEnvironmentUrl(System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveSessionToken(System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.StoreSession(System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
      </containers>
      <file name="T_Sif_Framework_Service_Sessions_ISessionService" />
    </api>
    <api id="Methods.T:Sif.Framework.Service.Sessions.ISessionService">
      <topicdata name="ISessionService" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Service.Sessions.ISessionService" />
      <apidata name="ISessionService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.Service.Sessions.ISessionService.HasSession">
          <element api="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String)" />
          <element api="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.RemoveSession(System.String)" />
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveEnvironmentUrl(System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveSessionToken(System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.StoreSession(System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" />
      </containers>
      <file name="Methods_T_Sif_Framework_Service_Sessions_ISessionService" />
    </api>
    <api id="Overload:Sif.Framework.Service.Sessions.ISessionService.HasSession">
      <topicdata name="HasSession" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="HasSession" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String)" />
        <element api="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Service_Sessions_ISessionService_HasSession" />
    </api>
    <api id="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String)">
      <topicdata group="api" />
      <apidata name="HasSession" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Sessions.ISessionService.HasSession" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Sessions_ISessionService_HasSession" />
    </api>
    <api id="M:Sif.Framework.Service.Sessions.ISessionService.HasSession(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="HasSession" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Sif.Framework.Service.Sessions.ISessionService.HasSession" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="userToken" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="instanceId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Sessions_ISessionService_HasSession_1" />
    </api>
    <api id="M:Sif.Framework.Service.Sessions.ISessionService.RemoveSession(System.String)">
      <topicdata group="api" />
      <apidata name="RemoveSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Sessions_ISessionService_RemoveSession" />
    </api>
    <api id="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveEnvironmentUrl(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveEnvironmentUrl" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="userToken" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="instanceId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Sessions_ISessionService_RetrieveEnvironmentUrl" />
    </api>
    <api id="M:Sif.Framework.Service.Sessions.ISessionService.RetrieveSessionToken(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RetrieveSessionToken" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="userToken" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="instanceId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Sessions_ISessionService_RetrieveSessionToken" />
    </api>
    <api id="M:Sif.Framework.Service.Sessions.ISessionService.StoreSession(System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="StoreSession" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="environmentUrl">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="solutionId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="userToken" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="instanceId" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Service.Sessions" />
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Service_Sessions_ISessionService_StoreSession" />
    </api>
    <api id="N:Sif.Framework.Utils">
      <topicdata group="api" />
      <apidata name="Sif.Framework.Utils" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.Utils.RightsUtils" />
        <element api="T:Sif.Framework.Utils.RegistrationManager" />
        <element api="T:Sif.Framework.Utils.SessionsManager" />
        <element api="T:Sif.Framework.Utils.SettingsManager" />
        <element api="T:Sif.Framework.Utils.AuthenticationUtils" />
        <element api="T:Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret" />
        <element api="T:Sif.Framework.Utils.ExceptionUtils" />
        <element api="T:Sif.Framework.Utils.HttpUtils" />
        <element api="T:Sif.Framework.Utils.TraceExceptionLogger" />
      </elements>
      <file name="N_Sif_Framework_Utils" />
    </api>
    <api id="T:Sif.Framework.Utils.AuthenticationUtils">
      <topicdata group="api" />
      <apidata name="AuthenticationUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.GenerateBasicAuthorisationToken(System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.GenerateHMACSHA256AuthorisationToken(System.String,System.String,System.String@)" />
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.GenerateSessionToken(System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.VerifyBasicAuthorisationToken(System.String,Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret,System.String@)" />
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.VerifyHMACSHA256AuthorisationToken(System.String,System.String,Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret,System.String@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
      </containers>
      <file name="T_Sif_Framework_Utils_AuthenticationUtils" />
    </api>
    <api id="Methods.T:Sif.Framework.Utils.AuthenticationUtils">
      <topicdata name="AuthenticationUtils" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Utils.AuthenticationUtils" />
      <apidata name="AuthenticationUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.GenerateBasicAuthorisationToken(System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.GenerateHMACSHA256AuthorisationToken(System.String,System.String,System.String@)" />
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.GenerateSessionToken(System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.VerifyBasicAuthorisationToken(System.String,Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret,System.String@)" />
        <element api="M:Sif.Framework.Utils.AuthenticationUtils.VerifyHMACSHA256AuthorisationToken(System.String,System.String,Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret,System.String@)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.AuthenticationUtils" />
      </containers>
      <file name="Methods_T_Sif_Framework_Utils_AuthenticationUtils" />
    </api>
    <api id="M:Sif.Framework.Utils.AuthenticationUtils.GenerateBasicAuthorisationToken(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GenerateBasicAuthorisationToken" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sharedSecret">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.AuthenticationUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_AuthenticationUtils_GenerateBasicAuthorisationToken" />
    </api>
    <api id="M:Sif.Framework.Utils.AuthenticationUtils.GenerateHMACSHA256AuthorisationToken(System.String,System.String,System.String@)">
      <topicdata group="api" />
      <apidata name="GenerateHMACSHA256AuthorisationToken" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sharedSecret">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dateString" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.AuthenticationUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_AuthenticationUtils_GenerateHMACSHA256AuthorisationToken" />
    </api>
    <api id="M:Sif.Framework.Utils.AuthenticationUtils.GenerateSessionToken(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GenerateSessionToken" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="applicationKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instanceId">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="solutionId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.AuthenticationUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_AuthenticationUtils_GenerateSessionToken" />
    </api>
    <api id="M:Sif.Framework.Utils.AuthenticationUtils.VerifyBasicAuthorisationToken(System.String,Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret,System.String@)">
      <topicdata group="api" />
      <apidata name="VerifyBasicAuthorisationToken" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="authorisationToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="getSharedSecret">
          <type api="T:Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret" ref="true">
            <type api="T:Sif.Framework.Utils.AuthenticationUtils" ref="true" />
          </type>
        </parameter>
        <parameter name="sessionToken" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.AuthenticationUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_AuthenticationUtils_VerifyBasicAuthorisationToken" />
    </api>
    <api id="M:Sif.Framework.Utils.AuthenticationUtils.VerifyHMACSHA256AuthorisationToken(System.String,System.String,Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret,System.String@)">
      <topicdata group="api" />
      <apidata name="VerifyHMACSHA256AuthorisationToken" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="authorisationToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="dateString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="getSharedSecret">
          <type api="T:Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret" ref="true">
            <type api="T:Sif.Framework.Utils.AuthenticationUtils" ref="true" />
          </type>
        </parameter>
        <parameter name="sessionToken" out="true">
          <referenceTo>
            <type api="T:System.String" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.AuthenticationUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_AuthenticationUtils_VerifyHMACSHA256AuthorisationToken" />
    </api>
    <api id="T:Sif.Framework.Utils.AuthenticationUtils.GetSharedSecret">
      <topicdata group="api" />
      <apidata name="GetSharedSecret" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sessionToken">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.AuthenticationUtils" ref="true" />
      </containers>
      <file name="T_Sif_Framework_Utils_AuthenticationUtils_GetSharedSecret" />
    </api>
    <api id="T:Sif.Framework.Utils.ExceptionUtils">
      <topicdata group="api" />
      <apidata name="ExceptionUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Sif.Framework.Utils.ExceptionUtils.InferErrorResponseMessage(System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
      </containers>
      <file name="T_Sif_Framework_Utils_ExceptionUtils" />
    </api>
    <api id="Methods.T:Sif.Framework.Utils.ExceptionUtils">
      <topicdata name="ExceptionUtils" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Utils.ExceptionUtils" />
      <apidata name="ExceptionUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Utils.ExceptionUtils.InferErrorResponseMessage(System.Exception)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.ExceptionUtils" />
      </containers>
      <file name="Methods_T_Sif_Framework_Utils_ExceptionUtils" />
    </api>
    <api id="M:Sif.Framework.Utils.ExceptionUtils.InferErrorResponseMessage(System.Exception)">
      <topicdata group="api" />
      <apidata name="InferErrorResponseMessage" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.ExceptionUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_ExceptionUtils_InferErrorResponseMessage" />
    </api>
    <api id="T:Sif.Framework.Utils.HttpUtils">
      <topicdata group="api" />
      <apidata name="HttpUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Sif.Framework.Utils.HttpUtils.CreateErrorResponse">
          <element api="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)" />
          <element api="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Utils.HttpUtils.DeleteRequest">
          <element api="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String)" />
          <element api="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Utils.HttpUtils.GetAccept(System.Net.Http.HttpRequestMessage)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.GetContentType(System.Net.Http.HttpRequestMessage)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.GetRequest(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.MatrixParameters(System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.PostRequest(System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.PutRequest(System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
      </containers>
      <file name="T_Sif_Framework_Utils_HttpUtils" />
    </api>
    <api id="Methods.T:Sif.Framework.Utils.HttpUtils">
      <topicdata name="HttpUtils" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Utils.HttpUtils" />
      <apidata name="HttpUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.Utils.HttpUtils.CreateErrorResponse">
          <element api="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)" />
          <element api="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)" />
        </element>
        <element api="Overload:Sif.Framework.Utils.HttpUtils.DeleteRequest">
          <element api="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String)" />
          <element api="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:Sif.Framework.Utils.HttpUtils.GetAccept(System.Net.Http.HttpRequestMessage)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.GetContentType(System.Net.Http.HttpRequestMessage)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.GetRequest(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.MatrixParameters(System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.PostRequest(System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.PutRequest(System.String,System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" />
      </containers>
      <file name="Methods_T_Sif_Framework_Utils_HttpUtils" />
    </api>
    <api id="Overload:Sif.Framework.Utils.HttpUtils.CreateErrorResponse">
      <topicdata name="CreateErrorResponse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="CreateErrorResponse" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Utils_HttpUtils_CreateErrorResponse" />
    </api>
    <api id="Overload:Sif.Framework.Utils.HttpUtils.DeleteRequest">
      <topicdata name="DeleteRequest" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="" />
      <apidata name="DeleteRequest" group="member" subgroup="method" />
      <elements>
        <element api="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String)" />
        <element api="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_Utils_HttpUtils_DeleteRequest" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.Exception)">
      <topicdata group="api" />
      <apidata name="CreateErrorResponse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Sif.Framework.Utils.HttpUtils.CreateErrorResponse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="httpStatusCode">
          <type api="T:System.Net.HttpStatusCode" ref="false" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_CreateErrorResponse" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.CreateErrorResponse(System.Net.Http.HttpRequestMessage,System.Net.HttpStatusCode,System.String)">
      <topicdata group="api" />
      <apidata name="CreateErrorResponse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Sif.Framework.Utils.HttpUtils.CreateErrorResponse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="httpStatusCode">
          <type api="T:System.Net.HttpStatusCode" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_CreateErrorResponse_1" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="DeleteRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Sif.Framework.Utils.HttpUtils.DeleteRequest" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorisationToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_DeleteRequest" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.DeleteRequest(System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="DeleteRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Sif.Framework.Utils.HttpUtils.DeleteRequest" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorisationToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_DeleteRequest_1" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.GetAccept(System.Net.Http.HttpRequestMessage)">
      <topicdata group="api" />
      <apidata name="GetAccept" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_GetAccept" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.GetContentType(System.Net.Http.HttpRequestMessage)">
      <topicdata group="api" />
      <apidata name="GetContentType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="Request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_GetContentType" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.GetRequest(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorisationToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="navigationPage" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="navigationPageSize" optional="true">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_GetRequest" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.MatrixParameters(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="MatrixParameters" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="zone" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="context" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_MatrixParameters" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.PostRequest(System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="PostRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorisationToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="methodOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_PostRequest" />
    </api>
    <api id="M:Sif.Framework.Utils.HttpUtils.PutRequest(System.String,System.String,System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="PutRequest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authorisationToken">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="methodOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="contentTypeOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="acceptOverride" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.HttpUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_HttpUtils_PutRequest" />
    </api>
    <api id="T:Sif.Framework.Utils.RegistrationManager">
      <topicdata group="api" />
      <apidata name="RegistrationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Utils.RegistrationManager.ConsumerRegistrationService" />
        <element api="P:Sif.Framework.Utils.RegistrationManager.ProviderRegistrationService" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
      </containers>
      <file name="T_Sif_Framework_Utils_RegistrationManager" />
    </api>
    <api id="Properties.T:Sif.Framework.Utils.RegistrationManager">
      <topicdata name="RegistrationManager" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Utils.RegistrationManager" />
      <apidata name="RegistrationManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Utils.RegistrationManager.ConsumerRegistrationService" />
        <element api="P:Sif.Framework.Utils.RegistrationManager.ProviderRegistrationService" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.RegistrationManager" />
      </containers>
      <file name="Properties_T_Sif_Framework_Utils_RegistrationManager" />
    </api>
    <api id="P:Sif.Framework.Utils.RegistrationManager.ConsumerRegistrationService">
      <topicdata group="api" />
      <apidata name="ConsumerRegistrationService" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConsumerRegistrationService" />
      <returns>
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.RegistrationManager" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Utils_RegistrationManager_ConsumerRegistrationService" />
    </api>
    <api id="P:Sif.Framework.Utils.RegistrationManager.ProviderRegistrationService">
      <topicdata group="api" />
      <apidata name="ProviderRegistrationService" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderRegistrationService" />
      <returns>
        <type api="T:Sif.Framework.Service.Registration.IRegistrationService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.RegistrationManager" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Utils_RegistrationManager_ProviderRegistrationService" />
    </api>
    <api id="T:Sif.Framework.Utils.RightsUtils">
      <topicdata group="api" />
      <apidata name="RightsUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Sif.Framework.Utils.RightsUtils.CheckRight(System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.Right)" />
        <element api="M:Sif.Framework.Utils.RightsUtils.getRights(Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
      </containers>
      <file name="T_Sif_Framework_Utils_RightsUtils" />
    </api>
    <api id="Methods.T:Sif.Framework.Utils.RightsUtils">
      <topicdata name="RightsUtils" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Utils.RightsUtils" />
      <apidata name="RightsUtils" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Sif.Framework.Utils.RightsUtils.CheckRight(System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.Right)" />
        <element api="M:Sif.Framework.Utils.RightsUtils.getRights(Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.RightsUtils" />
      </containers>
      <file name="Methods_T_Sif_Framework_Utils_RightsUtils" />
    </api>
    <api id="M:Sif.Framework.Utils.RightsUtils.CheckRight(System.Collections.Generic.IDictionary{System.String,Sif.Framework.Model.Infrastructure.Right},Sif.Framework.Model.Infrastructure.Right)">
      <topicdata group="api" />
      <apidata name="CheckRight" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rights">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="right">
          <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.RightsUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_RightsUtils_CheckRight" />
    </api>
    <api id="M:Sif.Framework.Utils.RightsUtils.getRights(Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue,Sif.Framework.Model.Infrastructure.RightValue)">
      <topicdata group="api" />
      <apidata name="getRights" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="admin" optional="true">
          <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
          <argument>
            <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
            <enumValue>
              <field name="REJECTED" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="create" optional="true">
          <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
          <argument>
            <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
            <enumValue>
              <field name="REJECTED" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="delete" optional="true">
          <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
          <argument>
            <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
            <enumValue>
              <field name="REJECTED" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="provide" optional="true">
          <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
          <argument>
            <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
            <enumValue>
              <field name="REJECTED" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="query" optional="true">
          <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
          <argument>
            <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
            <enumValue>
              <field name="REJECTED" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="subscribe" optional="true">
          <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
          <argument>
            <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
            <enumValue>
              <field name="REJECTED" />
            </enumValue>
          </argument>
        </parameter>
        <parameter name="update" optional="true">
          <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
          <argument>
            <type api="T:Sif.Framework.Model.Infrastructure.RightValue" ref="false" />
            <enumValue>
              <field name="REJECTED" />
            </enumValue>
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Sif.Framework.Model.Infrastructure.Right" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.RightsUtils" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_RightsUtils_getRights" />
    </api>
    <api id="T:Sif.Framework.Utils.SessionsManager">
      <topicdata group="api" />
      <apidata name="SessionsManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Utils.SessionsManager.ConsumerSessionService" />
        <element api="P:Sif.Framework.Utils.SessionsManager.ProviderSessionService" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
      </containers>
      <file name="T_Sif_Framework_Utils_SessionsManager" />
    </api>
    <api id="Properties.T:Sif.Framework.Utils.SessionsManager">
      <topicdata name="SessionsManager" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Utils.SessionsManager" />
      <apidata name="SessionsManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Utils.SessionsManager.ConsumerSessionService" />
        <element api="P:Sif.Framework.Utils.SessionsManager.ProviderSessionService" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.SessionsManager" />
      </containers>
      <file name="Properties_T_Sif_Framework_Utils_SessionsManager" />
    </api>
    <api id="P:Sif.Framework.Utils.SessionsManager.ConsumerSessionService">
      <topicdata group="api" />
      <apidata name="ConsumerSessionService" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConsumerSessionService" />
      <returns>
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.SessionsManager" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Utils_SessionsManager_ConsumerSessionService" />
    </api>
    <api id="P:Sif.Framework.Utils.SessionsManager.ProviderSessionService">
      <topicdata group="api" />
      <apidata name="ProviderSessionService" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderSessionService" />
      <returns>
        <type api="T:Sif.Framework.Service.Sessions.ISessionService" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.SessionsManager" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Utils_SessionsManager_ProviderSessionService" />
    </api>
    <api id="T:Sif.Framework.Utils.SettingsManager">
      <topicdata group="api" />
      <apidata name="SettingsManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Sif.Framework.Utils.SettingsManager.ConsumerSettings" />
        <element api="P:Sif.Framework.Utils.SettingsManager.ProviderSettings" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
      </containers>
      <file name="T_Sif_Framework_Utils_SettingsManager" />
    </api>
    <api id="Properties.T:Sif.Framework.Utils.SettingsManager">
      <topicdata name="SettingsManager" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.Utils.SettingsManager" />
      <apidata name="SettingsManager" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.Utils.SettingsManager.ConsumerSettings" />
        <element api="P:Sif.Framework.Utils.SettingsManager.ProviderSettings" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.SettingsManager" />
      </containers>
      <file name="Properties_T_Sif_Framework_Utils_SettingsManager" />
    </api>
    <api id="P:Sif.Framework.Utils.SettingsManager.ConsumerSettings">
      <topicdata group="api" />
      <apidata name="ConsumerSettings" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConsumerSettings" />
      <returns>
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.SettingsManager" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Utils_SettingsManager_ConsumerSettings" />
    </api>
    <api id="P:Sif.Framework.Utils.SettingsManager.ProviderSettings">
      <topicdata group="api" />
      <apidata name="ProviderSettings" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProviderSettings" />
      <returns>
        <type api="T:Sif.Framework.Model.Settings.IFrameworkSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.SettingsManager" ref="true" />
      </containers>
      <file name="P_Sif_Framework_Utils_SettingsManager_ProviderSettings" />
    </api>
    <api id="T:Sif.Framework.Utils.TraceExceptionLogger">
      <topicdata group="api" />
      <apidata name="TraceExceptionLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ExceptionHandling.ExceptionLogger" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ExceptionHandling.ExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
          <apidata name="LogAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ExceptionHandling" />
            <type api="T:System.Web.Http.ExceptionHandling.ExceptionLogger" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ExceptionHandling.ExceptionLogger.ShouldLog(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
          <apidata name="ShouldLog" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ExceptionHandling" />
            <type api="T:System.Web.Http.ExceptionHandling.ExceptionLogger" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Utils.TraceExceptionLogger.#ctor" />
        <element api="M:Sif.Framework.Utils.TraceExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
      </containers>
      <file name="T_Sif_Framework_Utils_TraceExceptionLogger" />
    </api>
    <api id="Methods.T:Sif.Framework.Utils.TraceExceptionLogger">
      <topicdata name="TraceExceptionLogger" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.Utils.TraceExceptionLogger" />
      <apidata name="TraceExceptionLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ExceptionHandling.ExceptionLogger.LogAsync(System.Web.Http.ExceptionHandling.ExceptionLoggerContext,System.Threading.CancellationToken)">
          <apidata name="LogAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ExceptionHandling" />
            <type api="T:System.Web.Http.ExceptionHandling.ExceptionLogger" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ExceptionHandling.ExceptionLogger.ShouldLog(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
          <apidata name="ShouldLog" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ExceptionHandling" />
            <type api="T:System.Web.Http.ExceptionHandling.ExceptionLogger" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.Utils.TraceExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.TraceExceptionLogger" />
      </containers>
      <file name="Methods_T_Sif_Framework_Utils_TraceExceptionLogger" />
    </api>
    <api id="M:Sif.Framework.Utils.TraceExceptionLogger.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.TraceExceptionLogger" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_TraceExceptionLogger__ctor" />
    </api>
    <api id="M:Sif.Framework.Utils.TraceExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
      <topicdata group="api" />
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.Http.ExceptionHandling.ExceptionLogger.Log(System.Web.Http.ExceptionHandling.ExceptionLoggerContext)">
          <type api="T:System.Web.Http.ExceptionHandling.ExceptionLogger" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.Http.ExceptionHandling.ExceptionLoggerContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.Utils" />
        <type api="T:Sif.Framework.Utils.TraceExceptionLogger" ref="true" />
      </containers>
      <file name="M_Sif_Framework_Utils_TraceExceptionLogger_Log" />
    </api>
    <api id="N:Sif.Framework.WebApi">
      <topicdata group="api" />
      <apidata name="Sif.Framework.WebApi" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.WebApi.MethodOverrideHandler" />
        <element api="T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler" />
        <element api="T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver" />
      </elements>
      <file name="N_Sif_Framework_WebApi" />
    </api>
    <api id="T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler">
      <topicdata group="api" />
      <apidata name="GlobalUnexpectedExceptionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ExceptionHandling.ExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
          <apidata name="HandleAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ExceptionHandling" />
            <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandler" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ExceptionHandling.ExceptionHandler.ShouldHandle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
          <apidata name="ShouldHandle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ExceptionHandling" />
            <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandler" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.#ctor" />
        <element api="M:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
      </containers>
      <file name="T_Sif_Framework_WebApi_GlobalUnexpectedExceptionHandler" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler">
      <topicdata name="GlobalUnexpectedExceptionHandler" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler" />
      <apidata name="GlobalUnexpectedExceptionHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ExceptionHandling.ExceptionHandler.HandleAsync(System.Web.Http.ExceptionHandling.ExceptionHandlerContext,System.Threading.CancellationToken)">
          <apidata name="HandleAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" ref="true" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ExceptionHandling" />
            <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandler" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ExceptionHandling.ExceptionHandler.ShouldHandle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
          <apidata name="ShouldHandle" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="context">
              <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ExceptionHandling" />
            <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandler" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_GlobalUnexpectedExceptionHandler" />
    </api>
    <api id="M:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_GlobalUnexpectedExceptionHandler__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
      <topicdata group="api" />
      <apidata name="Handle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.Http.ExceptionHandling.ExceptionHandler.Handle(System.Web.Http.ExceptionHandling.ExceptionHandlerContext)">
          <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.Web.Http.ExceptionHandling.ExceptionHandlerContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.GlobalUnexpectedExceptionHandler" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_GlobalUnexpectedExceptionHandler_Handle" />
    </api>
    <api id="T:Sif.Framework.WebApi.MethodOverrideHandler">
      <topicdata group="api" />
      <apidata name="MethodOverrideHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
          <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="Overload:Sif.Framework.WebApi.MethodOverrideHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Net.Http" />
              <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
            </containers>
          </element>
          <element api="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <overrides>
              <member api="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
                <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
              </member>
            </overrides>
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Net.Http" />
              <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
            </containers>
          </element>
        </element>
        <element api="P:System.Net.Http.DelegatingHandler.InnerHandler">
          <apidata name="InnerHandler" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InnerHandler" />
          <setter name="set_InnerHandler" />
          <returns>
            <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Net.Http" />
            <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.MethodOverrideHandler.#ctor" />
        <element api="M:Sif.Framework.WebApi.MethodOverrideHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
      </containers>
      <file name="T_Sif_Framework_WebApi_MethodOverrideHandler" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.MethodOverrideHandler">
      <topicdata name="MethodOverrideHandler" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.MethodOverrideHandler" />
      <apidata name="MethodOverrideHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="Overload:Sif.Framework.WebApi.MethodOverrideHandler.Dispose">
          <element api="M:System.Net.Http.HttpMessageHandler.Dispose">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="public" />
            <proceduredata virtual="true" final="true" />
            <implements>
              <member api="M:System.IDisposable.Dispose">
                <type api="T:System.IDisposable" ref="true" />
              </member>
            </implements>
            <containers>
              <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Net.Http" />
              <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
            </containers>
          </element>
          <element api="M:System.Net.Http.DelegatingHandler.Dispose(System.Boolean)">
            <apidata name="Dispose" group="member" subgroup="method" />
            <memberdata visibility="family" />
            <proceduredata virtual="true" />
            <overrides>
              <member api="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)">
                <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
              </member>
            </overrides>
            <parameters>
              <parameter name="disposing">
                <type api="T:System.Boolean" ref="false" />
              </parameter>
            </parameters>
            <containers>
              <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary" />
              <namespace api="N:System.Net.Http" />
              <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
            </containers>
          </element>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.MethodOverrideHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.MethodOverrideHandler" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_MethodOverrideHandler" />
    </api>
    <api id="Properties.T:Sif.Framework.WebApi.MethodOverrideHandler">
      <topicdata name="MethodOverrideHandler" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.WebApi.MethodOverrideHandler" />
      <apidata name="MethodOverrideHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Net.Http.DelegatingHandler.InnerHandler">
          <apidata name="InnerHandler" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_InnerHandler" />
          <setter name="set_InnerHandler" />
          <returns>
            <type api="T:System.Net.Http.HttpMessageHandler" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Net.Http" module="System.Net.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Net.Http" />
            <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.MethodOverrideHandler" />
      </containers>
      <file name="Properties_T_Sif_Framework_WebApi_MethodOverrideHandler" />
    </api>
    <api id="M:Sif.Framework.WebApi.MethodOverrideHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.MethodOverrideHandler" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_MethodOverrideHandler__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.MethodOverrideHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
      <topicdata group="api" />
      <apidata name="SendAsync" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Net.Http.DelegatingHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)">
          <type api="T:System.Net.Http.DelegatingHandler" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="cancellationToken">
          <type api="T:System.Threading.CancellationToken" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Threading.Tasks.Task`1" ref="true">
          <specialization>
            <type api="T:System.Net.Http.HttpResponseMessage" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.MethodOverrideHandler" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_MethodOverrideHandler_SendAsync" />
    </api>
    <api id="T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver">
      <topicdata group="api" />
      <apidata name="ServiceProviderHttpControllerTypeResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
          <apidata name="GetControllerTypes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="assembliesResolver">
              <type api="T:System.Web.Http.Dispatcher.IAssembliesResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
              <type api="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.Dispatcher" />
            <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
          <apidata name="IsControllerTypePredicate" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsControllerTypePredicate" />
          <returns>
            <type api="T:System.Predicate`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.Dispatcher" />
            <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver.#ctor" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
      </containers>
      <file name="T_Sif_Framework_WebApi_ServiceProviderHttpControllerTypeResolver" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver">
      <topicdata name="ServiceProviderHttpControllerTypeResolver" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver" />
      <apidata name="ServiceProviderHttpControllerTypeResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
          <apidata name="GetControllerTypes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="assembliesResolver">
              <type api="T:System.Web.Http.Dispatcher.IAssembliesResolver" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.ICollection`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Dispatcher.IHttpControllerTypeResolver.GetControllerTypes(System.Web.Http.Dispatcher.IAssembliesResolver)">
              <type api="T:System.Web.Http.Dispatcher.IHttpControllerTypeResolver" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.Dispatcher" />
            <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_ServiceProviderHttpControllerTypeResolver" />
    </api>
    <api id="Properties.T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver">
      <topicdata name="ServiceProviderHttpControllerTypeResolver" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver" />
      <apidata name="ServiceProviderHttpControllerTypeResolver" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver.IsControllerTypePredicate">
          <apidata name="IsControllerTypePredicate" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsControllerTypePredicate" />
          <returns>
            <type api="T:System.Predicate`1" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.Dispatcher" />
            <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerTypeResolver" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver" />
      </containers>
      <file name="Properties_T_Sif_Framework_WebApi_ServiceProviderHttpControllerTypeResolver" />
    </api>
    <api id="M:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi" />
        <type api="T:Sif.Framework.WebApi.ServiceProviderHttpControllerTypeResolver" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ServiceProviderHttpControllerTypeResolver__ctor" />
    </api>
    <api id="N:Sif.Framework.WebApi.ControllerSelectors">
      <topicdata group="api" />
      <apidata name="Sif.Framework.WebApi.ControllerSelectors" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector" />
      </elements>
      <file name="N_Sif_Framework_WebApi_ControllerSelectors" />
    </api>
    <api id="T:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector">
      <topicdata group="api" />
      <apidata name="ServiceProviderHttpControllerSelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
          <apidata name="SelectController" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="request">
              <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerDescriptor" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
              <type api="T:System.Web.Http.Dispatcher.IHttpControllerSelector" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.Dispatcher" />
            <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
          <apidata name="GetControllerMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Web.Http.Controllers.HttpControllerDescriptor" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
              <type api="T:System.Web.Http.Dispatcher.IHttpControllerSelector" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.Dispatcher" />
            <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)" />
        <element api="M:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ControllerSelectors" />
      </containers>
      <file name="T_Sif_Framework_WebApi_ControllerSelectors_ServiceProviderHttpControllerSelector" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector">
      <topicdata name="ServiceProviderHttpControllerSelector" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector" />
      <apidata name="ServiceProviderHttpControllerSelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
          <apidata name="SelectController" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="request">
              <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.Controllers.HttpControllerDescriptor" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Web.Http.Dispatcher.IHttpControllerSelector.SelectController(System.Net.Http.HttpRequestMessage)">
              <type api="T:System.Web.Http.Dispatcher.IHttpControllerSelector" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.Dispatcher" />
            <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerMapping">
          <apidata name="GetControllerMapping" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Web.Http.Controllers.HttpControllerDescriptor" ref="true" />
              </specialization>
            </type>
          </returns>
          <implements>
            <member api="M:System.Web.Http.Dispatcher.IHttpControllerSelector.GetControllerMapping">
              <type api="T:System.Web.Http.Dispatcher.IHttpControllerSelector" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.Dispatcher" />
            <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ControllerSelectors" />
        <type api="T:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_ControllerSelectors_ServiceProviderHttpControllerSelector" />
    </api>
    <api id="M:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector.#ctor(System.Web.Http.HttpConfiguration)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="config">
          <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ControllerSelectors" />
        <type api="T:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ControllerSelectors_ServiceProviderHttpControllerSelector__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
      <topicdata group="api" />
      <apidata name="GetControllerName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.Http.Dispatcher.DefaultHttpControllerSelector.GetControllerName(System.Net.Http.HttpRequestMessage)">
          <type api="T:System.Web.Http.Dispatcher.DefaultHttpControllerSelector" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ControllerSelectors" />
        <type api="T:Sif.Framework.WebApi.ControllerSelectors.ServiceProviderHttpControllerSelector" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ControllerSelectors_ServiceProviderHttpControllerSelector_GetControllerName" />
    </api>
    <api id="N:Sif.Framework.WebApi.ModelBinders">
      <topicdata group="api" />
      <apidata name="Sif.Framework.WebApi.ModelBinders" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" />
        <element api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder" />
        <element api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute" />
        <element api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder" />
      </elements>
      <file name="N_Sif_Framework_WebApi_ModelBinders" />
    </api>
    <api id="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute">
      <topicdata group="api" />
      <apidata name="MatrixParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          <type api="T:System.Web.Http.ParameterBindingAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
          <apidata name="GetModelBinderProvider" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelBinderProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
          <apidata name="GetModelBinder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
            <parameter name="modelType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.ModelBinding.IModelBinder" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
          <apidata name="GetValueProviderFactories" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Web.Http.ValueProviders.ValueProviderFactory" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
          <apidata name="BinderType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BinderType" />
          <setter name="set_BinderType" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
          <apidata name="SuppressPrefixCheck" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SuppressPrefixCheck" />
          <setter name="set_SuppressPrefixCheck" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="Overload:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor">
          <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor" />
          <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor(System.String)" />
        </element>
        <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)" />
        <element api="P:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.Segment" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
      </containers>
      <file name="T_Sif_Framework_WebApi_ModelBinders_MatrixParameterAttribute" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute">
      <topicdata name="MatrixParameterAttribute" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" />
      <apidata name="MatrixParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
          <apidata name="GetModelBinderProvider" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelBinderProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
          <apidata name="GetModelBinder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
            <parameter name="modelType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.ModelBinding.IModelBinder" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
          <apidata name="GetValueProviderFactories" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Web.Http.ValueProviders.ValueProviderFactory" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_ModelBinders_MatrixParameterAttribute" />
    </api>
    <api id="Properties.T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute">
      <topicdata name="MatrixParameterAttribute" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" />
      <apidata name="MatrixParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
          <apidata name="BinderType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BinderType" />
          <setter name="set_BinderType" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
          <apidata name="SuppressPrefixCheck" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SuppressPrefixCheck" />
          <setter name="set_SuppressPrefixCheck" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.Segment" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" />
      </containers>
      <file name="Properties_T_Sif_Framework_WebApi_ModelBinders_MatrixParameterAttribute" />
    </api>
    <api id="Overload:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor" />
        <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" ref="true" />
      </containers>
      <file name="Overload_Sif_Framework_WebApi_ModelBinders_MatrixParameterAttribute__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_MatrixParameterAttribute__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.#ctor" />
      <parameters>
        <parameter name="segment">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_MatrixParameterAttribute__ctor_1" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <topicdata group="api" />
      <apidata name="GetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
          <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Web.Http.Controllers.HttpParameterDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.Controllers.HttpParameterBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_MatrixParameterAttribute_GetBinding" />
    </api>
    <api id="P:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute.Segment">
      <topicdata group="api" />
      <apidata name="Segment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Segment" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterAttribute" ref="true" />
      </containers>
      <file name="P_Sif_Framework_WebApi_ModelBinders_MatrixParameterAttribute_Segment" />
    </api>
    <api id="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder">
      <topicdata group="api" />
      <apidata name="MatrixParameterModelBinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Http.ModelBinding.IModelBinder" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.#ctor(System.String)" />
        <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)" />
        <element api="P:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.Segment" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
      </containers>
      <file name="T_Sif_Framework_WebApi_ModelBinders_MatrixParameterModelBinder" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder">
      <topicdata name="MatrixParameterModelBinder" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder" />
      <apidata name="MatrixParameterModelBinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_ModelBinders_MatrixParameterModelBinder" />
    </api>
    <api id="Properties.T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder">
      <topicdata name="MatrixParameterModelBinder" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder" />
      <apidata name="MatrixParameterModelBinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.Segment" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder" />
      </containers>
      <file name="Properties_T_Sif_Framework_WebApi_ModelBinders_MatrixParameterModelBinder" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="segment">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_MatrixParameterModelBinder__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <topicdata group="api" />
      <apidata name="BindModel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="actionContext">
          <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
        </parameter>
        <parameter name="bindingContext">
          <type api="T:System.Web.Http.ModelBinding.ModelBindingContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
          <type api="T:System.Web.Http.ModelBinding.IModelBinder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_MatrixParameterModelBinder_BindModel" />
    </api>
    <api id="P:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder.Segment">
      <topicdata group="api" />
      <apidata name="Segment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Segment" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.MatrixParameterModelBinder" ref="true" />
      </containers>
      <file name="P_Sif_Framework_WebApi_ModelBinders_MatrixParameterModelBinder_Segment" />
    </api>
    <api id="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute">
      <topicdata group="api" />
      <apidata name="SegmentPrefixAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          <type api="T:System.Web.Http.ParameterBindingAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
          <apidata name="GetModelBinderProvider" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelBinderProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
          <apidata name="GetModelBinder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
            <parameter name="modelType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.ModelBinding.IModelBinder" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
          <apidata name="GetValueProviderFactories" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Web.Http.ValueProviders.ValueProviderFactory" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
          <apidata name="BinderType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BinderType" />
          <setter name="set_BinderType" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
          <apidata name="SuppressPrefixCheck" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SuppressPrefixCheck" />
          <setter name="set_SuppressPrefixCheck" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute.#ctor" />
        <element api="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
      </containers>
      <file name="T_Sif_Framework_WebApi_ModelBinders_SegmentPrefixAttribute" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute">
      <topicdata name="SegmentPrefixAttribute" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute" />
      <apidata name="SegmentPrefixAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinderProvider(System.Web.Http.HttpConfiguration)">
          <apidata name="GetModelBinderProvider" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.ModelBinding.ModelBinderProvider" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetModelBinder(System.Web.Http.HttpConfiguration,System.Type)">
          <apidata name="GetModelBinder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
            <parameter name="modelType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Web.Http.ModelBinding.IModelBinder" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetValueProviderFactories(System.Web.Http.HttpConfiguration)">
          <apidata name="GetValueProviderFactories" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="configuration">
              <type api="T:System.Web.Http.HttpConfiguration" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Web.Http.ValueProviders.ValueProviderFactory" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_ModelBinders_SegmentPrefixAttribute" />
    </api>
    <api id="Properties.T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute">
      <topicdata name="SegmentPrefixAttribute" group="list" subgroup="Properties" typeTopicId="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute" />
      <apidata name="SegmentPrefixAttribute" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.BinderType">
          <apidata name="BinderType" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_BinderType" />
          <setter name="set_BinderType" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.Name">
          <apidata name="Name" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_Name" />
          <setter name="set_Name" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Web.Http.ModelBinding.ModelBinderAttribute.SuppressPrefixCheck">
          <apidata name="SuppressPrefixCheck" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_SuppressPrefixCheck" />
          <setter name="set_SuppressPrefixCheck" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Web.Http" module="System.Web.Http" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Web.Http.ModelBinding" />
            <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute" />
      </containers>
      <file name="Properties_T_Sif_Framework_WebApi_ModelBinders_SegmentPrefixAttribute" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_SegmentPrefixAttribute__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
      <topicdata group="api" />
      <apidata name="GetBinding" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Web.Http.ModelBinding.ModelBinderAttribute.GetBinding(System.Web.Http.Controllers.HttpParameterDescriptor)">
          <type api="T:System.Web.Http.ModelBinding.ModelBinderAttribute" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Web.Http.Controllers.HttpParameterDescriptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Web.Http.Controllers.HttpParameterBinding" ref="true" />
      </returns>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixAttribute" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_SegmentPrefixAttribute_GetBinding" />
    </api>
    <api id="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder">
      <topicdata group="api" />
      <apidata name="SegmentPrefixModelBinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Http.ModelBinding.IModelBinder" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder.#ctor" />
        <element api="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
      </containers>
      <file name="T_Sif_Framework_WebApi_ModelBinders_SegmentPrefixModelBinder" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder">
      <topicdata name="SegmentPrefixModelBinder" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder" />
      <apidata name="SegmentPrefixModelBinder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_ModelBinders_SegmentPrefixModelBinder" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_SegmentPrefixModelBinder__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
      <topicdata group="api" />
      <apidata name="BindModel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="actionContext">
          <type api="T:System.Web.Http.Controllers.HttpActionContext" ref="true" />
        </parameter>
        <parameter name="bindingContext">
          <type api="T:System.Web.Http.ModelBinding.ModelBindingContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Http.ModelBinding.IModelBinder.BindModel(System.Web.Http.Controllers.HttpActionContext,System.Web.Http.ModelBinding.ModelBindingContext)">
          <type api="T:System.Web.Http.ModelBinding.IModelBinder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.ModelBinders" />
        <type api="T:Sif.Framework.WebApi.ModelBinders.SegmentPrefixModelBinder" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_ModelBinders_SegmentPrefixModelBinder_BindModel" />
    </api>
    <api id="N:Sif.Framework.WebApi.RouteConstraints">
      <topicdata group="api" />
      <apidata name="Sif.Framework.WebApi.RouteConstraints" group="namespace" />
      <elements>
        <element api="T:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint" />
      </elements>
      <file name="N_Sif_Framework_WebApi_RouteConstraints" />
    </api>
    <api id="T:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint">
      <topicdata group="api" />
      <apidata name="SegmentPrefixConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Web.Http.Routing.IHttpRouteConstraint" ref="true" />
      </implements>
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint.#ctor" />
        <element api="M:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.RouteConstraints" />
      </containers>
      <file name="T_Sif_Framework_WebApi_RouteConstraints_SegmentPrefixConstraint" />
    </api>
    <api id="Methods.T:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint">
      <topicdata name="SegmentPrefixConstraint" group="list" subgroup="Methods" typeTopicId="T:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint" />
      <apidata name="SegmentPrefixConstraint" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)" />
      </elements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
        </library>
        <namespace api="N:Sif.Framework.WebApi.RouteConstraints" />
        <type api="T:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint" />
      </containers>
      <file name="Methods_T_Sif_Framework_WebApi_RouteConstraints_SegmentPrefixConstraint" />
    </api>
    <api id="M:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.RouteConstraints" />
        <type api="T:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_RouteConstraints_SegmentPrefixConstraint__ctor" />
    </api>
    <api id="M:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:System.Net.Http.HttpRequestMessage" ref="true" />
        </parameter>
        <parameter name="route">
          <type api="T:System.Web.Http.Routing.IHttpRoute" ref="true" />
        </parameter>
        <parameter name="segmentPrefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="routeDirection">
          <type api="T:System.Web.Http.Routing.HttpRouteDirection" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Web.Http.Routing.IHttpRouteConstraint.Match(System.Net.Http.HttpRequestMessage,System.Web.Http.Routing.IHttpRoute,System.String,System.Collections.Generic.IDictionary{System.String,System.Object},System.Web.Http.Routing.HttpRouteDirection)">
          <type api="T:System.Web.Http.Routing.IHttpRouteConstraint" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Sif.Framework" module="Sif.Framework" kind="DynamicallyLinkedLibrary">
          <assemblydata version="2.0.0.0 (2.0.0.0)" />
          <noAptca />
        </library>
        <namespace api="N:Sif.Framework.WebApi.RouteConstraints" />
        <type api="T:Sif.Framework.WebApi.RouteConstraints.SegmentPrefixConstraint" ref="true" />
      </containers>
      <file name="M_Sif_Framework_WebApi_RouteConstraints_SegmentPrefixConstraint_Match" />
    </api>
  </apis>
</reflection>